%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: diagram_all.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Shanon McIntyre
%%CreationDate: 5/4/2009
%%BoundingBox: 0 0 999 234
%%HiResBoundingBox: 0 0 998.7251 233.2862
%%CropBox: 0 0 998.7251 233.2862
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 32 8%%BeginData: 9622 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45A27EA27DA87EA27DA87EA27DA87EA27DA87DA27DA27DA27DA27DA2
%7DA27DA27DA27DA27D7EA8FFFFFF7DA27DA27DA27DA27DA27DA27DA27DA2
%7DA27DA27DA27DA27DA27DA27DA27DA27DA27DA27DA8FFFFFF7E777E7DA1
%77A27DA177A27DA177A27D7E77A27DA177A27DA177A27DA177A27D7E777D
%777D7EFD08FF77AF84A984A984A984A984A984A984A984A984A984A984A9
%84AF84A984A984A984A984A97DA2FFFFA27D84A884A884A884A884A884A8
%84A884A884A884A884A884A884A884A884A884A884A8847E77FFFFFF7699
%757C84A984A984A97EA984A87EA984A884A984A87EA984A884A884A884A9
%8484759F757DCBFD07FF7EA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFAFAFA9AFAFA87DFFFFCB7DAFA8AFA8AFA8AFA8
%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF83A2FF
%FFCBA1999F7CAFAFAFA9AFAFAFA9AFA9AFA9AFA9AFA8AFA9AFA9AFA9AFA8
%AFA9AFA8AFA8A0759F7DFD08FF77AF84AF84AF84AF84AF84AF84AF84AF84
%AF84AF84AF84AF84AF84AF84A984AF84AF84AF7CA1FFFFA87D84A8A8A884
%A9A8A884A9A8A884A8A8A884A8A8A884A8A8A884A8A8A884A9A8A884A8A8
%7D77FFFFFF769F75A084AFA8AF84AFA8AF84AFA8A984AFA8A984AFA8AF84
%AFA8A984AFA8A984A87599747DCBFD07FF7DA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFAFAFA9AFA97DA1FFFFCB7DAF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AF7CA2FFFFCBA1999F7CAFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA8AFA9AFA9AFA8A0759F7DFD08FF77AF84AFA8AF84AFA8AF
%84AFA8AF84AFA8AF84AFA8AF84AFA8AF84AFA8A984AFA8AFA8A875A2FFFF
%A87DA8A8A9A884A9FD06A884A8A8A884FD07A884FD04A8A9A8A8A8A9A87C
%7DFFFFFF769F75A084AFA8AFA8AFA8AFA8AFA8AFA8AFA8A9A8AFA8A9A8AF
%A8A9A8AFA8A9A8A8759F757DFD08FF7D7EA9A8AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9A97D76A2FFFFCB7DAFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8A875A2FFFFFF76999F7CAFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA8AFA9AFA8AFA9AF84A0999F77FD08FF51A87EAF84AF84AF84AF84AF
%84AF84AF84AF84AF84AF84AF84AFA8AF84AF84AF84AF7EA175A8FFFFA87D
%A8A884A8A8A884A8A8A884A8A8A884A8A8A884A8A8A884A8A8A884A8A8A8
%84A8A8A97C7B7DFFFFFF769975A184A984AFA8A984AFA8A984AFA8A984AF
%A8A984AFA8A984A9A8A984A9A8A875A0757DA8FD07FF7CA1A9A9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9A97CA0A8
%FFFFFF76A8A9AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA9
%AFA8AFA8AFA9AFA8A175A2FFFFFF9B999F7CAFA9AFA9AFA9AFAFAFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF84A0999F7DFD08FF51A07EAFA8
%AFA9AFA8AFA8AF84AFA8AF84AFA8AF84AFA8AF84AFA8AF84AFA9AFA8AF7E
%9A75A8FFFFA8767CA884FD07A884FD0FA884A8A8A884A8A9A875A07DFFFF
%FF769F75A1A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8A9A8
%A984AFA8A875A0757DCBFD07FF7C75A8A8A9A8A984A9A9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9A984AFA9A884A875A0A7FFFFCB76A0A8AFA8AF
%A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8A0
%75A2FFFFCB7D999F7CAFAFAFA9AFA9A8A8AFA9A8A8AFA9AFA8AFA9A9A8AF
%A8AFA8AFA8AFA8AFA8A0759F7DFD08FF51997D59527E527D52A984AF84AF
%84AF84AF84AF84AF84AF84AF84AF7D59597E2752529975A8FFFFA87674A1
%7D7D7E7D597D84A9A8A884A9A8A884A9A8A884A9A8A884A9A9A8597E7E52
%528375757DFFFFFF769F757C59847D7D7D84A8A984AFA8A984AFA8A984AF
%A8A984AFA88459847D59527D7599747DCBFD07FF7C99A184A884A88484A9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFAFA984A8A8847DA299A0A8FFFF
%CB769F7C7D59A8527D52AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF7E
%7D7D8452527D9F75A8FFFFCBA1999F7C7D7DA8527D59AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AF7D7D7D8452527DA0759F7DFD08FF759976AFA9AFA8
%AFA9AF84AFA8AF84AFA8AF84AFA8AF84AFA8AF84AFA8AFA8AFA9AF7D9975
%A8FFFFA87674A0A8A884A884FD05A884A8A8A884FD07A884A8A8A884A8A8
%A884A7747B7DFFFFFF769F75A084AFA8A984A9A8AFA8AFA8AFA8AFA8A9A8
%AFA8AFA8AFA8A884AFA8A984A8759F757DFD08FF7C999A7DA9A9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9A175A0A8FFFF
%FF769F75AFA9AFA8AFA9AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8
%AFA8AFA9AF7C9F75A2FFFFFF76999F7CAFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA8AFA9AFA9AFA9AF84A0999F77FD08FF519F757D7EAF84
%AF84AF84AF84AF84AF84AF84AF84AF84AF84AFA8AF84AF84AF84AF769975
%A8FFFFA876749F7DA9A8A884A8A8A884A8A8A884A8A8A884A8A8A884A8A8
%A884A8A8A884A884A074A07DFFFFFF769975A184A984AFA8A984AFA8A984
%A9A8A984AFA8A984AFA8A984A9A8A984A9A8A875A0757DA8FD07FF7C99A0
%7DA9A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9A9
%7EA099A0A8FFFFFF769F75A8A9AFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AF
%A8AFA9AFA8AFA9AFA8AFA9A97B9F75A2FFFFFFA0999F7CAFA9AFA9AFA9AF
%A9AFA9AFAFAFA9AFA9AFA9AFAFAFA9AFA9AFA9AFA9AF84A0999F7DFD08FF
%519F75A17EAFA8AF84AFA8AF84AFA8AF84AFA8AF84AFA8AF84AFA8AF84AF
%A8AF7EA2759975A8FFFFA87C999F7DA9A8A884A8A8A884FD13A884A97D9F
%75A07DFFFFFF769975A1A8AFA8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AF
%A8A9A8A9A8A984AFA8A875A0757DCBFD07FF7C99A07DA9A9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA8AFA9A97D9F99A0A7FFFFCB76
%9F9FA8A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8
%AFA8A7999F75A2FFFFCB7D999F7CAFA9A9A8AFA9A9A8AFA9A9A8AFA9A9A8
%AFA9A9A8AFA8AFA8AFA8AFA8AFA8A0759F7DFD08FF519975A17EAF84AF84
%AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84A984AF7E7C759F75A8FF
%FFA876749F7DA984A9A8A884A8A8A884A8A8A884A8A8A884A8A8A884A8A8
%A884A9A9A8769F75757DFFFFFF769F75A084AFA8AF84AFA8AF84AFA8AF84
%AFA8AF84AFA8A984AFA8A984AFA8A984A87599747DCBFD07FF7C999F7CA9
%A9AFAFAFA9AFAFAFA9AFAFAFA9AFA9AFA9AFA9AFA9AFA9AFA9AFAFA875A0
%99A0A8FFFFCB769F99A1A8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8AFA8A0999F75A8FFFFCBA1999F7CAFA9AFA9AFA9AFA9AF
%A9AFA9AFAFAFA9AFA9AFA9AFA9AFA8AFA9AFA9AFA8A0759F7DFD08FF759F
%75997DA984AF84A984A9A8A984A984AF84AFA8AF84AFA8AF84AFA8A984AF
%7D99759F75A8FFFFA876749F75A1A8A9A8A884A884A884A984A884A9A8A8
%84A9A8A8A8A9A8A884A8A8A1749F99757DFFFFFF769F757C84AFA8A9A8AF
%A8A9A8AFA8AFA8A97DA8A8AFA8A884AF84A8A8AFFD04A8759F757DFD08FF
%7C99A075A07DA95252597E7D7D7D7E537D7DA97EA984A87EA9AFAFA9AFA9
%A97EA199A099A0A8FFFFFF769F999F9FA8A97D527D7DA859FD057DA8AFA9
%AFA9AFA9AFA8AFA8AFA9AF7C9F999F75A2FFFFFF76999F7CAFA9AFA9AFA9
%AFA9AFA9AFA9A876A07BA7A9A852527D84FD047D2E7D7DA0999F77FD08FF
%519F75997599777D527D7DA87D847D7E597D77A076A0767C77A884AF84A9
%7DA0759F759975A8FFFFA876749F759F75A1597D5984847E7D7D7D7E59A1
%7DA17CA07DA784A884A9A8A87C9F759F757C7DFFFFFF769975A1A8AF84AF
%A8AF84AFA8A97DA07599759F75A0767D528484A87D847D7D53A875A0757D
%A8FD07FF7C99A099A0999A7CA87EA27DA8A8A984A1769A99A0999F99A076
%A17DA87DA099A099A099A0A8FFFFFF769F999F999F75FD06A8AFA9AFA7A0
%7B9F999F759F9FA07DA8A8A87C9F999F999F75A2FFFFFF7D999F7CA9A9AF
%A9AFA9AFA8A87CA0999F99A0999F999FA0A783A8A8AFA9AFA8A87DA0999F
%7DFD08FF519F7599759F7599759975997599759975997599759F75997599
%759975997599759F759975A8FFFFA87C989F759F759F75A0759F75A07CA0
%769F999F759F759F759F759F75A0759F759F759F75A07DFFFFFF769F75A0
%75A076A076A0759F7599759F759F759F759F759F759975A075A0759F7575
%75A0757DCBFD07FF7C99A099A075A0999F75A0999F759F999F75A099A075
%A099A099A0999F75A099A075A099A0A7FFFFCB769F9F9F759F9F9F999F9F
%9F999F999F999F9F9F759F9F9F759F9F9F999F9F9F759F9F9F75A2FFFFA9
%7D99A075A0999F759F999F75A0999F75A0999F75A099A075A0999F759F99
%9F759F759F759F7DFD08FF5199759F7599759F7599759F7599759F759975
%9F7599759F7599759F759F759F7599759F75A8FFFFA876749F759F759F75
%9F759F759F759F759F759F759F759F759F759F759F759F759F759F75757D
%FFFFFF769F7575759F7599759F7599759F7599759F7599759F7599759F75
%9F759F759975A0757B747DCBFD07FF7C99A0999F99A0999F99A0999F99A0
%999F99A0999F99A0999F99A0999F99A0999F99A099A0A8FFFFCB769F9F9F
%999F9F9F999F9F9F999F9F9F999F9F9F999F9F9F999F9F9F999F9F9F999F
%9F9F75A8FFFFCBA1999F75A0999F99A0999F99A0999F99A0999F99A0999F
%99A0999F99A0999F999F7B9F999F7DFD08FF51FD237551A8FFFFA87674A0
%757B757C757B75A0757B759F757B75A0757B759F757B759F757B757B757B
%759F75757DFFFFFF52FD04757B7575757BFD07757B7575757B7575757C75
%75757B7575757C7576757DFD08FFA8A1A87DA8A1A87DA8A1A87DA8A1A87D
%A8A1A87DA8A1A87DA8A1A87DA8A7A87DA8A1A87DA8CAFFFFFF7777767D77
%77767D7777767D7777767D7777767D7677767D7777767D7777767D777776
%7D76A2FFFFFF7D767D777D777D777D777D777D777D777D777D777D777D77
%7D777D777D777D777D777D777D7DFD32FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD07FFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD0A
%FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:17:08        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic CMYK</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2009-05-04T21:14:40-06:00</xap:CreateDate>
         <xap:ModifyDate>2009-05-04T21:14:41-06:00</xap:ModifyDate>
         <xap:MetadataDate>2009-05-04T21:14:41-06:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>60</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAPAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6x5c0qxvdD025lF1JLNb&#xA;I0z/AFqccn4qGb+9HU1zNAHc4uXNISIvr3fsTBPL+mnhVLndan/Srjrt/wAW4REdzA559/2fscnl&#xA;/TTwqlzutT/pVx12/wCLcREdynPPv+z9jk8v6aeFUud1qf8ASrjrt/xbiIjuU559/wBn7Fo8taQ5&#xA;QvBO5K1Ja5mJ7eMvviAO5Tnn3tJ5Y0U8K20vxLU/v5uu3/FmICnPPvcPLGilYz9Wl+Lr+/m8Cf8A&#xA;fmNL48+9y+WNFLAG2l/a/wCPibsaD/dmNKc8+9w8saL8P+jS7sQf383QV/4s9saXx596aflk6Npu&#xA;qrEzNbx6nMluGZn4xiOOgBYk5hykDuPxu5xBoXzpJJ7KG/1vzE1w93JLb3gSIQ3M0apH6EZACrIi&#xA;9eRO2Xj6f7GOXLKMogEAUqy+XdPHr8RffCgK0vLjrv8AZrN+vJy68/saI6me24/Hf+x0vl3Tx61B&#xA;ffCqlaXlxsTWpFZvvrgl15/YsdTPbcdWpfLunr69Bf8AwoClLy467/ZrN+vGXXn9n2JjqZ+nePP8&#xA;X+xuby9p6+vxW++GMMvG8uOvxfZrN1274Zddjy8lhqJ7bjn+rnty9zpvL2nj1+K33wxhlpeXHX4v&#xA;s1m67d8Euux5eSw1E9txz/Vz2+50/l3T1E5Vb74YuSBb24+18X2azddh12/HDLrseXkiGpmeHcc/&#xA;1c9uXu35um8u6ePW4i++GMFKXtx9r4vs1m67Drt+OMuvPl5LDUz23HP9XPbl7t+bpfL2nqZ6LffD&#xA;EGWl5cdfi+zWbrt32xl12PLy81hqJ7bjn+rnty92/Nvy/DHZ+fre0tppxE1jI81vLPLN8fIUYiR3&#xA;HTwOVZJbkeQ/S5GGcpYyTvugPzweUTaEiSvErLdluDslaehSvEjxzXa7UTxYSYHhPEP0uw7PxiUi&#xA;CLSHyRollqMU7XouLgpIigi4mWilGO9JF2JA6b/jlnZmonliTI8W45f1fh/b5OP2jI4pVE8O3X+t&#xA;8f7PNky+T9CPCtrc7yOp/wBKm+yOVK/vumw6b+PfNkL8+f63XnVT39XQfo8uf2c/Jy+TtC+Ctrc7&#xA;yOprdTfZHKlaTdNhSm/j3xF+fM/pU6qe/qHId/l5c+/pz8nDyfoXwVtbo1kZT/pU32Ryp/u7pt88&#xA;RfnzU6qf84cvPy8uf2OHk/Qjwra3O8jKf9Km+yOVP93dNvnjv581Oqnv6hy8/Ly5/Y0vk/Qvgra3&#xA;RrIyn/SpvsjlT/d3Tb547+fNTqp/zhy8/Ly5/Y7/AAfoXOn1W6p6nH/eqb7PGv8Av7p+OO/nz/Hw&#xA;+1P5qf8AOHLz/Vz+xSuvKWiJZTSLbXKupbi31qbYAmh/vun44DddeajUzv6hy8/1c/seaW8lxHdW&#xA;zrczchLHSsspr+8A7n9ec7oNfmnmhGU7Bu/t8npM+CMYkgHmOvu8307m3dE7FXlH5f6hJc6DpUQj&#xA;X0zbScXErcqxugoycQF2kB2Y5l4ZicbHefvcfVwqRPu6d4tk8aN+72/Y/nb2yYDiEujRv3e37H87&#xA;e2ICkujRv3e37H87e2ICkujRv3e37H87e2ICkujRv3e37H87e2ICkuVG4xbeH7bfynGlvm5EbkNv&#xA;5/22/mxAUlLtd1GTTdONwqAtykCkyMACI5HB+y1fs5HJMQgZHlEEt2DF4kuH3feFX8mi7eWbtnpy&#xA;a+kJp/xhizWaWQliieezttWAMhA6IC2lVvM3muD4ncXMbiONuDUMSgmtV8PHMyMrJG98I6+9xdRG&#xA;uA7Ab8xacTL/AH/7uU/ux0kpX7XT49svkOex+f7XBieW45937Gp0J9f93MfgXpJSu56fHt74JDns&#xA;fn+1MDy3j16fsanQkXI9ObeMdJKV2b7Px7YyHPY/P9qYS+nePPu+/bf7W7hCRcD05jWIU4yUr9rZ&#xA;fjFD74zHPY8u/wB/mjGa4d48+73c9uTU6Gtz+6mNYlpSSlftfZ+MUOMhz2PLv/amB+nePPu93Pbf&#xA;7W7hTS5/dSmsIHwyUr9vZfjFD74ZDnseXf7/ADRjP07j6u73c9tx5b+506V+sfu5TWIDaSlft7D4&#xA;xQ++Mhz2PLv9/miB+ncc+73c9tx5OnQ/6TSKU1hAFJKV+3svx7H3xkOex5d/v80wP07j6u73c9tx&#xA;5e/vY55Nvfrf5mXEgYFVinjQdWCpwUVbv08c1uHLx5MvkQPk7c4+DDHz3+ZXfnh/vToPai3m56dY&#xA;Mxe1T+46fUOnvcrsweooD8uFrBcfCzUmQ/C3Gn7t9zutR4DLOxt4HruOW38Pw/G7h9r7S7vSee/8&#xA;Xxr8BmCIf3f7uXaaQ/3h/wAvf7e49s3AHLY8z197qiee4+kdPd5c/P8AW5UP7r93LtLIf7w/5e5+&#xA;Lce39MQOWx5nr70E89xyHT3eX29fi5UNE/dy7TOf7z3bf7fT2xryPPv/AGpJ57j6e73eXPzcqH4P&#xA;3cv985/vD/lb/b6e2CvI8+/9qk89x9Pd7vLn5uVDRP3cv98x/vD4tv8Ab6e2NeR59/7V4vMfT3fs&#xA;5+buB9T+7l/vq/3h/k6/b6e2NeR59/7VvbmPp7v2faoXyH9HXH7uQbuf7w/zHf7XT2xI25Hn3/j5&#xA;JB35jl3fs+147F/f2+4/vYu3X94Om22cl2Yf8Ix7jr0/reT1+pHolseY6+7zfTudE867FXz15A1u&#xA;Sxt1pBJfstqphtkFXLSPCjFftdF+I+wzE7Kz+rJHnUv1uX2lh/dQlysD7mXTeb7uKOyaPQblmuBO&#xA;p5IwCeiU+3xR+PIHvQVFKnau24vJ03Bz3TrQb/8ASml2l/8AVDbCeNmEMuzABuIP2ejUqPY5OO7C&#xA;WxItGxx/3f7tPsf09sQGJLo4/wC7/dp9j+ntiApLo4/7v92n2P6e2ICkuWP4Yv3adv8AiJ9saW+a&#xA;QHzLcpc3Ef6DuWEH1zgwXaQW3xArUDaQjivzXx2jfk2cO3PuYprnnGfVdNNtNpFxprJO7CSVSPhD&#xA;yxLXkqUMgUsviuYPaOWtPP3feXZdmYrzDe2f/k2a+V7ncn/TZNz/AMYosxtD/cx9zdq/72XvYbqe&#xA;pfU/zI1VSSY57j0ZFB4bPFHxq6/Fs1DlWbPwaqI6SgB9ppyPB49PfWJvv9+yZy+f/Lzafe39ZRBF&#xA;DE7ljIh4yvwFa0C05gk1pT5Gm5lK7/WXRxiQY+/uH4KYaTr9lrhv0tY5BJbLEJkeR1I58itCtR2O&#xA;J9V7fao9PDv39Am08LsLkFKhowB+9cV+14fZyUok3t072EJgcO/XuH4Lp4pD9YHAmsQA/euK/a22&#xA;6fPDKJ393f71hIDh369w8vn7mp4HP1n4CeUQH984rTltt0+jBKPPbp3lYTrh35H+aPL5tzxSH6xR&#xA;KkwgD964r9vbYbdeuGUTvt07/eiEh6d+vcPL5+5KPMHmTS9HnnjvvUVpLZXDK0hFObKB8I2NT2/p&#xA;kZ7X7u/3s8W4G/KXcPL5+79aW3v5ieXItbu9Hm9YTr/ozMC4UyDnyUbgig3r3yM5Df3d6YQNAjvv&#xA;kPL8UgvyokEnnFWrUmCdj8IHXh3GaTsmfFHJLvL0GvhwgDuATX88P96dBPbjeV7/AO+O2T7UkBg/&#xA;zh0vvY9mAmR/Wxvyn5i03SI2W8D1mkMkfDkBSOOhrx23Mqjfbf2yfZEhwHruPL+Edzi9qRPF8D5/&#xA;xef46Mgk896DDevaP6ge1kDzMGk2WZSyNxNHPJX6cfECpGbbi+/vdYYnffoOg8vxbJUik/d1jApN&#xA;If71zQHnQ9O9enbJiJ226nr72uUhvv8AwjoPL8X1+LlhkolY6fvnP96/Srb9PwwCJ7uvepkO/wDh&#xA;HQeX4twhf4P3Y/vnY/vX/wArfp+GPD5de9eMb7/w9w8vxblhkon7sD985/vX6Vbfp+GIie7r3lTM&#xA;d/8AD3D8fFJ9W8y6ZpWoG0u1cSgpcsVaRlEbn0w1QOtQfh9vlWJ2PLr3/j5M4ixz6VyH4+KUX/5h&#xA;eXhqcvl9hKL95ZESpk4F0m9JvfZiO1CDXpXAT0rr3soxPO+ncO78bsFiI9e395YqbDf94PuzlezJ&#xA;D8xj37+g/pPV6iJ4Je8dT5Pp3Oieddir5s8kyXMV/pMkTemxEcRMql1pInE1FU/Xmm0OUx1JFHef&#xA;/FeTt9XCJ02/SI/Q9bsJVntLSZzEGlgV2AGwLKp8c6ggW8xMUSPNWQR/u/ij+x4D298AYm3II/3f&#xA;xR/Y8B7e+IU25BH+7+KP7HgPb3xCm3II/wB38Uf2PAe3viFNuUR8Yvij7dh/KffFd93II+Q+KP8A&#xA;b7D+b54hTbBvzE1K2eOys4JkkkE0rypCRVSlVAahO+5zVdrkjCRX44g7rsfEeMyPKuvmzH8nK/4Y&#xA;ua1r9dfr1/uoshov7qPuXV/3hedecpSnnnVSJZEK3QI4itP3SdPiGartc1mj/Vj95droo3hOz0O3&#xA;Rbmx9ZreFjPbxOa7cqgtuOO1Cc6keoXQ3Dyt8JAs7E/jmqyWcSG5KWkA9RVZzsORFRVqJ1FNsMo8&#xA;9h+PgiE+W8uv45rp7dSLmtvCQ0YrU05bN9r4MZR57Dl+OiYTI4fVLY/L3b/qdcQBhcVt4WDQgHka&#xA;V+1s3wmgxnG72HL9aMc64dzz/Vy35ungUm5rbwtyiUHkftActm+A7Yyjz2HL8dEwmRw+qWx+XLlu&#xA;3cQAi5rBCwaEAhj9r7ezfCdt8M489hy/WjHOuHcj1fLly35/sauLdW+sVt4WrEB8R6057H4em+Mo&#xA;89hy/WiEq4dzz/Vy35pZ5n+r2un3Vy0EKS8Y1inVQ0od2ZKrVRuFc0PLucxddIQxTND6a+e36XI0&#xA;YM5xjZ5nbp0/Uxz8pn5ebYxzZv3E5o3Tfhv1OafsX6J/B33aQTb88NrnQTWlFvNx16wZd2qawcyP&#xA;UOXxa+zBcjsEv/LqNJILjlHHLSZP7ztWJ68dm3Pf6cs7HNwPXcc/6vx/scPtbaXd6Ty/rdeX9rLf&#xA;qcDmIta27EXDuDQGjDnRh8P2824HkOZ/S6qUue8vpH6PPl3fBUSEfuv3EO00hFD0rz3Hw/aPf6cQ&#xA;OWw5n9P2qZc95fSP0efLu+DSwikdYIf75yN/d9x8P2sRHyHP8fFJlz3l9I/R58nLCP3f7iH++c9e&#xA;/wAW/wBn7WIj5Dn+Piplz3l9I/R58nCEUj/cQ/3zkb+7b/Z+1jw+Q5/j4o4ue8vp/V58mjboZP8A&#xA;eeAn1gT8wla/Z+1jw+Q5/j4rxbc5fT+OvJD39pbmxmdrW3Lo7sj0FVYkgsDx+1gI25Dn+PikS35y&#xA;5fo9/J4/Ef39v8R3liPz/eDrvnKdmT/wjHuev++83r9TH0S2HMfofT2dC867FXzN5UmS1l0u4kVl&#xA;jia3Zz1oABU9BnN4ZCGp4iDXH+t3uaJnp+EHfg/U9g0eT/cZp/7xP95o/wDiC++doTu8llHqPvRM&#xA;cn93+8T7H9PfIgsCHRyf3f7xPsf098QVIdHJ/d/vE+x/T3xBUh0cn93+8T7H9PfEFSHLJ8MX7xO3&#xA;/ET742tc3JJ8Q/eJ+3/xL54gqQ8p80XputUuIwpZLZ5o1ZehrcO5Pf8Amzlu2svHl4a+mP6i9Z2Z&#xA;i4MYlf1V/uXpf5Ninle52I/02TY/8Yos2Gh/uY+51+r/AL2Xvee+cjKPPGrcVlP+k7FGI/3UnTY/&#xA;Tmr7Y/vo/wBUfeXaaKvC6M20eazm0WKRZIAv1WJX5qKgqpUh6sO4zo8M4yx3Y+kfgvOZYzjkqpfU&#xA;eX6NkfcC3P1gF7f7CcuSg03P2vi+7LZ1v9PRpx8Xp2l1/A2+bVwtuRdgvbbxjlyQGmzfb+LcYyA9&#xA;X08vxacZl6dpc+/7tm7lYCLkF7f+5HLmgNB8f2viHw/24Zgb/Ty/XzRiMvTtL6uh93Lbn+xq4SAm&#xA;6q1tQwry5IDt8f2/i3HhgmB6vp5fr5pxmXpri59D7uW3P9jdytuRdBnt94ByDoDQfHu/xbr/AG4Z&#xA;1v8ATy/Xz8kYzL00JfV0Pu5bc/2N3Ag/0qsluP3A5clBoPj3f4h8P9uM635cv18/JcfF6aEvq/Vy&#xA;25/sYv5+u/Sa1to1DNO8bl4V4vSIttzHLu+wptmn7azAR4NrlXyF8/L9rs+yMfETI8o3z5b10/HR&#xA;CflOXPm2PkHA9Cehc1H7HTYb+OUdjfRP4Of2kmv54Gl3oHiVvKAdT/cdMv7TvwDQP1Dl8efl+mmr&#xA;s4jiNkfH48vxytLvy6KGCfk8Y/frT1BUk+m9Qu4oR3+nJ9k3w77bj6v6nTl/Y4vah9W2+x+nl9fX&#xA;n/b8mXJ6BMVJLc/v5Bso60eoHxfaHf6c2orbePM/p+11kuLfaX0j9Hly7vhu5Pq59KkluR68oFFG&#xA;5HqVA+L7Q7/TiK23HM/p+39qyEt9pfSP975cu74OX6uRHSS3P79x9kdavt9r7WIrvjz/AB8VPFvt&#xA;L6R+jy5fi3L6H7v95b/37j7I3Px7D4vtY7d8ef4681PFvtL6R+jy5fi3KbeifvbanruPsilat8P2&#xA;vtY7d8ef4680kSs7S+n9W/Ll+Lcfq4k3ktx+/A3UdeHT7X2sdu+PP8deaAJVyl9P46cvxajfej+j&#xA;pyJIPtP+yOvI7fa+1gNVzHP8fFY3fKX0/o93L8W8gjLevB9r++irv0/eDr75y3ZvF+Yx2Jcj/vvL&#xA;k9ZqK4Jbx5j9Hm+nc6B592KvlnTh/uNt/hX+7j/a/wAj55yOoHrnsPq/X5vT4D6Y8/p/Un1l5l1e&#xA;1spNMOoS28BjaK2uUVJGhbkpBpQMRRSKch7ZvtH2oTYnQ3239/eXV6zs2M/VAerr5pjo+rrpzRpf&#xA;eZri/t43jIVYJQ5VAG4Oz9Pj60JqOvtsRrMQ5zj8w6s9n5pcoK9vqBFqsbecJWZRCGdrZ1P7tw0i&#xA;mg5fGtehr9AGWR1GMj647eYYS0eUH6OaBtvOWp2UssSXs13GBxiZgiAcaAGsqSH4gN12/XmFm7Vh&#xA;jBI9fT6h5/Ho52Lsky+qh8z91Kv+O9cU/wB6aIeI3h6f8i/bMT+XpD+Abf0m/wDkeB6/Yf1pzpH5&#xA;i6e6Rw6iJoJItmm4h1NKip4KD4dFzZQ7SxSNEiP+dH9duDn7JyDeO9+/9KlrPn632XSppi4WSrlE&#xA;ReTMpQn1UNRSu1BkNT2pjxwJiRKXvDPTdlTkfWKH47mD0b4y1HZhyZi25LEE1offOUzZDkkZECyB&#xA;193m9HAAAAXQexfk3/yi9zsB/psnTf8A3VFnSaH+5j7nn9X/AHsve8686R8vPGrfunetyPsmlaRJ&#xA;7Hpmr7Y/vo/1R95droT+65rfLnmC+0genFEz21yxEiN8QrQDkoou4+e+V6DtCWD0/wAJ+zzYa7RQ&#xA;zHiv1D7UZYHVY7lrs+b2lhuVkb05beTkrUoihKlTRT8VKCu48R0Q12Ii+MOhOkmDRhyTeMyzXEk9&#xA;n5p4WgRFjgmj3pHD6Z3lYFyW+I7dW8QMtjqISvhmGs4JRoSgUB+k9S0i9iV9ZbVP3PpyLHGzrJPw&#xA;CHkWfiADR6qeu1ACcxtT2jjxEjis+W7fp9DLJvw0PM1srP8AmLfyMfT08BJh6aVJJBFd+n+UMwpd&#xA;u77RP6nMj2MAN5cvtRlr+YEVzyWa3ktjMPSiYJ6oDjuaFTT4h2y+HbWOV3cfhbRPsiUKqpVz3rZM&#xA;rrzfpCpI8V0JjIojhjSGQkvv4lR+0My8naOGIJ4hy7nFx6DISBwnnvv0ef6vqUur6kt7LbuPUl4o&#xA;gO3BeICj4evj885XW6o58nERXd5PS6TTjBj4QR5p9+UyU83IeDLW3nFWPWnDboM2nYv93P3hxu0i&#xA;m/54CtzoIoT8N5sOvWDLu1Y3g5X6h+lq7NlUjvVpR+X+p2VqLiKe5S2dpEb99sGUIy/aPFRQ4eyM&#xA;kYRIJ4dxz/qhxe1YmcgQOLYjbv4iy9dY06kZOpW1PVep5KNvjoPtfjm4GaO3qHP9bqzhlv6TyH6E&#xA;DeecNHtAP9LFw6OzGOCNn5KeVAGrw/aH7WY+XX4oc5XXcLbsWinPlGr23PXr9xYnq3nrWLtWitg1&#xA;pCKsGj2kPI13ahpQH9nNLqe2MkrEBwjv6u3wdlYo0ZEHpXTZBWHmzX7Kb1FnlnUAMYrhjIpJ69dx&#xA;17HMfD2pngbNyHm3ZezsMxW0dzy/tX2Or6tN5jg1K48wT2lmJXkuNPeBpIvTaT1ERGRjWisY90Gx&#xA;r1Azc4e1MczuTH4OrzdnyiNgJdOafWs7C4t5U81j0onhkuI5YyBIsa/vKeo1R6jFvlt4DMuOqxn+&#xA;MOJLBIfwHu+KVW8t5ZX0lzc+bWvrRxM01oYJakn+7C05LTjWvTfoN8gdXjH8YbBppn+BjUS/v7f4&#xA;W2lj+j94PbOd7MjWox7Hr/vnpdRO4S3HMfofTudE887FXyzpw/3G2/wr/dx/tf5HzzkdQPXPYfV+&#xA;vzenwH0x5/T+pEuPt/Cv2v5vn75VIc9hz7/f5s4nlueX46Ocfb+FftfzfP3xkOew59/v81ieW55f&#xA;jo5x9v4V+1/N8/fGQ57Dn3+/zWJ5bnl+OjnH2/hX7X83z98ZDnsOff7/ADWJ5bnl+OjnH2/hX7X8&#xA;3z98ZDnsOff7/NYnlueX46OYfFJ8K/8ABf5Q98SNzsPn5+9QdhufwPc5h8J+Ff2f2v8AJ+eMhtyH&#xA;Tr5e9Qd+Z6/f7nEfa+Ffsr+18vfEjnsOQ6+7zUHluef6/J7F+Tf/ACi9zsB/psnTf/dUWdRof7mP&#xA;uee1f97L3vO/OiV88at8CNW5H2npWkSf5Qpmq7YP76P9UfeXa6H+6SSJf7n92m7nq9K9P8rNUOnv&#xA;cyR57nl+OjcSV9L92hqzdXpXp/lYjp71kee55fjo6JKmH92hq5H26V6f5W2I/Ssjz3PL8dGolr6P&#xA;7tDWQjd6V+z1+LbELI89zy/HRuJCfQ/dxmshG70r9nr8W2IKyPPc8vx0ahWvo/u0NZCN3pX7Ox+L&#xA;bELI89zy/HR0S7Q/u0NZCN3pX7Ox+LbELI89zy/HR0KV9H92hrIRu9K/Z2PxbYhZHnueX46Mv/KY&#xA;U83J8Kj/AEefdWr/ACe5zf8AYv0T94dZ2km354f706D/AKt5senWDLe1f7j/ADh90mrs0+s7n4fH&#xA;nsf0b/J5oo+J9gfhXqad/nmgmNuQ+f8AV83ZwO/OXM9POXl9vVeR9r4V+yO/y98gRz2HL9XmzB5b&#xA;nmenv8nEfa+Ffsjv8vfEjnsOX6vNQeW5+o9Pf5OI+18K/ZHf5e+JHPYcv1eag8tz9R6e/wAnEfa+&#xA;Ffsjv8vfEjny5fq81B5bn6j09/k4j7Xwr9kd/l74kc9hy/V5qDy3P1Hp7/J1Pg+yv2fH/K+eNbch&#xA;y/T71vfmfq7vL3NOPtfCv2D3/wAn55KA9Y2H4HvYzPoO5593n7m4h+/t9h/ex9+n7wdN98zuzP8A&#xA;GMew69ff5tWoPolufqHT+r5Pp3OjeedirCf+QK0P/KN07/7wdcGyWz/ypbev+G+vxV+o9ffHZXH/&#xA;AJUtvX/DfX4v94evvjsrj/ypbev+G+vxf7w9ffHZWn/5Urvz/wAN9d6/UPtb/j1x2Xdx/wCVKfFX&#xA;/DfX4q/UOu/XHZd3D/lSvxU/w335/wC8HjvX6cdlbP8Aypem/wDhym3X6jTpt+HTHZWv+QK/9+30&#xA;3/3g6Y7KyXQf8Pfo8foD6p+j+Rp9Q9L0ef7X918NfHChgHmz/lRf+Ibv/EXo/pnkv1rn9b5cuIp/&#xA;d/B0p0y3eunxpujx10+xKR/0LVtT6v7f73Y7/wBH/YsvX5f7F3/WNW1Pq/t/vdjv/R/2K+vy/wBi&#xA;7/rGran1f2/3ux3/AKP+xX1+X+xd/wBY1bU+r+3+92O/9H/Yr6/L/Yrh/wBC4UHH06dqfpGn0UyP&#xA;+l/2K+vy/wBitP8A0LZXf0a+/wBfr+OEf5v+xX1+X+xd/wBY1f8ALv7f73Yd/wCj/sV9fl/sXf8A&#xA;WNX/AC7/APT9jv8A0f8AYr6/L/Ysk8hf8qf/AEy/+D/S/SfpNz9P61/d1Fa+r8P8cBuuleVfoYz4&#xA;q3r7E28/f8q942P+MPTpWX6j6nq/5HqU9L/Y9cEbrZjDi6MQ/wCsef8Al3/6fMO/l9jL1/inf9Y9&#xA;f8u//T5jv5fYvr/FO/6x6/5d/wDp8x38vsX1/inf9Y9f8u//AE+Y7+X2L6/xTv8ArHr/AJd/+nzH&#xA;fy+xfX+Kd/1j1/y7/wDT5jv5fYvr/FO/6x6/5d/+nzHfy+xfX+Kd/wBY8/8ALv8A9PmO/l9i+v8A&#xA;FKtr/wAqA+tQ/V/q/r819H/ev7dfh67dfHCOLpX2L63q2VNLsVf/2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:06F051A72139DE11A326939BE220D0A7</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:07F051A72139DE11A326939BE220D0A7</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:05F051A72139DE11A326939BE220D0A7</stRef:instanceID>
            <stRef:documentID>uuid:AD1235281E39DE11A326939BE220D0A7</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>4.000000</stDim:w>
            <stDim:h>3.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ArialMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 3.00</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>ARIAL.TTF</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>100.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>CMYK Red</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>CMYK Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>CMYK Green</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>CMYK Cyan</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>CMYK Blue</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>CMYK Magenta</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=15 M=100 Y=90 K=10</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>14.999998</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>90.000004</xapG:yellow>
                           <xapG:black>10.000002</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=90 Y=85 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>90.000004</xapG:magenta>
                           <xapG:yellow>84.999996</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=80 Y=95 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>80.000001</xapG:magenta>
                           <xapG:yellow>94.999999</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=50 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=35 Y=85 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>35.000002</xapG:magenta>
                           <xapG:yellow>84.999996</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=5 M=0 Y=90 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>5.000001</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>90.000004</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=20 M=0 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>19.999999</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=0 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=0 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=85 M=10 Y=100 K=10</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>84.999996</xapG:cyan>
                           <xapG:magenta>10.000002</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>10.000002</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=90 M=30 Y=95 K=30</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>90.000004</xapG:cyan>
                           <xapG:magenta>30.000001</xapG:magenta>
                           <xapG:yellow>94.999999</xapG:yellow>
                           <xapG:black>30.000001</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=0 Y=75 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=80 M=10 Y=45 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>80.000001</xapG:cyan>
                           <xapG:magenta>10.000002</xapG:magenta>
                           <xapG:yellow>44.999999</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=70 M=15 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>69.999999</xapG:cyan>
                           <xapG:magenta>14.999998</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=85 M=50 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>84.999996</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=95 Y=5 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>94.999999</xapG:magenta>
                           <xapG:yellow>5.000001</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=100 Y=25 K=25</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>25.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=100 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=100 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=35 M=100 Y=35 K=10</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>35.000002</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>35.000002</xapG:yellow>
                           <xapG:black>10.000002</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=10 M=100 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>10.000002</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=95 Y=20 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>94.999999</xapG:magenta>
                           <xapG:yellow>19.999999</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=25 Y=40 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>39.999998</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=40 M=45 Y=50 K=5</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.999998</xapG:cyan>
                           <xapG:magenta>44.999999</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>5.000001</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=50 Y=60 K=25</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>60.000002</xapG:yellow>
                           <xapG:black>25.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=55 M=60 Y=65 K=40</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>55.000001</xapG:cyan>
                           <xapG:magenta>60.000002</xapG:magenta>
                           <xapG:yellow>64.999998</xapG:yellow>
                           <xapG:black>39.999998</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=40 Y=65 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>39.999998</xapG:magenta>
                           <xapG:yellow>64.999998</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=30 M=50 Y=75 K=10</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>30.000001</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>10.000002</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=35 M=60 Y=80 K=25</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>35.000002</xapG:cyan>
                           <xapG:magenta>60.000002</xapG:magenta>
                           <xapG:yellow>80.000001</xapG:yellow>
                           <xapG:black>25.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=40 M=65 Y=90 K=35</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.999998</xapG:cyan>
                           <xapG:magenta>64.999998</xapG:magenta>
                           <xapG:yellow>90.000004</xapG:yellow>
                           <xapG:black>35.000002</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=40 M=70 Y=100 K=50</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.999998</xapG:cyan>
                           <xapG:magenta>69.999999</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>50.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=70 Y=80 K=70</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>69.999999</xapG:magenta>
                           <xapG:yellow>80.000001</xapG:yellow>
                           <xapG:black>69.999999</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Grayscale</xapG:groupName>
                  <xapG:groupType>1</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=90</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>229</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=80</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>203</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=70</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>178</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=60</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>152</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=50</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>127</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=40</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>101</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=30</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>76</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=20</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>50</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=10</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>25</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=5</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>12</xapG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -233.286 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 233.286 li
998.725 233.286 li
998.725 0 li
cp
clp
[1 0 0 1 0 0 ]ct
609.5 6.23291 mo
609.5 222.232 li
609.5 222.232 571.049 222.232 522.25 222.232 cv
519.68 222.232 517.08 222.232 514.459 222.232 cv
498.74 222.603 481.74 222.603 465.5 222.232 cv
462.73 222.232 459.959 222.232 457.2 222.232 cv
388.07 222.232 321.5 222.232 321.5 222.232 cv
321.5 6.23291 li
321.5 6.23291 321.82 7.72266 322.39 10.4028 cv
325.74 24.603 323.74 38.603 326.74 52.603 cv
327.24 55.2227 327.86 57.8027 328.58 60.3428 cv
335.45 76.2827 341.67 92.6431 344.6 109.503 cv
345.09 112.313 345.49 115.143 345.74 117.983 cv
345.99 120.793 346.09 123.583 346.06 126.323 cv
344.74 137.603 345.74 148.603 352.74 156.603 cv
354.62 158.603 356.6 160.663 358.68 162.723 cv
360.77 164.783 362.95 166.843 365.2 168.833 cv
371.61 174.663 379.39 181.173 387.95 182.383 cv
390.8 182.783 393.74 182.603 396.74 181.613 cv
401.4 180.272 406.07 180.163 410.74 180.713 cv
413.07 180.993 415.41 181.433 417.74 181.933 cv
422.24 183.272 426.99 184.683 431.74 185.393 cv
434.12 185.753 436.49 185.923 438.83 185.793 cv
467.74 166.603 503.74 168.603 534.86 181.623 cv
538.39 181.673 541.81 181.493 545.08 181.022 cv
558.169 179.163 568.86 172.732 573.6 156.153 cv
574.65 153.463 575.709 150.763 576.89 148.223 cv
578.07 145.673 579.37 143.293 580.9 141.232 cv
581.44 138.522 581.97 135.813 582.5 133.093 cv
583.03 130.383 583.589 127.653 584.15 124.923 cv
587.549 108.533 591.49 91.853 593.74 74.603 cv
596.74 53.603 603.74 32.603 608.19 11.7627 cv
609.03 8.22266 609.5 6.23291 609.5 6.23291 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.215686 .580392 1 .062745 cmyk
f
321.5 6.23291 mo
609.5 6.23291 li
609.5 6.23291 609.03 8.22266 608.19 11.7627 cv
603.74 32.603 596.74 53.603 593.74 74.603 cv
591.49 91.853 587.549 108.533 584.15 124.923 cv
583.589 127.653 583.03 130.383 582.5 133.093 cv
581.97 135.813 581.44 138.522 580.9 141.232 cv
579.37 143.293 578.07 145.673 576.89 148.223 cv
575.709 150.763 574.65 153.463 573.6 156.153 cv
568.86 172.732 558.169 179.163 545.08 181.022 cv
541.81 181.493 538.39 181.673 534.86 181.623 cv
503.74 168.603 467.74 166.603 438.83 185.793 cv
436.49 185.923 434.12 185.753 431.74 185.393 cv
426.99 184.683 422.24 183.272 417.74 181.933 cv
415.41 181.433 413.07 180.993 410.74 180.713 cv
406.07 180.163 401.4 180.272 396.74 181.613 cv
393.74 182.603 390.8 182.783 387.95 182.383 cv
379.39 181.173 371.61 174.663 365.2 168.833 cv
362.95 166.843 360.77 164.783 358.68 162.723 cv
356.6 160.663 354.62 158.603 352.74 156.603 cv
345.74 148.603 344.74 137.603 346.06 126.323 cv
346.09 123.583 345.99 120.793 345.74 117.983 cv
345.49 115.143 345.09 112.313 344.6 109.503 cv
341.67 92.6431 335.45 76.2827 328.58 60.3428 cv
327.86 57.8027 327.24 55.2227 326.74 52.603 cv
323.74 38.603 325.74 24.603 322.39 10.4028 cv
321.82 7.72266 321.5 6.23291 321.5 6.23291 cv
cp
.2 0 0 0 cmyk
f
3 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
321.5 6.23291 mo
321.5 222.232 li
321.5 222.232 388.07 222.232 457.2 222.232 cv
459.959 222.232 462.73 222.232 465.5 222.232 cv
481.74 222.603 498.74 222.603 514.459 222.232 cv
517.08 222.232 519.68 222.232 522.25 222.232 cv
571.049 222.232 609.5 222.232 609.5 222.232 cv
609.5 6.23291 li
321.5 6.23291 li
cp
0 0 0 1 cmyk
@
1 lw
321.5 6.23291 mo
321.5 6.23291 321.82 7.72266 322.39 10.4028 cv
325.74 24.603 323.74 38.603 326.74 52.603 cv
327.24 55.2227 327.86 57.8027 328.58 60.3428 cv
335.45 76.2827 341.67 92.6431 344.6 109.503 cv
345.09 112.313 345.49 115.143 345.74 117.983 cv
345.99 120.793 346.09 123.583 346.06 126.323 cv
@
346.06 126.323 mo
344.74 137.603 345.74 148.603 352.74 156.603 cv
354.62 158.603 356.6 160.663 358.68 162.723 cv
360.77 164.783 362.95 166.843 365.2 168.833 cv
371.61 174.663 379.39 181.173 387.95 182.383 cv
390.8 182.783 393.74 182.603 396.74 181.613 cv
401.4 180.272 406.07 180.163 410.74 180.713 cv
413.07 180.993 415.41 181.433 417.74 181.933 cv
422.24 183.272 426.99 184.683 431.74 185.393 cv
434.12 185.753 436.49 185.923 438.83 185.793 cv
467.74 166.603 503.74 168.603 534.86 181.623 cv
538.39 181.673 541.81 181.493 545.08 181.022 cv
558.169 179.163 568.86 172.732 573.6 156.153 cv
574.65 153.463 575.709 150.763 576.89 148.223 cv
578.07 145.673 579.37 143.293 580.9 141.232 cv
@
580.9 141.232 mo
581.44 138.522 581.97 135.813 582.5 133.093 cv
583.03 130.383 583.589 127.653 584.15 124.923 cv
587.549 108.533 591.49 91.853 593.74 74.603 cv
596.74 53.603 603.74 32.603 608.19 11.7627 cv
609.03 8.22266 609.5 6.23291 609.5 6.23291 cv
@
.5 lw
322.99 22.7031 mo
607.906 22.7031 li
0 0 0 .4 cmyk
@
323.323 38.0371 mo
607.99 38.0371 li
@
323.323 52.0361 mo
608.072 52.0361 li
@
323.323 67.3691 mo
608.24 67.3691 li
@
323.99 81.3701 mo
608.156 81.3701 li
@
324.323 96.7041 mo
608.156 96.7041 li
@
324.323 110.703 mo
607.906 110.703 li
@
324.323 126.036 mo
608.24 126.036 li
@
323.99 139.37 mo
607.99 139.37 li
@
324.323 154.704 mo
608.072 154.704 li
@
324.323 168.702 mo
607.906 168.702 li
@
324.323 184.036 mo
607.906 184.036 li
@
323.656 198.37 mo
607.822 198.37 li
@
323.656 213.702 mo
608.072 213.702 li
@
355.323 7.86914 mo
355.323 223.034 li
@
371.323 7.99414 mo
371.323 223.034 li
@
386.656 8.24414 mo
386.656 223.034 li
@
401.99 7.03613 mo
401.99 223.702 li
@
417.656 8.24414 mo
417.656 223.368 li
@
433.99 7.03516 mo
433.99 223.702 li
@
449.99 7.03613 mo
449.99 223.702 li
@
465.324 7.03613 mo
465.324 223.702 li
@
480.656 7.70313 mo
480.656 224.37 li
@
496.324 7.36914 mo
496.324 224.034 li
@
512.656 7.70117 mo
512.656 224.368 li
@
528.656 7.70215 mo
528.656 224.368 li
@
543.99 7.70215 mo
543.99 224.368 li
@
559.322 8.36914 mo
559.322 220.493 li
@
575.656 8.11914 mo
575.656 220.493 li
@
591.99 7.78516 mo
591.99 220.493 li
@
607.99 7.95215 mo
608.177 220.681 li
@
339.49 7.53516 mo
339.49 224.2 li
@
324.823 8.11914 mo
324.823 8.76367 324.264 9.28613 323.573 9.28613 cv
322.883 9.28613 322.323 8.76367 322.323 8.11914 cv
322.323 7.47461 322.883 6.95313 323.573 6.95313 cv
324.264 6.95313 324.823 7.47461 324.823 8.11914 cv
cp
0 1 1 0 cmyk
f
340.573 8.23438 mo
340.573 8.87891 340.014 9.40039 339.323 9.40039 cv
338.633 9.40039 338.073 8.87891 338.073 8.23438 cv
338.073 7.58984 338.633 7.06738 339.323 7.06738 cv
340.014 7.06738 340.573 7.58984 340.573 8.23438 cv
cp
f
356.573 8.36914 mo
356.573 9.01367 356.014 9.53516 355.323 9.53516 cv
354.633 9.53516 354.073 9.01367 354.073 8.36914 cv
354.073 7.72461 354.633 7.20215 355.323 7.20215 cv
356.014 7.20215 356.573 7.72461 356.573 8.36914 cv
cp
f
372.407 8.20215 mo
372.407 8.84668 371.847 9.36914 371.157 9.36914 cv
370.466 9.36914 369.907 8.84668 369.907 8.20215 cv
369.907 7.55859 370.466 7.03516 371.157 7.03516 cv
371.847 7.03516 372.407 7.55859 372.407 8.20215 cv
cp
f
387.907 8.36914 mo
387.907 9.01367 387.347 9.53516 386.657 9.53516 cv
385.966 9.53516 385.407 9.01367 385.407 8.36914 cv
385.407 7.72461 385.966 7.20215 386.657 7.20215 cv
387.347 7.20215 387.907 7.72461 387.907 8.36914 cv
cp
f
402.907 8.23438 mo
402.907 8.87891 402.347 9.40137 401.657 9.40137 cv
400.966 9.40137 400.407 8.87891 400.407 8.23438 cv
400.407 7.58984 400.966 7.06836 401.657 7.06836 cv
402.347 7.06836 402.907 7.58984 402.907 8.23438 cv
cp
f
418.907 8.31738 mo
418.907 8.96191 418.347 9.48438 417.657 9.48438 cv
416.966 9.48438 416.407 8.96191 416.407 8.31738 cv
416.407 7.67383 416.966 7.15039 417.657 7.15039 cv
418.347 7.15039 418.907 7.67383 418.907 8.31738 cv
cp
f
435.156 8.31738 mo
435.156 8.96191 434.597 9.48438 433.906 9.48438 cv
433.216 9.48438 432.656 8.96191 432.656 8.31738 cv
432.656 7.67383 433.216 7.15039 433.906 7.15039 cv
434.597 7.15039 435.156 7.67383 435.156 8.31738 cv
cp
f
451.24 8.31641 mo
451.24 8.96094 450.68 9.48438 449.99 9.48438 cv
449.299 9.48438 448.74 8.96094 448.74 8.31641 cv
448.74 7.67285 449.299 7.15039 449.99 7.15039 cv
450.68 7.15039 451.24 7.67285 451.24 8.31641 cv
cp
f
466.574 8.31738 mo
466.574 8.96191 466.013 9.48438 465.324 9.48438 cv
464.632 9.48438 464.074 8.96191 464.074 8.31738 cv
464.074 7.67383 464.632 7.15039 465.324 7.15039 cv
466.013 7.15039 466.574 7.67383 466.574 8.31738 cv
cp
f
482.074 8.23438 mo
482.074 8.87891 481.513 9.40137 480.824 9.40137 cv
480.132 9.40137 479.574 8.87891 479.574 8.23438 cv
479.574 7.58984 480.132 7.06836 480.824 7.06836 cv
481.513 7.06836 482.074 7.58984 482.074 8.23438 cv
cp
f
497.574 8.23438 mo
497.574 8.87891 497.013 9.40137 496.324 9.40137 cv
495.632 9.40137 495.074 8.87891 495.074 8.23438 cv
495.074 7.58984 495.632 7.06836 496.324 7.06836 cv
497.013 7.06836 497.574 7.58984 497.574 8.23438 cv
cp
f
513.822 8.15039 mo
513.822 8.79492 513.263 9.31836 512.572 9.31836 cv
511.882 9.31836 511.322 8.79492 511.322 8.15039 cv
511.322 7.50684 511.882 6.98438 512.572 6.98438 cv
513.263 6.98438 513.822 7.50684 513.822 8.15039 cv
cp
f
529.99 8.23438 mo
529.99 8.87891 529.429 9.40137 528.74 9.40137 cv
528.048 9.40137 527.49 8.87891 527.49 8.23438 cv
527.49 7.58984 528.048 7.06836 528.74 7.06836 cv
529.429 7.06836 529.99 7.58984 529.99 8.23438 cv
cp
f
545.156 8.23438 mo
545.156 8.87891 544.597 9.40137 543.906 9.40137 cv
543.216 9.40137 542.656 8.87891 542.656 8.23438 cv
542.656 7.58984 543.216 7.06836 543.906 7.06836 cv
544.597 7.06836 545.156 7.58984 545.156 8.23438 cv
cp
f
560.572 8.15039 mo
560.572 8.79492 560.013 9.31836 559.322 9.31836 cv
558.632 9.31836 558.072 8.79492 558.072 8.15039 cv
558.072 7.50684 558.632 6.98438 559.322 6.98438 cv
560.013 6.98438 560.572 7.50684 560.572 8.15039 cv
cp
f
576.906 8.31738 mo
576.906 8.96191 576.347 9.48438 575.656 9.48438 cv
574.966 9.48438 574.406 8.96191 574.406 8.31738 cv
574.406 7.67383 574.966 7.15039 575.656 7.15039 cv
576.347 7.15039 576.906 7.67383 576.906 8.31738 cv
cp
f
593.24 8.2334 mo
593.24 8.87793 592.679 9.40039 591.99 9.40039 cv
591.298 9.40039 590.74 8.87793 590.74 8.2334 cv
590.74 7.58984 591.298 7.06641 591.99 7.06641 cv
592.679 7.06641 593.24 7.58984 593.24 8.2334 cv
cp
f
609.156 8.15039 mo
609.156 8.79492 608.597 9.31738 607.906 9.31738 cv
607.216 9.31738 606.656 8.79492 606.656 8.15039 cv
606.656 7.50586 607.216 6.98438 607.906 6.98438 cv
608.597 6.98438 609.156 7.50586 609.156 8.15039 cv
cp
f
340.448 22.5352 mo
340.448 23.1797 339.889 23.7031 339.198 23.7031 cv
338.508 23.7031 337.948 23.1797 337.948 22.5352 cv
337.948 21.8916 338.508 21.3691 339.198 21.3691 cv
339.889 21.3691 340.448 21.8916 340.448 22.5352 cv
cp
f
356.448 22.6699 mo
356.448 23.3145 355.889 23.8379 355.198 23.8379 cv
354.508 23.8379 353.948 23.3145 353.948 22.6699 cv
353.948 22.0264 354.508 21.5039 355.198 21.5039 cv
355.889 21.5039 356.448 22.0264 356.448 22.6699 cv
cp
f
372.282 22.5039 mo
372.282 23.1484 371.722 23.6709 371.032 23.6709 cv
370.341 23.6709 369.782 23.1484 369.782 22.5039 cv
369.782 21.8594 370.341 21.3379 371.032 21.3379 cv
371.722 21.3379 372.282 21.8594 372.282 22.5039 cv
cp
f
387.782 22.6699 mo
387.782 23.3145 387.222 23.8379 386.532 23.8379 cv
385.841 23.8379 385.282 23.3145 385.282 22.6699 cv
385.282 22.0264 385.841 21.5039 386.532 21.5039 cv
387.222 21.5039 387.782 22.0264 387.782 22.6699 cv
cp
f
402.782 22.5361 mo
402.782 23.1807 402.222 23.7031 401.532 23.7031 cv
400.841 23.7031 400.282 23.1807 400.282 22.5361 cv
400.282 21.8926 400.841 21.3691 401.532 21.3691 cv
402.222 21.3691 402.782 21.8926 402.782 22.5361 cv
cp
f
418.782 22.6191 mo
418.782 23.2637 418.222 23.7861 417.532 23.7861 cv
416.841 23.7861 416.282 23.2637 416.282 22.6191 cv
416.282 21.9746 416.841 21.4531 417.532 21.4531 cv
418.222 21.4531 418.782 21.9746 418.782 22.6191 cv
cp
f
435.031 22.6191 mo
435.031 23.2637 434.472 23.7861 433.781 23.7861 cv
433.091 23.7861 432.531 23.2637 432.531 22.6191 cv
432.531 21.9746 433.091 21.4531 433.781 21.4531 cv
434.472 21.4531 435.031 21.9746 435.031 22.6191 cv
cp
f
451.115 22.6191 mo
451.115 23.2637 450.555 23.7852 449.865 23.7852 cv
449.174 23.7852 448.615 23.2637 448.615 22.6191 cv
448.615 21.9746 449.174 21.4521 449.865 21.4521 cv
450.555 21.4521 451.115 21.9746 451.115 22.6191 cv
cp
f
466.449 22.6191 mo
466.449 23.2637 465.888 23.7861 465.199 23.7861 cv
464.507 23.7861 463.949 23.2637 463.949 22.6191 cv
463.949 21.9746 464.507 21.4531 465.199 21.4531 cv
465.888 21.4531 466.449 21.9746 466.449 22.6191 cv
cp
f
481.949 22.5361 mo
481.949 23.1807 481.388 23.7031 480.699 23.7031 cv
480.007 23.7031 479.449 23.1807 479.449 22.5361 cv
479.449 21.8926 480.007 21.3691 480.699 21.3691 cv
481.388 21.3691 481.949 21.8926 481.949 22.5361 cv
cp
f
497.449 22.5361 mo
497.449 23.1807 496.888 23.7031 496.199 23.7031 cv
495.507 23.7031 494.949 23.1807 494.949 22.5361 cv
494.949 21.8926 495.507 21.3691 496.199 21.3691 cv
496.888 21.3691 497.449 21.8926 497.449 22.5361 cv
cp
f
513.697 22.4531 mo
513.697 23.0977 513.138 23.6191 512.447 23.6191 cv
511.757 23.6191 511.197 23.0977 511.197 22.4531 cv
511.197 21.8086 511.757 21.2861 512.447 21.2861 cv
513.138 21.2861 513.697 21.8086 513.697 22.4531 cv
cp
f
529.865 22.5361 mo
529.865 23.1807 529.304 23.7031 528.615 23.7031 cv
527.923 23.7031 527.365 23.1807 527.365 22.5361 cv
527.365 21.8926 527.923 21.3691 528.615 21.3691 cv
529.304 21.3691 529.865 21.8926 529.865 22.5361 cv
cp
f
545.031 22.5361 mo
545.031 23.1807 544.472 23.7031 543.781 23.7031 cv
543.091 23.7031 542.531 23.1807 542.531 22.5361 cv
542.531 21.8926 543.091 21.3691 543.781 21.3691 cv
544.472 21.3691 545.031 21.8926 545.031 22.5361 cv
cp
f
560.447 22.4531 mo
560.447 23.0977 559.888 23.6191 559.197 23.6191 cv
558.507 23.6191 557.947 23.0977 557.947 22.4531 cv
557.947 21.8086 558.507 21.2861 559.197 21.2861 cv
559.888 21.2861 560.447 21.8086 560.447 22.4531 cv
cp
f
576.781 22.6191 mo
576.781 23.2637 576.222 23.7861 575.531 23.7861 cv
574.841 23.7861 574.281 23.2637 574.281 22.6191 cv
574.281 21.9746 574.841 21.4531 575.531 21.4531 cv
576.222 21.4531 576.781 21.9746 576.781 22.6191 cv
cp
f
593.115 22.5352 mo
593.115 23.1797 592.554 23.7021 591.865 23.7021 cv
591.173 23.7021 590.615 23.1797 590.615 22.5352 cv
590.615 21.8906 591.173 21.3691 591.865 21.3691 cv
592.554 21.3691 593.115 21.8906 593.115 22.5352 cv
cp
f
340.573 37.8691 mo
340.573 38.5137 340.014 39.0352 339.323 39.0352 cv
338.633 39.0352 338.073 38.5137 338.073 37.8691 cv
338.073 37.2246 338.633 36.7021 339.323 36.7021 cv
340.014 36.7021 340.573 37.2246 340.573 37.8691 cv
cp
f
356.573 38.0039 mo
356.573 38.6484 356.014 39.1699 355.323 39.1699 cv
354.633 39.1699 354.073 38.6484 354.073 38.0039 cv
354.073 37.3594 354.633 36.8369 355.323 36.8369 cv
356.014 36.8369 356.573 37.3594 356.573 38.0039 cv
cp
f
372.407 37.8369 mo
372.407 38.4814 371.847 39.0039 371.157 39.0039 cv
370.466 39.0039 369.907 38.4814 369.907 37.8369 cv
369.907 37.1934 370.466 36.6699 371.157 36.6699 cv
371.847 36.6699 372.407 37.1934 372.407 37.8369 cv
cp
f
387.907 38.0039 mo
387.907 38.6484 387.347 39.1699 386.657 39.1699 cv
385.966 39.1699 385.407 38.6484 385.407 38.0039 cv
385.407 37.3594 385.966 36.8369 386.657 36.8369 cv
387.347 36.8369 387.907 37.3594 387.907 38.0039 cv
cp
f
402.907 37.8691 mo
402.907 38.5137 402.347 39.0361 401.657 39.0361 cv
400.966 39.0361 400.407 38.5137 400.407 37.8691 cv
400.407 37.2246 400.966 36.7031 401.657 36.7031 cv
402.347 36.7031 402.907 37.2246 402.907 37.8691 cv
cp
f
418.907 37.9521 mo
418.907 38.5967 418.347 39.1191 417.657 39.1191 cv
416.966 39.1191 416.407 38.5967 416.407 37.9521 cv
416.407 37.3086 416.966 36.7852 417.657 36.7852 cv
418.347 36.7852 418.907 37.3086 418.907 37.9521 cv
cp
f
435.156 37.9521 mo
435.156 38.5967 434.597 39.1191 433.906 39.1191 cv
433.216 39.1191 432.656 38.5967 432.656 37.9521 cv
432.656 37.3086 433.216 36.7852 433.906 36.7852 cv
434.597 36.7852 435.156 37.3086 435.156 37.9521 cv
cp
f
451.24 37.9512 mo
451.24 38.5957 450.68 39.1191 449.99 39.1191 cv
449.299 39.1191 448.74 38.5957 448.74 37.9512 cv
448.74 37.3076 449.299 36.7852 449.99 36.7852 cv
450.68 36.7852 451.24 37.3076 451.24 37.9512 cv
cp
f
466.574 37.9521 mo
466.574 38.5967 466.013 39.1191 465.324 39.1191 cv
464.632 39.1191 464.074 38.5967 464.074 37.9521 cv
464.074 37.3086 464.632 36.7852 465.324 36.7852 cv
466.013 36.7852 466.574 37.3086 466.574 37.9521 cv
cp
f
482.074 37.8691 mo
482.074 38.5137 481.513 39.0361 480.824 39.0361 cv
480.132 39.0361 479.574 38.5137 479.574 37.8691 cv
479.574 37.2246 480.132 36.7031 480.824 36.7031 cv
481.513 36.7031 482.074 37.2246 482.074 37.8691 cv
cp
f
497.574 37.8691 mo
497.574 38.5137 497.013 39.0361 496.324 39.0361 cv
495.632 39.0361 495.074 38.5137 495.074 37.8691 cv
495.074 37.2246 495.632 36.7031 496.324 36.7031 cv
497.013 36.7031 497.574 37.2246 497.574 37.8691 cv
cp
f
513.822 37.7852 mo
513.822 38.4297 513.263 38.9531 512.572 38.9531 cv
511.882 38.9531 511.322 38.4297 511.322 37.7852 cv
511.322 37.1416 511.882 36.6191 512.572 36.6191 cv
513.263 36.6191 513.822 37.1416 513.822 37.7852 cv
cp
f
529.99 37.8691 mo
529.99 38.5137 529.429 39.0361 528.74 39.0361 cv
528.048 39.0361 527.49 38.5137 527.49 37.8691 cv
527.49 37.2246 528.048 36.7031 528.74 36.7031 cv
529.429 36.7031 529.99 37.2246 529.99 37.8691 cv
cp
f
545.156 37.8691 mo
545.156 38.5137 544.597 39.0361 543.906 39.0361 cv
543.216 39.0361 542.656 38.5137 542.656 37.8691 cv
542.656 37.2246 543.216 36.7031 543.906 36.7031 cv
544.597 36.7031 545.156 37.2246 545.156 37.8691 cv
cp
f
560.572 37.7852 mo
560.572 38.4297 560.013 38.9531 559.322 38.9531 cv
558.632 38.9531 558.072 38.4297 558.072 37.7852 cv
558.072 37.1416 558.632 36.6191 559.322 36.6191 cv
560.013 36.6191 560.572 37.1416 560.572 37.7852 cv
cp
f
576.906 37.9521 mo
576.906 38.5967 576.347 39.1191 575.656 39.1191 cv
574.966 39.1191 574.406 38.5967 574.406 37.9521 cv
574.406 37.3086 574.966 36.7852 575.656 36.7852 cv
576.347 36.7852 576.906 37.3086 576.906 37.9521 cv
cp
f
593.24 37.8682 mo
593.24 38.5127 592.679 39.0352 591.99 39.0352 cv
591.298 39.0352 590.74 38.5127 590.74 37.8682 cv
590.74 37.2246 591.298 36.7012 591.99 36.7012 cv
592.679 36.7012 593.24 37.2246 593.24 37.8682 cv
cp
f
340.573 51.7852 mo
340.573 52.4297 340.014 52.9531 339.323 52.9531 cv
338.633 52.9531 338.073 52.4297 338.073 51.7852 cv
338.073 51.1416 338.633 50.6191 339.323 50.6191 cv
340.014 50.6191 340.573 51.1416 340.573 51.7852 cv
cp
f
356.573 51.9199 mo
356.573 52.5645 356.014 53.0879 355.323 53.0879 cv
354.633 53.0879 354.073 52.5645 354.073 51.9199 cv
354.073 51.2764 354.633 50.7539 355.323 50.7539 cv
356.014 50.7539 356.573 51.2764 356.573 51.9199 cv
cp
f
372.407 51.7539 mo
372.407 52.3984 371.847 52.9209 371.157 52.9209 cv
370.466 52.9209 369.907 52.3984 369.907 51.7539 cv
369.907 51.1094 370.466 50.5879 371.157 50.5879 cv
371.847 50.5879 372.407 51.1094 372.407 51.7539 cv
cp
f
387.907 51.9199 mo
387.907 52.5645 387.347 53.0879 386.657 53.0879 cv
385.966 53.0879 385.407 52.5645 385.407 51.9199 cv
385.407 51.2764 385.966 50.7539 386.657 50.7539 cv
387.347 50.7539 387.907 51.2764 387.907 51.9199 cv
cp
f
402.907 51.7861 mo
402.907 52.4307 402.347 52.9531 401.657 52.9531 cv
400.966 52.9531 400.407 52.4307 400.407 51.7861 cv
400.407 51.1426 400.966 50.6191 401.657 50.6191 cv
402.347 50.6191 402.907 51.1426 402.907 51.7861 cv
cp
f
418.907 51.8691 mo
418.907 52.5137 418.347 53.0361 417.657 53.0361 cv
416.966 53.0361 416.407 52.5137 416.407 51.8691 cv
416.407 51.2246 416.966 50.7031 417.657 50.7031 cv
418.347 50.7031 418.907 51.2246 418.907 51.8691 cv
cp
f
435.156 51.8691 mo
435.156 52.5137 434.597 53.0361 433.906 53.0361 cv
433.216 53.0361 432.656 52.5137 432.656 51.8691 cv
432.656 51.2246 433.216 50.7031 433.906 50.7031 cv
434.597 50.7031 435.156 51.2246 435.156 51.8691 cv
cp
f
451.24 51.8691 mo
451.24 52.5137 450.68 53.0352 449.99 53.0352 cv
449.299 53.0352 448.74 52.5137 448.74 51.8691 cv
448.74 51.2246 449.299 50.7021 449.99 50.7021 cv
450.68 50.7021 451.24 51.2246 451.24 51.8691 cv
cp
f
466.574 51.8691 mo
466.574 52.5137 466.013 53.0361 465.324 53.0361 cv
464.632 53.0361 464.074 52.5137 464.074 51.8691 cv
464.074 51.2246 464.632 50.7031 465.324 50.7031 cv
466.013 50.7031 466.574 51.2246 466.574 51.8691 cv
cp
f
482.074 51.7861 mo
482.074 52.4307 481.513 52.9531 480.824 52.9531 cv
480.132 52.9531 479.574 52.4307 479.574 51.7861 cv
479.574 51.1426 480.132 50.6191 480.824 50.6191 cv
481.513 50.6191 482.074 51.1426 482.074 51.7861 cv
cp
f
497.574 51.7861 mo
497.574 52.4307 497.013 52.9531 496.324 52.9531 cv
495.632 52.9531 495.074 52.4307 495.074 51.7861 cv
495.074 51.1426 495.632 50.6191 496.324 50.6191 cv
497.013 50.6191 497.574 51.1426 497.574 51.7861 cv
cp
f
513.822 51.7031 mo
513.822 52.3477 513.263 52.8691 512.572 52.8691 cv
511.882 52.8691 511.322 52.3477 511.322 51.7031 cv
511.322 51.0586 511.882 50.5361 512.572 50.5361 cv
513.263 50.5361 513.822 51.0586 513.822 51.7031 cv
cp
f
529.99 51.7861 mo
529.99 52.4307 529.429 52.9531 528.74 52.9531 cv
528.048 52.9531 527.49 52.4307 527.49 51.7861 cv
527.49 51.1426 528.048 50.6191 528.74 50.6191 cv
529.429 50.6191 529.99 51.1426 529.99 51.7861 cv
cp
f
545.156 51.7861 mo
545.156 52.4307 544.597 52.9531 543.906 52.9531 cv
543.216 52.9531 542.656 52.4307 542.656 51.7861 cv
542.656 51.1426 543.216 50.6191 543.906 50.6191 cv
544.597 50.6191 545.156 51.1426 545.156 51.7861 cv
cp
f
560.572 51.7031 mo
560.572 52.3477 560.013 52.8691 559.322 52.8691 cv
558.632 52.8691 558.072 52.3477 558.072 51.7031 cv
558.072 51.0586 558.632 50.5361 559.322 50.5361 cv
560.013 50.5361 560.572 51.0586 560.572 51.7031 cv
cp
f
576.906 51.8691 mo
576.906 52.5137 576.347 53.0361 575.656 53.0361 cv
574.966 53.0361 574.406 52.5137 574.406 51.8691 cv
574.406 51.2246 574.966 50.7031 575.656 50.7031 cv
576.347 50.7031 576.906 51.2246 576.906 51.8691 cv
cp
f
593.24 51.7852 mo
593.24 52.4297 592.679 52.9521 591.99 52.9521 cv
591.298 52.9521 590.74 52.4297 590.74 51.7852 cv
590.74 51.1406 591.298 50.6191 591.99 50.6191 cv
592.679 50.6191 593.24 51.1406 593.24 51.7852 cv
cp
f
340.74 67.2852 mo
340.74 67.9297 340.18 68.4531 339.49 68.4531 cv
338.799 68.4531 338.24 67.9297 338.24 67.2852 cv
338.24 66.6416 338.799 66.1191 339.49 66.1191 cv
340.18 66.1191 340.74 66.6416 340.74 67.2852 cv
cp
f
356.74 67.4199 mo
356.74 68.0645 356.18 68.5879 355.49 68.5879 cv
354.799 68.5879 354.24 68.0645 354.24 67.4199 cv
354.24 66.7764 354.799 66.2539 355.49 66.2539 cv
356.18 66.2539 356.74 66.7764 356.74 67.4199 cv
cp
f
372.573 67.2539 mo
372.573 67.8984 372.014 68.4209 371.323 68.4209 cv
370.633 68.4209 370.073 67.8984 370.073 67.2539 cv
370.073 66.6094 370.633 66.0879 371.323 66.0879 cv
372.014 66.0879 372.573 66.6094 372.573 67.2539 cv
cp
f
388.074 67.4199 mo
388.074 68.0645 387.513 68.5879 386.824 68.5879 cv
386.132 68.5879 385.574 68.0645 385.574 67.4199 cv
385.574 66.7764 386.132 66.2539 386.824 66.2539 cv
387.513 66.2539 388.074 66.7764 388.074 67.4199 cv
cp
f
403.074 67.2861 mo
403.074 67.9307 402.513 68.4531 401.824 68.4531 cv
401.132 68.4531 400.574 67.9307 400.574 67.2861 cv
400.574 66.6426 401.132 66.1191 401.824 66.1191 cv
402.513 66.1191 403.074 66.6426 403.074 67.2861 cv
cp
f
419.074 67.3691 mo
419.074 68.0137 418.513 68.5361 417.824 68.5361 cv
417.132 68.5361 416.574 68.0137 416.574 67.3691 cv
416.574 66.7246 417.132 66.2031 417.824 66.2031 cv
418.513 66.2031 419.074 66.7246 419.074 67.3691 cv
cp
f
435.323 67.3691 mo
435.323 68.0137 434.763 68.5361 434.073 68.5361 cv
433.382 68.5361 432.823 68.0137 432.823 67.3691 cv
432.823 66.7246 433.382 66.2031 434.073 66.2031 cv
434.763 66.2031 435.323 66.7246 435.323 67.3691 cv
cp
f
451.406 67.3691 mo
451.406 68.0137 450.847 68.5352 450.156 68.5352 cv
449.466 68.5352 448.906 68.0137 448.906 67.3691 cv
448.906 66.7246 449.466 66.2021 450.156 66.2021 cv
450.847 66.2021 451.406 66.7246 451.406 67.3691 cv
cp
f
466.74 67.3691 mo
466.74 68.0137 466.181 68.5361 465.49 68.5361 cv
464.8 68.5361 464.24 68.0137 464.24 67.3691 cv
464.24 66.7246 464.8 66.2031 465.49 66.2031 cv
466.181 66.2031 466.74 66.7246 466.74 67.3691 cv
cp
f
482.24 67.2861 mo
482.24 67.9307 481.679 68.4531 480.99 68.4531 cv
480.298 68.4531 479.74 67.9307 479.74 67.2861 cv
479.74 66.6426 480.298 66.1191 480.99 66.1191 cv
481.679 66.1191 482.24 66.6426 482.24 67.2861 cv
cp
f
497.74 67.2861 mo
497.74 67.9307 497.179 68.4531 496.49 68.4531 cv
495.798 68.4531 495.24 67.9307 495.24 67.2861 cv
495.24 66.6426 495.798 66.1191 496.49 66.1191 cv
497.179 66.1191 497.74 66.6426 497.74 67.2861 cv
cp
f
513.99 67.2031 mo
513.99 67.8477 513.429 68.3691 512.74 68.3691 cv
512.048 68.3691 511.49 67.8477 511.49 67.2031 cv
511.49 66.5586 512.048 66.0361 512.74 66.0361 cv
513.429 66.0361 513.99 66.5586 513.99 67.2031 cv
cp
f
530.156 67.2861 mo
530.156 67.9307 529.595 68.4531 528.906 68.4531 cv
528.214 68.4531 527.656 67.9307 527.656 67.2861 cv
527.656 66.6426 528.214 66.1191 528.906 66.1191 cv
529.595 66.1191 530.156 66.6426 530.156 67.2861 cv
cp
f
545.322 67.2861 mo
545.322 67.9307 544.763 68.4531 544.072 68.4531 cv
543.382 68.4531 542.822 67.9307 542.822 67.2861 cv
542.822 66.6426 543.382 66.1191 544.072 66.1191 cv
544.763 66.1191 545.322 66.6426 545.322 67.2861 cv
cp
f
560.74 67.2031 mo
560.74 67.8477 560.179 68.3691 559.49 68.3691 cv
558.798 68.3691 558.24 67.8477 558.24 67.2031 cv
558.24 66.5586 558.798 66.0361 559.49 66.0361 cv
560.179 66.0361 560.74 66.5586 560.74 67.2031 cv
cp
f
577.072 67.3691 mo
577.072 68.0137 576.513 68.5361 575.822 68.5361 cv
575.132 68.5361 574.572 68.0137 574.572 67.3691 cv
574.572 66.7246 575.132 66.2031 575.822 66.2031 cv
576.513 66.2031 577.072 66.7246 577.072 67.3691 cv
cp
f
593.406 67.2852 mo
593.406 67.9297 592.845 68.4521 592.156 68.4521 cv
591.464 68.4521 590.906 67.9297 590.906 67.2852 cv
590.906 66.6406 591.464 66.1191 592.156 66.1191 cv
592.845 66.1191 593.406 66.6406 593.406 67.2852 cv
cp
f
340.573 81.2852 mo
340.573 81.9297 340.014 82.4531 339.323 82.4531 cv
338.633 82.4531 338.073 81.9297 338.073 81.2852 cv
338.073 80.6416 338.633 80.1191 339.323 80.1191 cv
340.014 80.1191 340.573 80.6416 340.573 81.2852 cv
cp
f
356.573 81.4199 mo
356.573 82.0645 356.014 82.5879 355.323 82.5879 cv
354.633 82.5879 354.073 82.0645 354.073 81.4199 cv
354.073 80.7764 354.633 80.2539 355.323 80.2539 cv
356.014 80.2539 356.573 80.7764 356.573 81.4199 cv
cp
f
372.407 81.2539 mo
372.407 81.8984 371.847 82.4209 371.157 82.4209 cv
370.466 82.4209 369.907 81.8984 369.907 81.2539 cv
369.907 80.6094 370.466 80.0879 371.157 80.0879 cv
371.847 80.0879 372.407 80.6094 372.407 81.2539 cv
cp
f
387.907 81.4199 mo
387.907 82.0645 387.347 82.5879 386.657 82.5879 cv
385.966 82.5879 385.407 82.0645 385.407 81.4199 cv
385.407 80.7764 385.966 80.2539 386.657 80.2539 cv
387.347 80.2539 387.907 80.7764 387.907 81.4199 cv
cp
f
402.907 81.2861 mo
402.907 81.9307 402.347 82.4531 401.657 82.4531 cv
400.966 82.4531 400.407 81.9307 400.407 81.2861 cv
400.407 80.6426 400.966 80.1191 401.657 80.1191 cv
402.347 80.1191 402.907 80.6426 402.907 81.2861 cv
cp
f
418.907 81.3691 mo
418.907 82.0137 418.347 82.5361 417.657 82.5361 cv
416.966 82.5361 416.407 82.0137 416.407 81.3691 cv
416.407 80.7246 416.966 80.2031 417.657 80.2031 cv
418.347 80.2031 418.907 80.7246 418.907 81.3691 cv
cp
f
435.156 81.3691 mo
435.156 82.0137 434.597 82.5361 433.906 82.5361 cv
433.216 82.5361 432.656 82.0137 432.656 81.3691 cv
432.656 80.7246 433.216 80.2031 433.906 80.2031 cv
434.597 80.2031 435.156 80.7246 435.156 81.3691 cv
cp
f
451.24 81.3691 mo
451.24 82.0137 450.68 82.5352 449.99 82.5352 cv
449.299 82.5352 448.74 82.0137 448.74 81.3691 cv
448.74 80.7246 449.299 80.2021 449.99 80.2021 cv
450.68 80.2021 451.24 80.7246 451.24 81.3691 cv
cp
f
466.574 81.3691 mo
466.574 82.0137 466.013 82.5361 465.324 82.5361 cv
464.632 82.5361 464.074 82.0137 464.074 81.3691 cv
464.074 80.7246 464.632 80.2031 465.324 80.2031 cv
466.013 80.2031 466.574 80.7246 466.574 81.3691 cv
cp
f
482.074 81.2861 mo
482.074 81.9307 481.513 82.4531 480.824 82.4531 cv
480.132 82.4531 479.574 81.9307 479.574 81.2861 cv
479.574 80.6426 480.132 80.1191 480.824 80.1191 cv
481.513 80.1191 482.074 80.6426 482.074 81.2861 cv
cp
f
497.574 81.2861 mo
497.574 81.9307 497.013 82.4531 496.324 82.4531 cv
495.632 82.4531 495.074 81.9307 495.074 81.2861 cv
495.074 80.6426 495.632 80.1191 496.324 80.1191 cv
497.013 80.1191 497.574 80.6426 497.574 81.2861 cv
cp
f
513.822 81.2031 mo
513.822 81.8477 513.263 82.3691 512.572 82.3691 cv
511.882 82.3691 511.322 81.8477 511.322 81.2031 cv
511.322 80.5586 511.882 80.0361 512.572 80.0361 cv
513.263 80.0361 513.822 80.5586 513.822 81.2031 cv
cp
f
529.99 81.2861 mo
529.99 81.9307 529.429 82.4531 528.74 82.4531 cv
528.048 82.4531 527.49 81.9307 527.49 81.2861 cv
527.49 80.6426 528.048 80.1191 528.74 80.1191 cv
529.429 80.1191 529.99 80.6426 529.99 81.2861 cv
cp
f
545.156 81.2861 mo
545.156 81.9307 544.597 82.4531 543.906 82.4531 cv
543.216 82.4531 542.656 81.9307 542.656 81.2861 cv
542.656 80.6426 543.216 80.1191 543.906 80.1191 cv
544.597 80.1191 545.156 80.6426 545.156 81.2861 cv
cp
f
560.572 81.2031 mo
560.572 81.8477 560.013 82.3691 559.322 82.3691 cv
558.632 82.3691 558.072 81.8477 558.072 81.2031 cv
558.072 80.5586 558.632 80.0361 559.322 80.0361 cv
560.013 80.0361 560.572 80.5586 560.572 81.2031 cv
cp
f
576.906 81.3691 mo
576.906 82.0137 576.347 82.5361 575.656 82.5361 cv
574.966 82.5361 574.406 82.0137 574.406 81.3691 cv
574.406 80.7246 574.966 80.2031 575.656 80.2031 cv
576.347 80.2031 576.906 80.7246 576.906 81.3691 cv
cp
f
356.573 96.5879 mo
356.573 97.2324 356.014 97.7539 355.323 97.7539 cv
354.633 97.7539 354.073 97.2324 354.073 96.5879 cv
354.073 95.9434 354.633 95.4209 355.323 95.4209 cv
356.014 95.4209 356.573 95.9434 356.573 96.5879 cv
cp
f
372.407 96.4209 mo
372.407 97.0654 371.847 97.5879 371.157 97.5879 cv
370.466 97.5879 369.907 97.0654 369.907 96.4209 cv
369.907 95.7773 370.466 95.2539 371.157 95.2539 cv
371.847 95.2539 372.407 95.7773 372.407 96.4209 cv
cp
f
387.907 96.5879 mo
387.907 97.2324 387.347 97.7539 386.657 97.7539 cv
385.966 97.7539 385.407 97.2324 385.407 96.5879 cv
385.407 95.9434 385.966 95.4209 386.657 95.4209 cv
387.347 95.4209 387.907 95.9434 387.907 96.5879 cv
cp
f
402.907 96.4531 mo
402.907 97.0977 402.347 97.6201 401.657 97.6201 cv
400.966 97.6201 400.407 97.0977 400.407 96.4531 cv
400.407 95.8086 400.966 95.2871 401.657 95.2871 cv
402.347 95.2871 402.907 95.8086 402.907 96.4531 cv
cp
f
418.907 96.5361 mo
418.907 97.1807 418.347 97.7031 417.657 97.7031 cv
416.966 97.7031 416.407 97.1807 416.407 96.5361 cv
416.407 95.8926 416.966 95.3691 417.657 95.3691 cv
418.347 95.3691 418.907 95.8926 418.907 96.5361 cv
cp
f
435.156 96.5361 mo
435.156 97.1807 434.597 97.7031 433.906 97.7031 cv
433.216 97.7031 432.656 97.1807 432.656 96.5361 cv
432.656 95.8926 433.216 95.3691 433.906 95.3691 cv
434.597 95.3691 435.156 95.8926 435.156 96.5361 cv
cp
f
451.24 96.5352 mo
451.24 97.1797 450.68 97.7031 449.99 97.7031 cv
449.299 97.7031 448.74 97.1797 448.74 96.5352 cv
448.74 95.8916 449.299 95.3691 449.99 95.3691 cv
450.68 95.3691 451.24 95.8916 451.24 96.5352 cv
cp
f
466.574 96.5361 mo
466.574 97.1807 466.013 97.7031 465.324 97.7031 cv
464.632 97.7031 464.074 97.1807 464.074 96.5361 cv
464.074 95.8926 464.632 95.3691 465.324 95.3691 cv
466.013 95.3691 466.574 95.8926 466.574 96.5361 cv
cp
f
482.074 96.4531 mo
482.074 97.0977 481.513 97.6201 480.824 97.6201 cv
480.132 97.6201 479.574 97.0977 479.574 96.4531 cv
479.574 95.8086 480.132 95.2871 480.824 95.2871 cv
481.513 95.2871 482.074 95.8086 482.074 96.4531 cv
cp
f
497.574 96.4531 mo
497.574 97.0977 497.013 97.6201 496.324 97.6201 cv
495.632 97.6201 495.074 97.0977 495.074 96.4531 cv
495.074 95.8086 495.632 95.2871 496.324 95.2871 cv
497.013 95.2871 497.574 95.8086 497.574 96.4531 cv
cp
f
513.822 96.3691 mo
513.822 97.0137 513.263 97.5371 512.572 97.5371 cv
511.882 97.5371 511.322 97.0137 511.322 96.3691 cv
511.322 95.7256 511.882 95.2031 512.572 95.2031 cv
513.263 95.2031 513.822 95.7256 513.822 96.3691 cv
cp
f
529.99 96.4531 mo
529.99 97.0977 529.429 97.6201 528.74 97.6201 cv
528.048 97.6201 527.49 97.0977 527.49 96.4531 cv
527.49 95.8086 528.048 95.2871 528.74 95.2871 cv
529.429 95.2871 529.99 95.8086 529.99 96.4531 cv
cp
f
545.156 96.4531 mo
545.156 97.0977 544.597 97.6201 543.906 97.6201 cv
543.216 97.6201 542.656 97.0977 542.656 96.4531 cv
542.656 95.8086 543.216 95.2871 543.906 95.2871 cv
544.597 95.2871 545.156 95.8086 545.156 96.4531 cv
cp
f
560.572 96.3691 mo
560.572 97.0137 560.013 97.5371 559.322 97.5371 cv
558.632 97.5371 558.072 97.0137 558.072 96.3691 cv
558.072 95.7256 558.632 95.2031 559.322 95.2031 cv
560.013 95.2031 560.572 95.7256 560.572 96.3691 cv
cp
f
576.906 96.5361 mo
576.906 97.1807 576.347 97.7031 575.656 97.7031 cv
574.966 97.7031 574.406 97.1807 574.406 96.5361 cv
574.406 95.8926 574.966 95.3691 575.656 95.3691 cv
576.347 95.3691 576.906 95.8926 576.906 96.5361 cv
cp
f
356.573 110.588 mo
356.573 111.232 356.014 111.754 355.323 111.754 cv
354.633 111.754 354.073 111.232 354.073 110.588 cv
354.073 109.943 354.633 109.421 355.323 109.421 cv
356.014 109.421 356.573 109.943 356.573 110.588 cv
cp
f
372.407 110.421 mo
372.407 111.065 371.847 111.588 371.157 111.588 cv
370.466 111.588 369.907 111.065 369.907 110.421 cv
369.907 109.777 370.466 109.254 371.157 109.254 cv
371.847 109.254 372.407 109.777 372.407 110.421 cv
cp
f
387.907 110.588 mo
387.907 111.232 387.347 111.754 386.657 111.754 cv
385.966 111.754 385.407 111.232 385.407 110.588 cv
385.407 109.943 385.966 109.421 386.657 109.421 cv
387.347 109.421 387.907 109.943 387.907 110.588 cv
cp
f
402.907 110.453 mo
402.907 111.098 402.347 111.62 401.657 111.62 cv
400.966 111.62 400.407 111.098 400.407 110.453 cv
400.407 109.809 400.966 109.287 401.657 109.287 cv
402.347 109.287 402.907 109.809 402.907 110.453 cv
cp
f
418.907 110.536 mo
418.907 111.181 418.347 111.703 417.657 111.703 cv
416.966 111.703 416.407 111.181 416.407 110.536 cv
416.407 109.893 416.966 109.369 417.657 109.369 cv
418.347 109.369 418.907 109.893 418.907 110.536 cv
cp
f
435.156 110.536 mo
435.156 111.181 434.597 111.703 433.906 111.703 cv
433.216 111.703 432.656 111.181 432.656 110.536 cv
432.656 109.893 433.216 109.369 433.906 109.369 cv
434.597 109.369 435.156 109.893 435.156 110.536 cv
cp
f
451.24 110.535 mo
451.24 111.18 450.68 111.703 449.99 111.703 cv
449.299 111.703 448.74 111.18 448.74 110.535 cv
448.74 109.892 449.299 109.369 449.99 109.369 cv
450.68 109.369 451.24 109.892 451.24 110.535 cv
cp
f
466.574 110.536 mo
466.574 111.181 466.013 111.703 465.324 111.703 cv
464.632 111.703 464.074 111.181 464.074 110.536 cv
464.074 109.893 464.632 109.369 465.324 109.369 cv
466.013 109.369 466.574 109.893 466.574 110.536 cv
cp
f
482.074 110.453 mo
482.074 111.098 481.513 111.62 480.824 111.62 cv
480.132 111.62 479.574 111.098 479.574 110.453 cv
479.574 109.809 480.132 109.287 480.824 109.287 cv
481.513 109.287 482.074 109.809 482.074 110.453 cv
cp
f
497.574 110.453 mo
497.574 111.098 497.013 111.62 496.324 111.62 cv
495.632 111.62 495.074 111.098 495.074 110.453 cv
495.074 109.809 495.632 109.287 496.324 109.287 cv
497.013 109.287 497.574 109.809 497.574 110.453 cv
cp
f
513.822 110.369 mo
513.822 111.014 513.263 111.537 512.572 111.537 cv
511.882 111.537 511.322 111.014 511.322 110.369 cv
511.322 109.726 511.882 109.203 512.572 109.203 cv
513.263 109.203 513.822 109.726 513.822 110.369 cv
cp
f
529.99 110.453 mo
529.99 111.098 529.429 111.62 528.74 111.62 cv
528.048 111.62 527.49 111.098 527.49 110.453 cv
527.49 109.809 528.048 109.287 528.74 109.287 cv
529.429 109.287 529.99 109.809 529.99 110.453 cv
cp
f
545.156 110.453 mo
545.156 111.098 544.597 111.62 543.906 111.62 cv
543.216 111.62 542.656 111.098 542.656 110.453 cv
542.656 109.809 543.216 109.287 543.906 109.287 cv
544.597 109.287 545.156 109.809 545.156 110.453 cv
cp
f
560.572 110.369 mo
560.572 111.014 560.013 111.537 559.322 111.537 cv
558.632 111.537 558.072 111.014 558.072 110.369 cv
558.072 109.726 558.632 109.203 559.322 109.203 cv
560.013 109.203 560.572 109.726 560.572 110.369 cv
cp
f
576.906 110.536 mo
576.906 111.181 576.347 111.703 575.656 111.703 cv
574.966 111.703 574.406 111.181 574.406 110.536 cv
574.406 109.893 574.966 109.369 575.656 109.369 cv
576.347 109.369 576.906 109.893 576.906 110.536 cv
cp
f
356.573 125.921 mo
356.573 126.565 356.014 127.087 355.323 127.087 cv
354.633 127.087 354.073 126.565 354.073 125.921 cv
354.073 125.276 354.633 124.754 355.323 124.754 cv
356.014 124.754 356.573 125.276 356.573 125.921 cv
cp
f
372.407 125.754 mo
372.407 126.398 371.847 126.921 371.157 126.921 cv
370.466 126.921 369.907 126.398 369.907 125.754 cv
369.907 125.11 370.466 124.587 371.157 124.587 cv
371.847 124.587 372.407 125.11 372.407 125.754 cv
cp
f
387.907 125.921 mo
387.907 126.565 387.347 127.087 386.657 127.087 cv
385.966 127.087 385.407 126.565 385.407 125.921 cv
385.407 125.276 385.966 124.754 386.657 124.754 cv
387.347 124.754 387.907 125.276 387.907 125.921 cv
cp
f
402.907 125.786 mo
402.907 126.431 402.347 126.953 401.657 126.953 cv
400.966 126.953 400.407 126.431 400.407 125.786 cv
400.407 125.142 400.966 124.62 401.657 124.62 cv
402.347 124.62 402.907 125.142 402.907 125.786 cv
cp
f
418.907 125.869 mo
418.907 126.514 418.347 127.036 417.657 127.036 cv
416.966 127.036 416.407 126.514 416.407 125.869 cv
416.407 125.226 416.966 124.702 417.657 124.702 cv
418.347 124.702 418.907 125.226 418.907 125.869 cv
cp
f
435.156 125.869 mo
435.156 126.514 434.597 127.036 433.906 127.036 cv
433.216 127.036 432.656 126.514 432.656 125.869 cv
432.656 125.226 433.216 124.702 433.906 124.702 cv
434.597 124.702 435.156 125.226 435.156 125.869 cv
cp
f
451.24 125.868 mo
451.24 126.513 450.68 127.036 449.99 127.036 cv
449.299 127.036 448.74 126.513 448.74 125.868 cv
448.74 125.225 449.299 124.702 449.99 124.702 cv
450.68 124.702 451.24 125.225 451.24 125.868 cv
cp
f
466.574 125.869 mo
466.574 126.514 466.013 127.036 465.324 127.036 cv
464.632 127.036 464.074 126.514 464.074 125.869 cv
464.074 125.226 464.632 124.702 465.324 124.702 cv
466.013 124.702 466.574 125.226 466.574 125.869 cv
cp
f
482.074 125.786 mo
482.074 126.431 481.513 126.953 480.824 126.953 cv
480.132 126.953 479.574 126.431 479.574 125.786 cv
479.574 125.142 480.132 124.62 480.824 124.62 cv
481.513 124.62 482.074 125.142 482.074 125.786 cv
cp
f
497.574 125.786 mo
497.574 126.431 497.013 126.953 496.324 126.953 cv
495.632 126.953 495.074 126.431 495.074 125.786 cv
495.074 125.142 495.632 124.62 496.324 124.62 cv
497.013 124.62 497.574 125.142 497.574 125.786 cv
cp
f
513.822 125.702 mo
513.822 126.347 513.263 126.87 512.572 126.87 cv
511.882 126.87 511.322 126.347 511.322 125.702 cv
511.322 125.059 511.882 124.536 512.572 124.536 cv
513.263 124.536 513.822 125.059 513.822 125.702 cv
cp
f
529.99 125.786 mo
529.99 126.431 529.429 126.953 528.74 126.953 cv
528.048 126.953 527.49 126.431 527.49 125.786 cv
527.49 125.142 528.048 124.62 528.74 124.62 cv
529.429 124.62 529.99 125.142 529.99 125.786 cv
cp
f
545.156 125.786 mo
545.156 126.431 544.597 126.953 543.906 126.953 cv
543.216 126.953 542.656 126.431 542.656 125.786 cv
542.656 125.142 543.216 124.62 543.906 124.62 cv
544.597 124.62 545.156 125.142 545.156 125.786 cv
cp
f
560.572 125.702 mo
560.572 126.347 560.013 126.87 559.322 126.87 cv
558.632 126.87 558.072 126.347 558.072 125.702 cv
558.072 125.059 558.632 124.536 559.322 124.536 cv
560.013 124.536 560.572 125.059 560.572 125.702 cv
cp
f
576.906 125.869 mo
576.906 126.514 576.347 127.036 575.656 127.036 cv
574.966 127.036 574.406 126.514 574.406 125.869 cv
574.406 125.226 574.966 124.702 575.656 124.702 cv
576.347 124.702 576.906 125.226 576.906 125.869 cv
cp
f
356.573 139.421 mo
356.573 140.065 356.014 140.587 355.323 140.587 cv
354.633 140.587 354.073 140.065 354.073 139.421 cv
354.073 138.776 354.633 138.254 355.323 138.254 cv
356.014 138.254 356.573 138.776 356.573 139.421 cv
cp
f
372.407 139.254 mo
372.407 139.898 371.847 140.421 371.157 140.421 cv
370.466 140.421 369.907 139.898 369.907 139.254 cv
369.907 138.61 370.466 138.087 371.157 138.087 cv
371.847 138.087 372.407 138.61 372.407 139.254 cv
cp
f
387.907 139.421 mo
387.907 140.065 387.347 140.587 386.657 140.587 cv
385.966 140.587 385.407 140.065 385.407 139.421 cv
385.407 138.776 385.966 138.254 386.657 138.254 cv
387.347 138.254 387.907 138.776 387.907 139.421 cv
cp
f
402.907 139.286 mo
402.907 139.931 402.347 140.453 401.657 140.453 cv
400.966 140.453 400.407 139.931 400.407 139.286 cv
400.407 138.642 400.966 138.12 401.657 138.12 cv
402.347 138.12 402.907 138.642 402.907 139.286 cv
cp
f
418.907 139.369 mo
418.907 140.014 418.347 140.536 417.657 140.536 cv
416.966 140.536 416.407 140.014 416.407 139.369 cv
416.407 138.726 416.966 138.202 417.657 138.202 cv
418.347 138.202 418.907 138.726 418.907 139.369 cv
cp
f
435.156 139.369 mo
435.156 140.014 434.597 140.536 433.906 140.536 cv
433.216 140.536 432.656 140.014 432.656 139.369 cv
432.656 138.726 433.216 138.202 433.906 138.202 cv
434.597 138.202 435.156 138.726 435.156 139.369 cv
cp
f
451.24 139.368 mo
451.24 140.013 450.68 140.536 449.99 140.536 cv
449.299 140.536 448.74 140.013 448.74 139.368 cv
448.74 138.725 449.299 138.202 449.99 138.202 cv
450.68 138.202 451.24 138.725 451.24 139.368 cv
cp
f
466.574 139.369 mo
466.574 140.014 466.013 140.536 465.324 140.536 cv
464.632 140.536 464.074 140.014 464.074 139.369 cv
464.074 138.726 464.632 138.202 465.324 138.202 cv
466.013 138.202 466.574 138.726 466.574 139.369 cv
cp
f
482.074 139.286 mo
482.074 139.931 481.513 140.453 480.824 140.453 cv
480.132 140.453 479.574 139.931 479.574 139.286 cv
479.574 138.642 480.132 138.12 480.824 138.12 cv
481.513 138.12 482.074 138.642 482.074 139.286 cv
cp
f
497.574 139.286 mo
497.574 139.931 497.013 140.453 496.324 140.453 cv
495.632 140.453 495.074 139.931 495.074 139.286 cv
495.074 138.642 495.632 138.12 496.324 138.12 cv
497.013 138.12 497.574 138.642 497.574 139.286 cv
cp
f
513.822 139.202 mo
513.822 139.847 513.263 140.37 512.572 140.37 cv
511.882 140.37 511.322 139.847 511.322 139.202 cv
511.322 138.559 511.882 138.036 512.572 138.036 cv
513.263 138.036 513.822 138.559 513.822 139.202 cv
cp
f
529.99 139.286 mo
529.99 139.931 529.429 140.453 528.74 140.453 cv
528.048 140.453 527.49 139.931 527.49 139.286 cv
527.49 138.642 528.048 138.12 528.74 138.12 cv
529.429 138.12 529.99 138.642 529.99 139.286 cv
cp
f
545.156 139.286 mo
545.156 139.931 544.597 140.453 543.906 140.453 cv
543.216 140.453 542.656 139.931 542.656 139.286 cv
542.656 138.642 543.216 138.12 543.906 138.12 cv
544.597 138.12 545.156 138.642 545.156 139.286 cv
cp
f
560.572 139.202 mo
560.572 139.847 560.013 140.37 559.322 140.37 cv
558.632 140.37 558.072 139.847 558.072 139.202 cv
558.072 138.559 558.632 138.036 559.322 138.036 cv
560.013 138.036 560.572 138.559 560.572 139.202 cv
cp
f
576.906 139.369 mo
576.906 140.014 576.347 140.536 575.656 140.536 cv
574.966 140.536 574.406 140.014 574.406 139.369 cv
574.406 138.726 574.966 138.202 575.656 138.202 cv
576.347 138.202 576.906 138.726 576.906 139.369 cv
cp
f
356.573 154.755 mo
356.573 155.399 356.014 155.921 355.323 155.921 cv
354.633 155.921 354.073 155.399 354.073 154.755 cv
354.073 154.11 354.633 153.587 355.323 153.587 cv
356.014 153.587 356.573 154.11 356.573 154.755 cv
cp
f
372.407 154.587 mo
372.407 155.231 371.847 155.755 371.157 155.755 cv
370.466 155.755 369.907 155.231 369.907 154.587 cv
369.907 153.944 370.466 153.421 371.157 153.421 cv
371.847 153.421 372.407 153.944 372.407 154.587 cv
cp
f
387.907 154.755 mo
387.907 155.399 387.347 155.921 386.657 155.921 cv
385.966 155.921 385.407 155.399 385.407 154.755 cv
385.407 154.11 385.966 153.587 386.657 153.587 cv
387.347 153.587 387.907 154.11 387.907 154.755 cv
cp
f
402.907 154.62 mo
402.907 155.265 402.347 155.786 401.657 155.786 cv
400.966 155.786 400.407 155.265 400.407 154.62 cv
400.407 153.976 400.966 153.454 401.657 153.454 cv
402.347 153.454 402.907 153.976 402.907 154.62 cv
cp
f
418.907 154.702 mo
418.907 155.347 418.347 155.87 417.657 155.87 cv
416.966 155.87 416.407 155.347 416.407 154.702 cv
416.407 154.06 416.966 153.536 417.657 153.536 cv
418.347 153.536 418.907 154.06 418.907 154.702 cv
cp
f
435.156 154.702 mo
435.156 155.347 434.597 155.87 433.906 155.87 cv
433.216 155.87 432.656 155.347 432.656 154.702 cv
432.656 154.06 433.216 153.536 433.906 153.536 cv
434.597 153.536 435.156 154.06 435.156 154.702 cv
cp
f
451.24 154.702 mo
451.24 155.347 450.68 155.87 449.99 155.87 cv
449.299 155.87 448.74 155.347 448.74 154.702 cv
448.74 154.058 449.299 153.536 449.99 153.536 cv
450.68 153.536 451.24 154.058 451.24 154.702 cv
cp
f
466.574 154.702 mo
466.574 155.347 466.013 155.87 465.324 155.87 cv
464.632 155.87 464.074 155.347 464.074 154.702 cv
464.074 154.06 464.632 153.536 465.324 153.536 cv
466.013 153.536 466.574 154.06 466.574 154.702 cv
cp
f
482.074 154.62 mo
482.074 155.265 481.513 155.786 480.824 155.786 cv
480.132 155.786 479.574 155.265 479.574 154.62 cv
479.574 153.976 480.132 153.454 480.824 153.454 cv
481.513 153.454 482.074 153.976 482.074 154.62 cv
cp
f
497.574 154.62 mo
497.574 155.265 497.013 155.786 496.324 155.786 cv
495.632 155.786 495.074 155.265 495.074 154.62 cv
495.074 153.976 495.632 153.454 496.324 153.454 cv
497.013 153.454 497.574 153.976 497.574 154.62 cv
cp
f
513.822 154.536 mo
513.822 155.181 513.263 155.704 512.572 155.704 cv
511.882 155.704 511.322 155.181 511.322 154.536 cv
511.322 153.892 511.882 153.37 512.572 153.37 cv
513.263 153.37 513.822 153.892 513.822 154.536 cv
cp
f
529.99 154.62 mo
529.99 155.265 529.429 155.786 528.74 155.786 cv
528.048 155.786 527.49 155.265 527.49 154.62 cv
527.49 153.976 528.048 153.454 528.74 153.454 cv
529.429 153.454 529.99 153.976 529.99 154.62 cv
cp
f
545.156 154.62 mo
545.156 155.265 544.597 155.786 543.906 155.786 cv
543.216 155.786 542.656 155.265 542.656 154.62 cv
542.656 153.976 543.216 153.454 543.906 153.454 cv
544.597 153.454 545.156 153.976 545.156 154.62 cv
cp
f
560.572 154.536 mo
560.572 155.181 560.013 155.704 559.322 155.704 cv
558.632 155.704 558.072 155.181 558.072 154.536 cv
558.072 153.892 558.632 153.37 559.322 153.37 cv
560.013 153.37 560.572 153.892 560.572 154.536 cv
cp
f
372.407 168.587 mo
372.407 169.231 371.847 169.755 371.157 169.755 cv
370.466 169.755 369.907 169.231 369.907 168.587 cv
369.907 167.944 370.466 167.421 371.157 167.421 cv
371.847 167.421 372.407 167.944 372.407 168.587 cv
cp
f
387.907 168.755 mo
387.907 169.399 387.347 169.921 386.657 169.921 cv
385.966 169.921 385.407 169.399 385.407 168.755 cv
385.407 168.11 385.966 167.587 386.657 167.587 cv
387.347 167.587 387.907 168.11 387.907 168.755 cv
cp
f
402.907 168.62 mo
402.907 169.265 402.347 169.786 401.657 169.786 cv
400.966 169.786 400.407 169.265 400.407 168.62 cv
400.407 167.976 400.966 167.454 401.657 167.454 cv
402.347 167.454 402.907 167.976 402.907 168.62 cv
cp
f
418.907 168.702 mo
418.907 169.347 418.347 169.87 417.657 169.87 cv
416.966 169.87 416.407 169.347 416.407 168.702 cv
416.407 168.06 416.966 167.536 417.657 167.536 cv
418.347 167.536 418.907 168.06 418.907 168.702 cv
cp
f
435.156 168.702 mo
435.156 169.347 434.597 169.87 433.906 169.87 cv
433.216 169.87 432.656 169.347 432.656 168.702 cv
432.656 168.06 433.216 167.536 433.906 167.536 cv
434.597 167.536 435.156 168.06 435.156 168.702 cv
cp
f
451.24 168.702 mo
451.24 169.347 450.68 169.87 449.99 169.87 cv
449.299 169.87 448.74 169.347 448.74 168.702 cv
448.74 168.058 449.299 167.536 449.99 167.536 cv
450.68 167.536 451.24 168.058 451.24 168.702 cv
cp
f
466.574 168.702 mo
466.574 169.347 466.013 169.87 465.324 169.87 cv
464.632 169.87 464.074 169.347 464.074 168.702 cv
464.074 168.06 464.632 167.536 465.324 167.536 cv
466.013 167.536 466.574 168.06 466.574 168.702 cv
cp
f
482.074 168.62 mo
482.074 169.265 481.513 169.786 480.824 169.786 cv
480.132 169.786 479.574 169.265 479.574 168.62 cv
479.574 167.976 480.132 167.454 480.824 167.454 cv
481.513 167.454 482.074 167.976 482.074 168.62 cv
cp
f
497.574 168.62 mo
497.574 169.265 497.013 169.786 496.324 169.786 cv
495.632 169.786 495.074 169.265 495.074 168.62 cv
495.074 167.976 495.632 167.454 496.324 167.454 cv
497.013 167.454 497.574 167.976 497.574 168.62 cv
cp
f
513.822 168.536 mo
513.822 169.181 513.263 169.704 512.572 169.704 cv
511.882 169.704 511.322 169.181 511.322 168.536 cv
511.322 167.892 511.882 167.37 512.572 167.37 cv
513.263 167.37 513.822 167.892 513.822 168.536 cv
cp
f
529.99 168.62 mo
529.99 169.265 529.429 169.786 528.74 169.786 cv
528.048 169.786 527.49 169.265 527.49 168.62 cv
527.49 167.976 528.048 167.454 528.74 167.454 cv
529.429 167.454 529.99 167.976 529.99 168.62 cv
cp
f
545.156 168.62 mo
545.156 169.265 544.597 169.786 543.906 169.786 cv
543.216 169.786 542.656 169.265 542.656 168.62 cv
542.656 167.976 543.216 167.454 543.906 167.454 cv
544.597 167.454 545.156 167.976 545.156 168.62 cv
cp
f
560.572 168.536 mo
560.572 169.181 560.013 169.704 559.322 169.704 cv
558.632 169.704 558.072 169.181 558.072 168.536 cv
558.072 167.892 558.632 167.37 559.322 167.37 cv
560.013 167.37 560.572 167.892 560.572 168.536 cv
cp
f
434.99 184.118 mo
434.99 184.763 434.43 185.286 433.74 185.286 cv
433.049 185.286 432.49 184.763 432.49 184.118 cv
432.49 183.476 433.049 182.952 433.74 182.952 cv
434.43 182.952 434.99 183.476 434.99 184.118 cv
cp
f
324.698 22.4209 mo
324.698 23.0654 324.139 23.5879 323.448 23.5879 cv
322.758 23.5879 322.198 23.0654 322.198 22.4209 cv
322.198 21.7773 322.758 21.2539 323.448 21.2539 cv
324.139 21.2539 324.698 21.7773 324.698 22.4209 cv
cp
0 0 1 0 cmyk
f
609.031 22.4521 mo
609.031 23.0967 608.472 23.6191 607.781 23.6191 cv
607.091 23.6191 606.531 23.0967 606.531 22.4521 cv
606.531 21.8086 607.091 21.2852 607.781 21.2852 cv
608.472 21.2852 609.031 21.8086 609.031 22.4521 cv
cp
f
324.823 37.7539 mo
324.823 38.3984 324.264 38.9209 323.573 38.9209 cv
322.883 38.9209 322.323 38.3984 322.323 37.7539 cv
322.323 37.1094 322.883 36.5879 323.573 36.5879 cv
324.264 36.5879 324.823 37.1094 324.823 37.7539 cv
cp
f
609.156 37.7852 mo
609.156 38.4297 608.597 38.9521 607.906 38.9521 cv
607.216 38.9521 606.656 38.4297 606.656 37.7852 cv
606.656 37.1406 607.216 36.6191 607.906 36.6191 cv
608.597 36.6191 609.156 37.1406 609.156 37.7852 cv
cp
f
324.823 51.6709 mo
324.823 52.3154 324.264 52.8379 323.573 52.8379 cv
322.883 52.8379 322.323 52.3154 322.323 51.6709 cv
322.323 51.0273 322.883 50.5039 323.573 50.5039 cv
324.264 50.5039 324.823 51.0273 324.823 51.6709 cv
cp
f
609.156 51.7021 mo
609.156 52.3467 608.597 52.8691 607.906 52.8691 cv
607.216 52.8691 606.656 52.3467 606.656 51.7021 cv
606.656 51.0586 607.216 50.5352 607.906 50.5352 cv
608.597 50.5352 609.156 51.0586 609.156 51.7021 cv
cp
f
324.99 67.1709 mo
324.99 67.8154 324.43 68.3379 323.74 68.3379 cv
323.049 68.3379 322.49 67.8154 322.49 67.1709 cv
322.49 66.5273 323.049 66.0039 323.74 66.0039 cv
324.43 66.0039 324.99 66.5273 324.99 67.1709 cv
cp
f
609.322 67.2021 mo
609.322 67.8467 608.763 68.3691 608.072 68.3691 cv
607.382 68.3691 606.822 67.8467 606.822 67.2021 cv
606.822 66.5586 607.382 66.0352 608.072 66.0352 cv
608.763 66.0352 609.322 66.5586 609.322 67.2021 cv
cp
f
324.823 81.1709 mo
324.823 81.8154 324.264 82.3379 323.573 82.3379 cv
322.883 82.3379 322.323 81.8154 322.323 81.1709 cv
322.323 80.5273 322.883 80.0039 323.573 80.0039 cv
324.264 80.0039 324.823 80.5273 324.823 81.1709 cv
cp
f
593.24 81.2852 mo
593.24 81.9297 592.679 82.4521 591.99 82.4521 cv
591.298 82.4521 590.74 81.9297 590.74 81.2852 cv
590.74 80.6406 591.298 80.1191 591.99 80.1191 cv
592.679 80.1191 593.24 80.6406 593.24 81.2852 cv
cp
f
609.156 81.2021 mo
609.156 81.8467 608.597 82.3691 607.906 82.3691 cv
607.216 82.3691 606.656 81.8467 606.656 81.2021 cv
606.656 80.5586 607.216 80.0352 607.906 80.0352 cv
608.597 80.0352 609.156 80.5586 609.156 81.2021 cv
cp
f
324.823 96.3379 mo
324.823 96.9824 324.264 97.5049 323.573 97.5049 cv
322.883 97.5049 322.323 96.9824 322.323 96.3379 cv
322.323 95.6934 322.883 95.1719 323.573 95.1719 cv
324.264 95.1719 324.823 95.6934 324.823 96.3379 cv
cp
f
340.573 96.4531 mo
340.573 97.0977 340.014 97.6191 339.323 97.6191 cv
338.633 97.6191 338.073 97.0977 338.073 96.4531 cv
338.073 95.8086 338.633 95.2861 339.323 95.2861 cv
340.014 95.2861 340.573 95.8086 340.573 96.4531 cv
cp
f
593.24 96.4521 mo
593.24 97.0967 592.679 97.6191 591.99 97.6191 cv
591.298 97.6191 590.74 97.0967 590.74 96.4521 cv
590.74 95.8086 591.298 95.2852 591.99 95.2852 cv
592.679 95.2852 593.24 95.8086 593.24 96.4521 cv
cp
f
609.156 96.3691 mo
609.156 97.0137 608.597 97.5361 607.906 97.5361 cv
607.216 97.5361 606.656 97.0137 606.656 96.3691 cv
606.656 95.7246 607.216 95.2031 607.906 95.2031 cv
608.597 95.2031 609.156 95.7246 609.156 96.3691 cv
cp
f
324.823 110.338 mo
324.823 110.982 324.264 111.505 323.573 111.505 cv
322.883 111.505 322.323 110.982 322.323 110.338 cv
322.323 109.693 322.883 109.172 323.573 109.172 cv
324.264 109.172 324.823 109.693 324.823 110.338 cv
cp
f
340.573 110.453 mo
340.573 111.098 340.014 111.619 339.323 111.619 cv
338.633 111.619 338.073 111.098 338.073 110.453 cv
338.073 109.809 338.633 109.286 339.323 109.286 cv
340.014 109.286 340.573 109.809 340.573 110.453 cv
cp
f
593.24 110.452 mo
593.24 111.097 592.679 111.619 591.99 111.619 cv
591.298 111.619 590.74 111.097 590.74 110.452 cv
590.74 109.809 591.298 109.285 591.99 109.285 cv
592.679 109.285 593.24 109.809 593.24 110.452 cv
cp
f
609.156 110.369 mo
609.156 111.014 608.597 111.536 607.906 111.536 cv
607.216 111.536 606.656 111.014 606.656 110.369 cv
606.656 109.725 607.216 109.203 607.906 109.203 cv
608.597 109.203 609.156 109.725 609.156 110.369 cv
cp
f
324.823 125.671 mo
324.823 126.315 324.264 126.838 323.573 126.838 cv
322.883 126.838 322.323 126.315 322.323 125.671 cv
322.323 125.026 322.883 124.505 323.573 124.505 cv
324.264 124.505 324.823 125.026 324.823 125.671 cv
cp
f
340.573 125.786 mo
340.573 126.431 340.014 126.952 339.323 126.952 cv
338.633 126.952 338.073 126.431 338.073 125.786 cv
338.073 125.142 338.633 124.619 339.323 124.619 cv
340.014 124.619 340.573 125.142 340.573 125.786 cv
cp
f
593.24 125.785 mo
593.24 126.43 592.679 126.952 591.99 126.952 cv
591.298 126.952 590.74 126.43 590.74 125.785 cv
590.74 125.142 591.298 124.618 591.99 124.618 cv
592.679 124.618 593.24 125.142 593.24 125.785 cv
cp
f
609.156 125.702 mo
609.156 126.347 608.597 126.869 607.906 126.869 cv
607.216 126.869 606.656 126.347 606.656 125.702 cv
606.656 125.058 607.216 124.536 607.906 124.536 cv
608.597 124.536 609.156 125.058 609.156 125.702 cv
cp
f
324.823 139.171 mo
324.823 139.815 324.264 140.338 323.573 140.338 cv
322.883 140.338 322.323 139.815 322.323 139.171 cv
322.323 138.526 322.883 138.005 323.573 138.005 cv
324.264 138.005 324.823 138.526 324.823 139.171 cv
cp
f
340.573 139.286 mo
340.573 139.931 340.014 140.452 339.323 140.452 cv
338.633 140.452 338.073 139.931 338.073 139.286 cv
338.073 138.642 338.633 138.119 339.323 138.119 cv
340.014 138.119 340.573 138.642 340.573 139.286 cv
cp
f
593.24 139.285 mo
593.24 139.93 592.679 140.452 591.99 140.452 cv
591.298 140.452 590.74 139.93 590.74 139.285 cv
590.74 138.642 591.298 138.118 591.99 138.118 cv
592.679 138.118 593.24 138.642 593.24 139.285 cv
cp
f
609.156 139.202 mo
609.156 139.847 608.597 140.369 607.906 140.369 cv
607.216 140.369 606.656 139.847 606.656 139.202 cv
606.656 138.558 607.216 138.036 607.906 138.036 cv
608.597 138.036 609.156 138.558 609.156 139.202 cv
cp
f
324.823 154.505 mo
324.823 155.149 324.264 155.671 323.573 155.671 cv
322.883 155.671 322.323 155.149 322.323 154.505 cv
322.323 153.86 322.883 153.339 323.573 153.339 cv
324.264 153.339 324.823 153.86 324.823 154.505 cv
cp
f
340.573 154.62 mo
340.573 155.265 340.014 155.786 339.323 155.786 cv
338.633 155.786 338.073 155.265 338.073 154.62 cv
338.073 153.976 338.633 153.452 339.323 153.452 cv
340.014 153.452 340.573 153.976 340.573 154.62 cv
cp
f
576.906 154.702 mo
576.906 155.347 576.347 155.87 575.656 155.87 cv
574.966 155.87 574.406 155.347 574.406 154.702 cv
574.406 154.06 574.966 153.536 575.656 153.536 cv
576.347 153.536 576.906 154.06 576.906 154.702 cv
cp
f
593.24 154.618 mo
593.24 155.263 592.679 155.786 591.99 155.786 cv
591.298 155.786 590.74 155.263 590.74 154.618 cv
590.74 153.976 591.298 153.452 591.99 153.452 cv
592.679 153.452 593.24 153.976 593.24 154.618 cv
cp
f
609.156 154.536 mo
609.156 155.181 608.597 155.702 607.906 155.702 cv
607.216 155.702 606.656 155.181 606.656 154.536 cv
606.656 153.892 607.216 153.37 607.906 153.37 cv
608.597 153.37 609.156 153.892 609.156 154.536 cv
cp
f
324.823 168.505 mo
324.823 169.149 324.264 169.671 323.573 169.671 cv
322.883 169.671 322.323 169.149 322.323 168.505 cv
322.323 167.86 322.883 167.339 323.573 167.339 cv
324.264 167.339 324.823 167.86 324.823 168.505 cv
cp
f
340.573 168.62 mo
340.573 169.265 340.014 169.786 339.323 169.786 cv
338.633 169.786 338.073 169.265 338.073 168.62 cv
338.073 167.976 338.633 167.452 339.323 167.452 cv
340.014 167.452 340.573 167.976 340.573 168.62 cv
cp
f
356.573 168.755 mo
356.573 169.399 356.014 169.921 355.323 169.921 cv
354.633 169.921 354.073 169.399 354.073 168.755 cv
354.073 168.11 354.633 167.587 355.323 167.587 cv
356.014 167.587 356.573 168.11 356.573 168.755 cv
cp
f
576.906 168.702 mo
576.906 169.347 576.347 169.87 575.656 169.87 cv
574.966 169.87 574.406 169.347 574.406 168.702 cv
574.406 168.06 574.966 167.536 575.656 167.536 cv
576.347 167.536 576.906 168.06 576.906 168.702 cv
cp
f
593.24 168.618 mo
593.24 169.263 592.679 169.786 591.99 169.786 cv
591.298 169.786 590.74 169.263 590.74 168.618 cv
590.74 167.976 591.298 167.452 591.99 167.452 cv
592.679 167.452 593.24 167.976 593.24 168.618 cv
cp
f
609.156 168.536 mo
609.156 169.181 608.597 169.702 607.906 169.702 cv
607.216 169.702 606.656 169.181 606.656 168.536 cv
606.656 167.892 607.216 167.37 607.906 167.37 cv
608.597 167.37 609.156 167.892 609.156 168.536 cv
cp
f
324.657 183.921 mo
324.657 184.565 324.097 185.087 323.407 185.087 cv
322.716 185.087 322.157 184.565 322.157 183.921 cv
322.157 183.276 322.716 182.755 323.407 182.755 cv
324.097 182.755 324.657 183.276 324.657 183.921 cv
cp
f
340.407 184.036 mo
340.407 184.681 339.847 185.202 339.157 185.202 cv
338.466 185.202 337.907 184.681 337.907 184.036 cv
337.907 183.392 338.466 182.868 339.157 182.868 cv
339.847 182.868 340.407 183.392 340.407 184.036 cv
cp
f
356.407 184.171 mo
356.407 184.815 355.847 185.337 355.157 185.337 cv
354.466 185.337 353.907 184.815 353.907 184.171 cv
353.907 183.526 354.466 183.003 355.157 183.003 cv
355.847 183.003 356.407 183.526 356.407 184.171 cv
cp
f
372.24 184.003 mo
372.24 184.647 371.681 185.171 370.99 185.171 cv
370.3 185.171 369.74 184.647 369.74 184.003 cv
369.74 183.36 370.3 182.837 370.99 182.837 cv
371.681 182.837 372.24 183.36 372.24 184.003 cv
cp
f
387.74 184.171 mo
387.74 184.815 387.181 185.337 386.49 185.337 cv
385.8 185.337 385.24 184.815 385.24 184.171 cv
385.24 183.526 385.8 183.003 386.49 183.003 cv
387.181 183.003 387.74 183.526 387.74 184.171 cv
cp
f
402.74 184.036 mo
402.74 184.681 402.181 185.202 401.49 185.202 cv
400.8 185.202 400.24 184.681 400.24 184.036 cv
400.24 183.392 400.8 182.87 401.49 182.87 cv
402.181 182.87 402.74 183.392 402.74 184.036 cv
cp
f
418.74 184.118 mo
418.74 184.763 418.181 185.286 417.49 185.286 cv
416.8 185.286 416.24 184.763 416.24 184.118 cv
416.24 183.476 416.8 182.952 417.49 182.952 cv
418.181 182.952 418.74 183.476 418.74 184.118 cv
cp
f
451.074 184.118 mo
451.074 184.763 450.513 185.286 449.824 185.286 cv
449.132 185.286 448.574 184.763 448.574 184.118 cv
448.574 183.474 449.132 182.952 449.824 182.952 cv
450.513 182.952 451.074 183.474 451.074 184.118 cv
cp
f
466.408 184.118 mo
466.408 184.763 465.847 185.286 465.158 185.286 cv
464.466 185.286 463.908 184.763 463.908 184.118 cv
463.908 183.476 464.466 182.952 465.158 182.952 cv
465.847 182.952 466.408 183.476 466.408 184.118 cv
cp
f
481.906 184.036 mo
481.906 184.681 481.347 185.202 480.656 185.202 cv
479.966 185.202 479.406 184.681 479.406 184.036 cv
479.406 183.392 479.966 182.87 480.656 182.87 cv
481.347 182.87 481.906 183.392 481.906 184.036 cv
cp
f
497.406 184.036 mo
497.406 184.681 496.847 185.202 496.156 185.202 cv
495.466 185.202 494.906 184.681 494.906 184.036 cv
494.906 183.392 495.466 182.87 496.156 182.87 cv
496.847 182.87 497.406 183.392 497.406 184.036 cv
cp
f
513.656 183.952 mo
513.656 184.597 513.097 185.12 512.406 185.12 cv
511.716 185.12 511.156 184.597 511.156 183.952 cv
511.156 183.308 511.716 182.786 512.406 182.786 cv
513.097 182.786 513.656 183.308 513.656 183.952 cv
cp
f
529.822 184.036 mo
529.822 184.681 529.263 185.202 528.572 185.202 cv
527.882 185.202 527.322 184.681 527.322 184.036 cv
527.322 183.392 527.882 182.87 528.572 182.87 cv
529.263 182.87 529.822 183.392 529.822 184.036 cv
cp
f
544.99 184.036 mo
544.99 184.681 544.429 185.202 543.74 185.202 cv
543.048 185.202 542.49 184.681 542.49 184.036 cv
542.49 183.392 543.048 182.87 543.74 182.87 cv
544.429 182.87 544.99 183.392 544.99 184.036 cv
cp
f
560.406 183.952 mo
560.406 184.597 559.847 185.12 559.156 185.12 cv
558.466 185.12 557.906 184.597 557.906 183.952 cv
557.906 183.308 558.466 182.786 559.156 182.786 cv
559.847 182.786 560.406 183.308 560.406 183.952 cv
cp
f
576.74 184.118 mo
576.74 184.763 576.179 185.286 575.49 185.286 cv
574.798 185.286 574.24 184.763 574.24 184.118 cv
574.24 183.476 574.798 182.952 575.49 182.952 cv
576.179 182.952 576.74 183.476 576.74 184.118 cv
cp
f
593.072 184.034 mo
593.072 184.679 592.513 185.202 591.822 185.202 cv
591.132 185.202 590.572 184.679 590.572 184.034 cv
590.572 183.392 591.132 182.868 591.822 182.868 cv
592.513 182.868 593.072 183.392 593.072 184.034 cv
cp
f
608.99 183.952 mo
608.99 184.597 608.429 185.118 607.74 185.118 cv
607.048 185.118 606.49 184.597 606.49 183.952 cv
606.49 183.308 607.048 182.786 607.74 182.786 cv
608.429 182.786 608.99 183.308 608.99 183.952 cv
cp
f
324.657 198.255 mo
324.657 198.899 324.097 199.421 323.407 199.421 cv
322.716 199.421 322.157 198.899 322.157 198.255 cv
322.157 197.61 322.716 197.089 323.407 197.089 cv
324.097 197.089 324.657 197.61 324.657 198.255 cv
cp
f
340.407 198.37 mo
340.407 199.015 339.847 199.536 339.157 199.536 cv
338.466 199.536 337.907 199.015 337.907 198.37 cv
337.907 197.726 338.466 197.202 339.157 197.202 cv
339.847 197.202 340.407 197.726 340.407 198.37 cv
cp
f
356.407 198.505 mo
356.407 199.149 355.847 199.671 355.157 199.671 cv
354.466 199.671 353.907 199.149 353.907 198.505 cv
353.907 197.86 354.466 197.337 355.157 197.337 cv
355.847 197.337 356.407 197.86 356.407 198.505 cv
cp
f
372.24 198.337 mo
372.24 198.981 371.681 199.505 370.99 199.505 cv
370.3 199.505 369.74 198.981 369.74 198.337 cv
369.74 197.694 370.3 197.171 370.99 197.171 cv
371.681 197.171 372.24 197.694 372.24 198.337 cv
cp
f
387.74 198.505 mo
387.74 199.149 387.181 199.671 386.49 199.671 cv
385.8 199.671 385.24 199.149 385.24 198.505 cv
385.24 197.86 385.8 197.337 386.49 197.337 cv
387.181 197.337 387.74 197.86 387.74 198.505 cv
cp
f
402.74 198.37 mo
402.74 199.015 402.181 199.536 401.49 199.536 cv
400.8 199.536 400.24 199.015 400.24 198.37 cv
400.24 197.726 400.8 197.204 401.49 197.204 cv
402.181 197.204 402.74 197.726 402.74 198.37 cv
cp
f
418.74 198.452 mo
418.74 199.097 418.181 199.62 417.49 199.62 cv
416.8 199.62 416.24 199.097 416.24 198.452 cv
416.24 197.81 416.8 197.286 417.49 197.286 cv
418.181 197.286 418.74 197.81 418.74 198.452 cv
cp
f
434.99 198.452 mo
434.99 199.097 434.43 199.62 433.74 199.62 cv
433.049 199.62 432.49 199.097 432.49 198.452 cv
432.49 197.81 433.049 197.286 433.74 197.286 cv
434.43 197.286 434.99 197.81 434.99 198.452 cv
cp
f
451.074 198.452 mo
451.074 199.097 450.513 199.62 449.824 199.62 cv
449.132 199.62 448.574 199.097 448.574 198.452 cv
448.574 197.808 449.132 197.286 449.824 197.286 cv
450.513 197.286 451.074 197.808 451.074 198.452 cv
cp
f
466.408 198.452 mo
466.408 199.097 465.847 199.62 465.158 199.62 cv
464.466 199.62 463.908 199.097 463.908 198.452 cv
463.908 197.81 464.466 197.286 465.158 197.286 cv
465.847 197.286 466.408 197.81 466.408 198.452 cv
cp
f
481.906 198.37 mo
481.906 199.015 481.347 199.536 480.656 199.536 cv
479.966 199.536 479.406 199.015 479.406 198.37 cv
479.406 197.726 479.966 197.204 480.656 197.204 cv
481.347 197.204 481.906 197.726 481.906 198.37 cv
cp
f
497.406 198.37 mo
497.406 199.015 496.847 199.536 496.156 199.536 cv
495.466 199.536 494.906 199.015 494.906 198.37 cv
494.906 197.726 495.466 197.204 496.156 197.204 cv
496.847 197.204 497.406 197.726 497.406 198.37 cv
cp
f
513.656 198.286 mo
513.656 198.931 513.097 199.454 512.406 199.454 cv
511.716 199.454 511.156 198.931 511.156 198.286 cv
511.156 197.642 511.716 197.12 512.406 197.12 cv
513.097 197.12 513.656 197.642 513.656 198.286 cv
cp
f
529.822 198.37 mo
529.822 199.015 529.263 199.536 528.572 199.536 cv
527.882 199.536 527.322 199.015 527.322 198.37 cv
527.322 197.726 527.882 197.204 528.572 197.204 cv
529.263 197.204 529.822 197.726 529.822 198.37 cv
cp
f
544.99 198.37 mo
544.99 199.015 544.429 199.536 543.74 199.536 cv
543.048 199.536 542.49 199.015 542.49 198.37 cv
542.49 197.726 543.048 197.204 543.74 197.204 cv
544.429 197.204 544.99 197.726 544.99 198.37 cv
cp
f
560.406 198.286 mo
560.406 198.931 559.847 199.454 559.156 199.454 cv
558.466 199.454 557.906 198.931 557.906 198.286 cv
557.906 197.642 558.466 197.12 559.156 197.12 cv
559.847 197.12 560.406 197.642 560.406 198.286 cv
cp
f
576.74 198.452 mo
576.74 199.097 576.179 199.62 575.49 199.62 cv
574.798 199.62 574.24 199.097 574.24 198.452 cv
574.24 197.81 574.798 197.286 575.49 197.286 cv
576.179 197.286 576.74 197.81 576.74 198.452 cv
cp
f
593.072 198.368 mo
593.072 199.013 592.513 199.536 591.822 199.536 cv
591.132 199.536 590.572 199.013 590.572 198.368 cv
590.572 197.726 591.132 197.202 591.822 197.202 cv
592.513 197.202 593.072 197.726 593.072 198.368 cv
cp
f
608.99 198.286 mo
608.99 198.931 608.429 199.452 607.74 199.452 cv
607.048 199.452 606.49 198.931 606.49 198.286 cv
606.49 197.642 607.048 197.12 607.74 197.12 cv
608.429 197.12 608.99 197.642 608.99 198.286 cv
cp
f
324.907 213.587 mo
324.907 214.231 324.347 214.755 323.657 214.755 cv
322.966 214.755 322.407 214.231 322.407 213.587 cv
322.407 212.942 322.966 212.421 323.657 212.421 cv
324.347 212.421 324.907 212.942 324.907 213.587 cv
cp
f
340.657 213.702 mo
340.657 214.347 340.097 214.868 339.407 214.868 cv
338.716 214.868 338.157 214.347 338.157 213.702 cv
338.157 213.058 338.716 212.536 339.407 212.536 cv
340.097 212.536 340.657 213.058 340.657 213.702 cv
cp
f
356.657 213.837 mo
356.657 214.481 356.097 215.003 355.407 215.003 cv
354.716 215.003 354.157 214.481 354.157 213.837 cv
354.157 213.192 354.716 212.671 355.407 212.671 cv
356.097 212.671 356.657 213.192 356.657 213.837 cv
cp
f
372.49 213.671 mo
372.49 214.315 371.931 214.837 371.24 214.837 cv
370.55 214.837 369.99 214.315 369.99 213.671 cv
369.99 213.026 370.55 212.503 371.24 212.503 cv
371.931 212.503 372.49 213.026 372.49 213.671 cv
cp
f
387.99 213.837 mo
387.99 214.481 387.431 215.003 386.74 215.003 cv
386.05 215.003 385.49 214.481 385.49 213.837 cv
385.49 213.192 386.05 212.671 386.74 212.671 cv
387.431 212.671 387.99 213.192 387.99 213.837 cv
cp
f
402.99 213.702 mo
402.99 214.347 402.431 214.87 401.74 214.87 cv
401.05 214.87 400.49 214.347 400.49 213.702 cv
400.49 213.058 401.05 212.536 401.74 212.536 cv
402.431 212.536 402.99 213.058 402.99 213.702 cv
cp
f
418.99 213.786 mo
418.99 214.431 418.431 214.952 417.74 214.952 cv
417.05 214.952 416.49 214.431 416.49 213.786 cv
416.49 213.142 417.05 212.618 417.74 212.618 cv
418.431 212.618 418.99 213.142 418.99 213.786 cv
cp
f
435.24 213.786 mo
435.24 214.431 434.68 214.952 433.99 214.952 cv
433.299 214.952 432.74 214.431 432.74 213.786 cv
432.74 213.142 433.299 212.618 433.99 212.618 cv
434.68 212.618 435.24 213.142 435.24 213.786 cv
cp
f
451.324 213.784 mo
451.324 214.429 450.763 214.952 450.074 214.952 cv
449.382 214.952 448.824 214.429 448.824 213.784 cv
448.824 213.142 449.382 212.618 450.074 212.618 cv
450.763 212.618 451.324 213.142 451.324 213.784 cv
cp
f
466.656 213.786 mo
466.656 214.431 466.097 214.952 465.408 214.952 cv
464.716 214.952 464.158 214.431 464.158 213.786 cv
464.158 213.142 464.716 212.618 465.408 212.618 cv
466.097 212.618 466.656 213.142 466.656 213.786 cv
cp
f
482.156 213.702 mo
482.156 214.347 481.597 214.87 480.906 214.87 cv
480.216 214.87 479.656 214.347 479.656 213.702 cv
479.656 213.058 480.216 212.536 480.906 212.536 cv
481.597 212.536 482.156 213.058 482.156 213.702 cv
cp
f
497.656 213.702 mo
497.656 214.347 497.097 214.87 496.406 214.87 cv
495.716 214.87 495.156 214.347 495.156 213.702 cv
495.156 213.058 495.716 212.536 496.406 212.536 cv
497.097 212.536 497.656 213.058 497.656 213.702 cv
cp
f
513.906 213.618 mo
513.906 214.263 513.347 214.786 512.656 214.786 cv
511.966 214.786 511.406 214.263 511.406 213.618 cv
511.406 212.976 511.966 212.452 512.656 212.452 cv
513.347 212.452 513.906 212.976 513.906 213.618 cv
cp
f
530.072 213.702 mo
530.072 214.347 529.513 214.87 528.822 214.87 cv
528.132 214.87 527.572 214.347 527.572 213.702 cv
527.572 213.058 528.132 212.536 528.822 212.536 cv
529.513 212.536 530.072 213.058 530.072 213.702 cv
cp
f
545.24 213.702 mo
545.24 214.347 544.679 214.87 543.99 214.87 cv
543.298 214.87 542.74 214.347 542.74 213.702 cv
542.74 213.058 543.298 212.536 543.99 212.536 cv
544.679 212.536 545.24 213.058 545.24 213.702 cv
cp
f
560.656 213.618 mo
560.656 214.263 560.097 214.786 559.406 214.786 cv
558.716 214.786 558.156 214.263 558.156 213.618 cv
558.156 212.976 558.716 212.452 559.406 212.452 cv
560.097 212.452 560.656 212.976 560.656 213.618 cv
cp
f
576.99 213.786 mo
576.99 214.431 576.429 214.952 575.74 214.952 cv
575.048 214.952 574.49 214.431 574.49 213.786 cv
574.49 213.142 575.048 212.618 575.74 212.618 cv
576.429 212.618 576.99 213.142 576.99 213.786 cv
cp
f
593.322 213.702 mo
593.322 214.347 592.763 214.868 592.072 214.868 cv
591.382 214.868 590.822 214.347 590.822 213.702 cv
590.822 213.058 591.382 212.534 592.072 212.534 cv
592.763 212.534 593.322 213.058 593.322 213.702 cv
cp
f
609.24 213.618 mo
609.24 214.263 608.679 214.786 607.99 214.786 cv
607.298 214.786 606.74 214.263 606.74 213.618 cv
606.74 212.974 607.298 212.452 607.99 212.452 cv
608.679 212.452 609.24 212.974 609.24 213.618 cv
cp
f
3 lw
321.74 222.286 mo
610.406 222.286 li
0 0 0 1 cmyk
@
611.74 223.618 mo
320.24 223.618 li
320.24 4.11914 li
611.74 4.11914 li
611.74 223.618 li
cp
.5 .9 0 0 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ArialMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 47 /slash put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 115 /s put
def
/FontBBox {-665 -325 2000 1006} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
9 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/space <1C60D8A8C9B854D00D> |-
/slash <1C60D8A8C9B854D0D18501A7E07A7DB7C8496D0849EBF5F0BA> |-
/i <1C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B17
1C8A80AB> |-
/l <1C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |-
/n <1C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285C
0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDAD
E9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A520
3A8015DD09B7CE> |-
/o <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A98
7875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C
7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79
F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F
518C54BB58C51D6FB6D0C8> |-
/p <1C60D8A8C9B7EF322B3B0CFC8FED720BC90E20B208D27DC4B8F11F10B964
70F8B4F5FABEC7F7010781F5077B417FE44279776F2304ACD6E0EA12F436330D
C4B79C907B9D28468D10FF9256A7D2CA504E4498D719ACD86FCA89B33C61F556
CF1168C3F262A781155D5EBF0C47D71C584AB93037B47B18D39FE408A49672C1
E63F9E8368D19E113FC95C59A9FA4650E46F6399F2FF256844E27568BA34B9> |-
/s <1C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B5F
80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214E2
BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEABD9
6538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046E1
B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB32
87CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B843
5558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F41
72D53C8FCAF4D28F2B78D3A4BF03> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ZVVWZC+ArialMT /ArialMT findfont ct_VMDictPut
/ZVVWZC+ArialMT*1 
[32{/.notdef}rp /space 14{/.notdef}rp /slash 57{/.notdef}rp /i 2{/.notdef}rp /l 
/.notdef /n /o /p 2{/.notdef}rp /s 140{/.notdef}rp]
ZVVWZC+ArialMT nf
ZVVWZC+ArialMT*1 [16 0 0 -16 0 0 ]msf
375.719 171.691 mo
(slip / no slip)
[8 3.55469 3.55469 8.89844 4.44531 4.44531 4.44531 8.89844 8.89844 4.44531 8 3.55469 
3.55469 0 ]xsh
543.975 92.3984 mo
(no slip)
[8.89844 8.89844 4.44531 8 3.55469 3.55469 0 ]xsh
343.642 94.0654 mo
(no slip)
[8.89844 8.89844 4.44531 8 3.55469 3.55469 0 ]xsh
289.5 4.39795 mo
289.5 220.397 li
289.5 220.397 251.05 220.397 202.25 220.397 cv
199.68 220.397 197.08 220.397 194.46 220.397 cv
178.74 220.768 161.74 220.768 145.5 220.397 cv
142.73 220.397 139.96 220.397 137.2 220.397 cv
68.0703 220.397 1.5 220.397 1.5 220.397 cv
1.5 4.39795 li
1.5 4.39795 1.82031 5.8877 2.39014 8.56787 cv
5.74023 22.7681 3.74023 36.7681 6.74023 50.7681 cv
7.24023 53.3877 7.86035 55.9678 8.58008 58.5078 cv
15.4502 74.4478 21.6704 90.8081 24.6001 107.668 cv
25.0903 110.478 25.4902 113.308 25.7402 116.148 cv
25.9902 118.958 26.0903 121.748 26.0601 124.488 cv
24.7402 135.768 25.7402 146.768 32.7402 154.768 cv
34.6201 156.768 36.6001 158.828 38.6802 160.888 cv
40.77 162.948 42.9502 165.008 45.2002 166.998 cv
51.6104 172.828 59.3901 179.338 67.9502 180.548 cv
70.8003 180.948 73.7402 180.768 76.7402 179.778 cv
81.4004 178.438 86.0703 178.328 90.7402 178.878 cv
93.0703 179.158 95.4102 179.598 97.7402 180.098 cv
102.24 181.438 106.99 182.848 111.74 183.558 cv
114.12 183.918 116.49 184.088 118.83 183.958 cv
147.74 164.768 183.74 166.768 214.86 179.788 cv
218.39 179.838 221.81 179.658 225.08 179.188 cv
238.17 177.328 248.86 170.897 253.6 154.318 cv
254.65 151.628 255.71 148.928 256.89 146.388 cv
258.07 143.838 259.37 141.458 260.9 139.397 cv
261.44 136.688 261.97 133.978 262.5 131.258 cv
263.03 128.548 263.59 125.818 264.15 123.088 cv
267.55 106.698 271.49 90.0181 273.74 72.7681 cv
276.74 51.7681 283.74 30.7681 288.19 9.92773 cv
289.03 6.3877 289.5 4.39795 289.5 4.39795 cv
cp
.215686 .580392 1 .062745 cmyk
f
273.74 72.7681 mo
271.49 90.0181 267.55 106.698 264.15 123.088 cv
263.59 125.818 263.03 128.548 262.5 131.258 cv
261.97 133.978 261.44 136.688 260.9 139.397 cv
259.37 141.458 258.07 143.838 256.89 146.388 cv
255.71 148.928 254.65 151.628 253.6 154.318 cv
248.86 170.897 238.17 177.328 225.08 179.188 cv
221.81 179.658 218.39 179.838 214.86 179.788 cv
183.74 166.768 147.74 164.768 118.83 183.958 cv
116.49 184.088 114.12 183.918 111.74 183.558 cv
106.99 182.848 102.24 181.438 97.7402 180.098 cv
95.4102 179.598 93.0703 179.158 90.7402 178.878 cv
86.0703 178.328 81.4004 178.438 76.7402 179.778 cv
73.7402 180.768 70.8003 180.948 67.9502 180.548 cv
59.3901 179.338 51.6104 172.828 45.2002 166.998 cv
42.9502 165.008 40.77 162.948 38.6802 160.888 cv
36.6001 158.828 34.6201 156.768 32.7402 154.768 cv
25.7402 146.768 24.7402 135.768 26.0601 124.488 cv
26.0903 121.748 25.9902 118.958 25.7402 116.148 cv
25.4902 113.308 25.0903 110.478 24.6001 107.668 cv
21.6704 90.8081 15.4502 74.4478 8.58008 58.5078 cv
7.86035 55.9678 7.24023 53.3877 6.74023 50.7681 cv
3.74023 36.7681 5.74023 22.7681 2.39014 8.56787 cv
1.82031 5.8877 1.5 4.39795 1.5 4.39795 cv
289.5 4.39795 li
289.5 4.39795 289.03 6.3877 288.19 9.92773 cv
283.74 30.7681 276.74 51.7681 273.74 72.7681 cv
cp
.2 0 0 0 cmyk
f
1.5 4.39795 mo
1.5 220.397 li
1.5 220.397 68.0703 220.397 137.2 220.397 cv
139.96 220.397 142.73 220.397 145.5 220.397 cv
161.74 220.768 178.74 220.768 194.46 220.397 cv
197.08 220.397 199.68 220.397 202.25 220.397 cv
251.05 220.397 289.5 220.397 289.5 220.397 cv
289.5 4.39795 li
1.5 4.39795 li
cp
0 0 0 1 cmyk
@
1 lw
1.5 4.39795 mo
1.5 4.39795 1.82031 5.8877 2.39014 8.56787 cv
5.74023 22.7681 3.74023 36.7681 6.74023 50.7681 cv
7.24023 53.3877 7.86035 55.9678 8.58008 58.5078 cv
15.4502 74.4478 21.6704 90.8081 24.6001 107.668 cv
25.0903 110.478 25.4902 113.308 25.7402 116.148 cv
25.9902 118.958 26.0903 121.748 26.0601 124.488 cv
@
26.0601 124.488 mo
24.7402 135.768 25.7402 146.768 32.7402 154.768 cv
34.6201 156.768 36.6001 158.828 38.6802 160.888 cv
40.77 162.948 42.9502 165.008 45.2002 166.998 cv
51.6104 172.828 59.3901 179.338 67.9502 180.548 cv
70.8003 180.948 73.7402 180.768 76.7402 179.778 cv
81.4004 178.438 86.0703 178.328 90.7402 178.878 cv
93.0703 179.158 95.4102 179.598 97.7402 180.098 cv
102.24 181.438 106.99 182.848 111.74 183.558 cv
114.12 183.918 116.49 184.088 118.83 183.958 cv
147.74 164.768 183.74 166.768 214.86 179.788 cv
218.39 179.838 221.81 179.658 225.08 179.188 cv
238.17 177.328 248.86 170.897 253.6 154.318 cv
254.65 151.628 255.71 148.928 256.89 146.388 cv
258.07 143.838 259.37 141.458 260.9 139.397 cv
@
260.9 139.397 mo
261.44 136.688 261.97 133.978 262.5 131.258 cv
263.03 128.548 263.59 125.818 264.15 123.088 cv
267.55 106.698 271.49 90.0181 273.74 72.7681 cv
276.74 51.7681 283.74 30.7681 288.19 9.92773 cv
289.03 6.3877 289.5 4.39795 289.5 4.39795 cv
@
.5 lw
1.40625 20.4512 mo
290.074 20.4512 li
0 0 0 .4 cmyk
@
1.73926 35.7852 mo
290.406 35.7852 li
@
1.73975 49.7852 mo
290.408 49.7852 li
@
1.73926 65.1182 mo
290.406 65.1182 li
@
2.40625 79.1191 mo
291.074 79.1191 li
@
2.73926 94.4531 mo
291.406 94.4531 li
@
2.73975 108.452 mo
291.408 108.452 li
@
2.73926 123.785 mo
291.406 123.785 li
@
2.40625 137.119 mo
291.074 137.119 li
@
2.73926 152.453 mo
291.406 152.453 li
@
2.73975 166.452 mo
291.408 166.452 li
@
2.73926 181.785 mo
291.406 181.785 li
@
2.07275 196.119 mo
290.74 196.119 li
@
2.07227 211.452 mo
290.74 211.452 li
@
17.4063 3.78516 mo
17.4063 220.451 li
@
33.7397 4.11719 mo
33.7397 220.784 li
@
49.7397 4.11816 mo
49.7397 220.784 li
@
65.0728 4.11816 mo
65.0728 220.784 li
@
80.4058 4.78516 mo
80.4058 221.452 li
@
96.0728 4.45117 mo
96.0728 221.118 li
@
112.406 4.78516 mo
112.406 221.451 li
@
128.406 4.78516 mo
128.406 221.451 li
@
143.74 4.78516 mo
143.74 221.451 li
@
159.073 5.45215 mo
159.073 222.119 li
@
174.74 5.11719 mo
174.74 221.784 li
@
191.074 5.45117 mo
191.074 222.117 li
@
207.074 5.45117 mo
207.074 222.117 li
@
222.406 5.45117 mo
222.406 222.117 li
@
237.74 6.11816 mo
237.74 222.785 li
@
254.074 3.11914 mo
254.074 219.785 li
@
270.406 3.45117 mo
270.406 220.118 li
@
286.406 3.45215 mo
286.406 220.118 li
@
2 lw
270.74 49.7842 mo
270.74 65.7842 li
.5 .9 0 0 cmyk
@
270.74 65.7842 mo
270.74 78.4521 li
@
270.74 78.4521 mo
271.406 123.118 li
@
254.74 123.785 mo
254.074 168.065 li
@
254.074 167.118 mo
236.074 167.118 li
@
237.406 181.785 mo
191.326 181.785 li
@
143.726 181.785 mo
67.4058 181.785 li
@
65.4058 181.785 mo
50.0732 181.785 li
@
50.0732 182.764 mo
50.0732 166.203 li
@
253.74 123.785 mo
272.46 123.868 li
@
236.74 166.618 mo
236.74 181.618 li
@
51.0732 166.203 mo
33.0732 166.118 li
@
32.7397 166.924 mo
32.7397 108.424 li
@
33.8198 107.368 mo
18.0698 107.368 li
@
18.0698 107.368 mo
17.9897 49.6182 li
@
143.81 182.784 mo
143.824 166.285 li
@
142.907 166.452 mo
191.074 166.369 li
@
191.074 165.452 mo
191.074 182.785 li
@
18.9897 49.6182 mo
1.48975 49.7432 li
@
1.48975 50.7432 mo
1.49951 4.39844 li
@
.499512 4.39844 mo
288.99 4.36816 li
@
289.5 3.3916 mo
289.5 49.9336 li
@
290.5 49.7852 mo
269.98 49.7842 li
@
0 0 0 1 cmyk
ZVVWZC+ArialMT*1 [16 0 0 -16 0 0 ]msf
55.8169 170.386 mo
(slip / no slip)
[8 3.55469 3.55469 8.89844 4.44531 4.44531 4.44531 8.89844 8.89844 4.44531 8 3.55469 
3.55469 0 ]xsh
223.073 89.5723 mo
(no slip)
[8.89844 8.89844 4.44531 8 3.55469 3.55469 0 ]xsh
23.7397 91.2393 mo
(no slip)
[8.89844 8.89844 4.44531 8 3.55469 3.55469 0 ]xsh
930.631 5.42725 mo
930.631 221.427 li
930.631 221.427 920.751 221.427 904.661 221.427 cv
904.661 179.688 li
904.661 6.14746 li
904.661 5.42725 li
930.631 5.42725 li
cp
.215686 .580392 1 .062745 cmyk
f
904.661 6.14746 mo
904.661 179.688 li
904.321 179.688 li
875.991 184.797 846.991 185.797 819.571 175.728 cv
816.731 174.417 813.961 172.888 811.221 171.297 cv
802.991 166.547 794.991 161.297 785.991 160.797 cv
782.991 160.797 780.131 161.327 777.351 162.197 cv
774.571 163.077 771.871 164.297 769.201 165.688 cv
740.031 184.768 702.101 190.777 667.991 181.367 cv
667.991 5.4873 li
667.991 5.42725 li
904.661 5.42725 li
904.661 6.14746 li
cp
.2 0 0 0 cmyk
f
785.991 160.797 mo
794.991 161.297 802.991 166.547 811.221 171.297 cv
813.961 172.888 816.731 174.417 819.571 175.728 cv
846.991 185.797 875.991 184.797 904.321 179.688 cv
904.661 179.688 li
904.661 221.427 li
888.991 221.427 867.451 221.427 843.381 221.427 cv
840.811 221.427 838.211 221.427 835.591 221.427 cv
819.871 221.797 802.871 221.797 786.631 221.427 cv
783.861 221.427 781.091 221.427 778.332 221.427 cv
735.491 221.427 693.631 221.427 667.991 221.427 cv
667.991 220.817 li
667.991 181.367 li
702.101 190.777 740.031 184.768 769.201 165.688 cv
771.871 164.297 774.571 163.077 777.351 162.197 cv
780.131 161.327 782.991 160.797 785.991 160.797 cv
cp
.215686 .580392 1 .062745 cmyk
f
667.991 181.367 mo
667.991 220.817 li
667.991 221.427 li
652.251 221.427 642.631 221.427 642.631 221.427 cv
642.631 5.42725 li
667.991 5.42725 li
667.991 5.4873 li
667.991 181.367 li
cp
f
3 lw
667.991 5.42725 mo
642.631 5.42725 li
642.631 221.427 li
642.631 221.427 652.251 221.427 667.991 221.427 cv
693.631 221.427 735.491 221.427 778.332 221.427 cv
781.091 221.427 783.861 221.427 786.631 221.427 cv
802.871 221.797 819.871 221.797 835.591 221.427 cv
838.211 221.427 840.811 221.427 843.381 221.427 cv
867.451 221.427 888.991 221.427 904.661 221.427 cv
920.751 221.427 930.631 221.427 930.631 221.427 cv
930.631 5.42725 li
904.661 5.42725 li
667.991 5.42725 li
cp
0 0 0 1 cmyk
@
1 lw
667.991 5.4873 mo
667.991 181.367 li
667.991 220.817 li
@
1 lc
1 lj
904.661 6.14746 mo
904.661 179.688 li
904.661 221.427 li
904.661 221.487 li
@
0 lc
0 lj
667.841 181.327 mo
667.891 181.337 667.941 181.357 667.991 181.367 cv
702.101 190.777 740.031 184.768 769.201 165.688 cv
771.871 164.297 774.571 163.077 777.351 162.197 cv
780.131 161.327 782.991 160.797 785.991 160.797 cv
794.991 161.297 802.991 166.547 811.221 171.297 cv
813.961 172.888 816.731 174.417 819.571 175.728 cv
846.991 185.797 875.991 184.797 904.321 179.688 cv
@
.5 lw
645.073 22.2344 mo
929.989 22.2344 li
0 0 0 .4 cmyk
@
645.406 37.5674 mo
930.073 37.5674 li
@
645.407 51.5674 mo
930.157 51.5674 li
@
645.406 66.9004 mo
930.323 66.9004 li
@
646.073 80.9014 mo
930.239 80.9014 li
@
646.406 96.2354 mo
930.239 96.2354 li
@
646.407 110.234 mo
929.989 110.234 li
@
646.406 125.567 mo
930.323 125.567 li
@
646.073 138.901 mo
930.073 138.901 li
@
646.406 154.235 mo
930.157 154.235 li
@
646.407 168.233 mo
929.989 168.233 li
@
646.406 183.567 mo
929.989 183.567 li
@
645.739 197.901 mo
929.907 197.901 li
@
645.739 213.233 mo
930.157 213.233 li
@
677.407 7.40039 mo
677.407 222.565 li
@
693.407 7.52539 mo
693.407 222.565 li
@
708.739 7.77539 mo
708.739 222.565 li
@
724.073 6.56738 mo
724.073 223.233 li
@
739.739 7.77539 mo
739.739 222.899 li
@
756.073 6.56641 mo
756.073 223.233 li
@
772.073 6.56738 mo
772.073 223.233 li
@
787.406 6.56738 mo
787.406 223.233 li
@
802.739 7.23438 mo
802.739 223.901 li
@
818.407 6.90039 mo
818.407 223.565 li
@
834.741 7.23242 mo
834.741 223.899 li
@
850.741 7.2334 mo
850.741 223.899 li
@
866.073 7.2334 mo
866.073 223.899 li
@
881.407 7.90039 mo
881.407 220.024 li
@
897.739 7.65039 mo
897.739 220.024 li
@
914.073 7.31641 mo
914.073 220.024 li
@
930.073 7.4834 mo
930.26 220.212 li
@
661.573 7.06641 mo
661.573 223.731 li
@
646.907 7.65039 mo
646.907 8.29492 646.346 8.81738 645.657 8.81738 cv
644.965 8.81738 644.407 8.29492 644.407 7.65039 cv
644.407 7.00586 644.965 6.48438 645.657 6.48438 cv
646.346 6.48438 646.907 7.00586 646.907 7.65039 cv
cp
1 .5 0 0 cmyk
f
662.657 7.76563 mo
662.657 8.41016 662.096 8.93164 661.407 8.93164 cv
660.715 8.93164 660.157 8.41016 660.157 7.76563 cv
660.157 7.12109 660.715 6.59863 661.407 6.59863 cv
662.096 6.59863 662.657 7.12109 662.657 7.76563 cv
cp
f
678.657 7.90039 mo
678.657 8.54492 678.096 9.06641 677.407 9.06641 cv
676.715 9.06641 676.157 8.54492 676.157 7.90039 cv
676.157 7.25586 676.715 6.7334 677.407 6.7334 cv
678.096 6.7334 678.657 7.25586 678.657 7.90039 cv
cp
0 1 1 0 cmyk
f
694.49 7.7334 mo
694.49 8.37793 693.93 8.90039 693.24 8.90039 cv
692.549 8.90039 691.99 8.37793 691.99 7.7334 cv
691.99 7.08984 692.549 6.56641 693.24 6.56641 cv
693.93 6.56641 694.49 7.08984 694.49 7.7334 cv
cp
f
709.99 7.90039 mo
709.99 8.54492 709.43 9.06641 708.74 9.06641 cv
708.049 9.06641 707.49 8.54492 707.49 7.90039 cv
707.49 7.25586 708.049 6.7334 708.74 6.7334 cv
709.43 6.7334 709.99 7.25586 709.99 7.90039 cv
cp
f
724.99 7.76563 mo
724.99 8.41016 724.43 8.93262 723.74 8.93262 cv
723.049 8.93262 722.49 8.41016 722.49 7.76563 cv
722.49 7.12109 723.049 6.59961 723.74 6.59961 cv
724.43 6.59961 724.99 7.12109 724.99 7.76563 cv
cp
f
740.99 7.84863 mo
740.99 8.49316 740.43 9.01563 739.74 9.01563 cv
739.049 9.01563 738.49 8.49316 738.49 7.84863 cv
738.49 7.20508 739.049 6.68164 739.74 6.68164 cv
740.43 6.68164 740.99 7.20508 740.99 7.84863 cv
cp
f
757.239 7.84863 mo
757.239 8.49316 756.68 9.01563 755.989 9.01563 cv
755.299 9.01563 754.739 8.49316 754.739 7.84863 cv
754.739 7.20508 755.299 6.68164 755.989 6.68164 cv
756.68 6.68164 757.239 7.20508 757.239 7.84863 cv
cp
f
773.323 7.84766 mo
773.323 8.49219 772.763 9.01563 772.073 9.01563 cv
771.382 9.01563 770.823 8.49219 770.823 7.84766 cv
770.823 7.2041 771.382 6.68164 772.073 6.68164 cv
772.763 6.68164 773.323 7.2041 773.323 7.84766 cv
cp
f
788.657 7.84863 mo
788.657 8.49316 788.096 9.01563 787.407 9.01563 cv
786.715 9.01563 786.157 8.49316 786.157 7.84863 cv
786.157 7.20508 786.715 6.68164 787.407 6.68164 cv
788.096 6.68164 788.657 7.20508 788.657 7.84863 cv
cp
f
804.157 7.76563 mo
804.157 8.41016 803.596 8.93262 802.907 8.93262 cv
802.215 8.93262 801.657 8.41016 801.657 7.76563 cv
801.657 7.12109 802.215 6.59961 802.907 6.59961 cv
803.596 6.59961 804.157 7.12109 804.157 7.76563 cv
cp
f
819.657 7.76563 mo
819.657 8.41016 819.096 8.93262 818.407 8.93262 cv
817.715 8.93262 817.157 8.41016 817.157 7.76563 cv
817.157 7.12109 817.715 6.59961 818.407 6.59961 cv
819.096 6.59961 819.657 7.12109 819.657 7.76563 cv
cp
f
835.907 7.68164 mo
835.907 8.32617 835.346 8.84961 834.657 8.84961 cv
833.965 8.84961 833.407 8.32617 833.407 7.68164 cv
833.407 7.03809 833.965 6.51563 834.657 6.51563 cv
835.346 6.51563 835.907 7.03809 835.907 7.68164 cv
cp
f
852.073 7.76563 mo
852.073 8.41016 851.514 8.93262 850.823 8.93262 cv
850.133 8.93262 849.573 8.41016 849.573 7.76563 cv
849.573 7.12109 850.133 6.59961 850.823 6.59961 cv
851.514 6.59961 852.073 7.12109 852.073 7.76563 cv
cp
f
867.241 7.76563 mo
867.241 8.41016 866.68 8.93262 865.991 8.93262 cv
865.299 8.93262 864.741 8.41016 864.741 7.76563 cv
864.741 7.12109 865.299 6.59961 865.991 6.59961 cv
866.68 6.59961 867.241 7.12109 867.241 7.76563 cv
cp
f
882.657 7.68164 mo
882.657 8.32617 882.096 8.84961 881.407 8.84961 cv
880.715 8.84961 880.157 8.32617 880.157 7.68164 cv
880.157 7.03809 880.715 6.51563 881.407 6.51563 cv
882.096 6.51563 882.657 7.03809 882.657 7.68164 cv
cp
f
898.991 7.84863 mo
898.991 8.49316 898.43 9.01563 897.741 9.01563 cv
897.049 9.01563 896.491 8.49316 896.491 7.84863 cv
896.491 7.20508 897.049 6.68164 897.741 6.68164 cv
898.43 6.68164 898.991 7.20508 898.991 7.84863 cv
cp
f
915.323 7.76465 mo
915.323 8.40918 914.764 8.93164 914.073 8.93164 cv
913.383 8.93164 912.823 8.40918 912.823 7.76465 cv
912.823 7.12109 913.383 6.59766 914.073 6.59766 cv
914.764 6.59766 915.323 7.12109 915.323 7.76465 cv
cp
1 .5 0 0 cmyk
f
931.241 7.68164 mo
931.241 8.32617 930.68 8.84863 929.991 8.84863 cv
929.299 8.84863 928.741 8.32617 928.741 7.68164 cv
928.741 7.03711 929.299 6.51563 929.991 6.51563 cv
930.68 6.51563 931.241 7.03711 931.241 7.68164 cv
cp
f
662.532 22.0664 mo
662.532 22.7109 661.971 23.2344 661.282 23.2344 cv
660.59 23.2344 660.032 22.7109 660.032 22.0664 cv
660.032 21.4229 660.59 20.9004 661.282 20.9004 cv
661.971 20.9004 662.532 21.4229 662.532 22.0664 cv
cp
f
678.532 22.2012 mo
678.532 22.8457 677.971 23.3691 677.282 23.3691 cv
676.59 23.3691 676.032 22.8457 676.032 22.2012 cv
676.032 21.5576 676.59 21.0352 677.282 21.0352 cv
677.971 21.0352 678.532 21.5576 678.532 22.2012 cv
cp
0 1 1 0 cmyk
f
694.365 22.0352 mo
694.365 22.6797 693.805 23.2021 693.115 23.2021 cv
692.424 23.2021 691.865 22.6797 691.865 22.0352 cv
691.865 21.3906 692.424 20.8691 693.115 20.8691 cv
693.805 20.8691 694.365 21.3906 694.365 22.0352 cv
cp
f
709.865 22.2012 mo
709.865 22.8457 709.305 23.3691 708.615 23.3691 cv
707.924 23.3691 707.365 22.8457 707.365 22.2012 cv
707.365 21.5576 707.924 21.0352 708.615 21.0352 cv
709.305 21.0352 709.865 21.5576 709.865 22.2012 cv
cp
f
724.865 22.0674 mo
724.865 22.7119 724.305 23.2344 723.615 23.2344 cv
722.924 23.2344 722.365 22.7119 722.365 22.0674 cv
722.365 21.4238 722.924 20.9004 723.615 20.9004 cv
724.305 20.9004 724.865 21.4238 724.865 22.0674 cv
cp
f
740.865 22.1504 mo
740.865 22.7949 740.305 23.3174 739.615 23.3174 cv
738.924 23.3174 738.365 22.7949 738.365 22.1504 cv
738.365 21.5059 738.924 20.9844 739.615 20.9844 cv
740.305 20.9844 740.865 21.5059 740.865 22.1504 cv
cp
f
757.114 22.1504 mo
757.114 22.7949 756.555 23.3174 755.864 23.3174 cv
755.174 23.3174 754.614 22.7949 754.614 22.1504 cv
754.614 21.5059 755.174 20.9844 755.864 20.9844 cv
756.555 20.9844 757.114 21.5059 757.114 22.1504 cv
cp
f
773.198 22.1504 mo
773.198 22.7949 772.638 23.3164 771.948 23.3164 cv
771.257 23.3164 770.698 22.7949 770.698 22.1504 cv
770.698 21.5059 771.257 20.9834 771.948 20.9834 cv
772.638 20.9834 773.198 21.5059 773.198 22.1504 cv
cp
f
788.532 22.1504 mo
788.532 22.7949 787.971 23.3174 787.282 23.3174 cv
786.59 23.3174 786.032 22.7949 786.032 22.1504 cv
786.032 21.5059 786.59 20.9844 787.282 20.9844 cv
787.971 20.9844 788.532 21.5059 788.532 22.1504 cv
cp
f
804.032 22.0674 mo
804.032 22.7119 803.471 23.2344 802.782 23.2344 cv
802.09 23.2344 801.532 22.7119 801.532 22.0674 cv
801.532 21.4238 802.09 20.9004 802.782 20.9004 cv
803.471 20.9004 804.032 21.4238 804.032 22.0674 cv
cp
f
819.532 22.0674 mo
819.532 22.7119 818.971 23.2344 818.282 23.2344 cv
817.59 23.2344 817.032 22.7119 817.032 22.0674 cv
817.032 21.4238 817.59 20.9004 818.282 20.9004 cv
818.971 20.9004 819.532 21.4238 819.532 22.0674 cv
cp
f
835.782 21.9844 mo
835.782 22.6289 835.221 23.1504 834.532 23.1504 cv
833.84 23.1504 833.282 22.6289 833.282 21.9844 cv
833.282 21.3398 833.84 20.8174 834.532 20.8174 cv
835.221 20.8174 835.782 21.3398 835.782 21.9844 cv
cp
f
851.948 22.0674 mo
851.948 22.7119 851.389 23.2344 850.698 23.2344 cv
850.008 23.2344 849.448 22.7119 849.448 22.0674 cv
849.448 21.4238 850.008 20.9004 850.698 20.9004 cv
851.389 20.9004 851.948 21.4238 851.948 22.0674 cv
cp
f
867.116 22.0674 mo
867.116 22.7119 866.555 23.2344 865.866 23.2344 cv
865.174 23.2344 864.616 22.7119 864.616 22.0674 cv
864.616 21.4238 865.174 20.9004 865.866 20.9004 cv
866.555 20.9004 867.116 21.4238 867.116 22.0674 cv
cp
f
882.532 21.9844 mo
882.532 22.6289 881.971 23.1504 881.282 23.1504 cv
880.59 23.1504 880.032 22.6289 880.032 21.9844 cv
880.032 21.3398 880.59 20.8174 881.282 20.8174 cv
881.971 20.8174 882.532 21.3398 882.532 21.9844 cv
cp
f
898.866 22.1504 mo
898.866 22.7949 898.305 23.3174 897.616 23.3174 cv
896.924 23.3174 896.366 22.7949 896.366 22.1504 cv
896.366 21.5059 896.924 20.9844 897.616 20.9844 cv
898.305 20.9844 898.866 21.5059 898.866 22.1504 cv
cp
f
915.198 22.0664 mo
915.198 22.7109 914.639 23.2334 913.948 23.2334 cv
913.258 23.2334 912.698 22.7109 912.698 22.0664 cv
912.698 21.4219 913.258 20.9004 913.948 20.9004 cv
914.639 20.9004 915.198 21.4219 915.198 22.0664 cv
cp
1 .5 0 0 cmyk
f
662.657 37.3994 mo
662.657 38.0439 662.096 38.5674 661.407 38.5674 cv
660.715 38.5674 660.157 38.0439 660.157 37.3994 cv
660.157 36.7559 660.715 36.2334 661.407 36.2334 cv
662.096 36.2334 662.657 36.7559 662.657 37.3994 cv
cp
f
678.657 37.5342 mo
678.657 38.1787 678.096 38.7021 677.407 38.7021 cv
676.715 38.7021 676.157 38.1787 676.157 37.5342 cv
676.157 36.8906 676.715 36.3682 677.407 36.3682 cv
678.096 36.3682 678.657 36.8906 678.657 37.5342 cv
cp
0 1 1 0 cmyk
f
694.49 37.3682 mo
694.49 38.0127 693.93 38.5352 693.24 38.5352 cv
692.549 38.5352 691.99 38.0127 691.99 37.3682 cv
691.99 36.7236 692.549 36.2021 693.24 36.2021 cv
693.93 36.2021 694.49 36.7236 694.49 37.3682 cv
cp
f
709.99 37.5342 mo
709.99 38.1787 709.43 38.7021 708.74 38.7021 cv
708.049 38.7021 707.49 38.1787 707.49 37.5342 cv
707.49 36.8906 708.049 36.3682 708.74 36.3682 cv
709.43 36.3682 709.99 36.8906 709.99 37.5342 cv
cp
f
724.99 37.4004 mo
724.99 38.0449 724.43 38.5674 723.74 38.5674 cv
723.049 38.5674 722.49 38.0449 722.49 37.4004 cv
722.49 36.7568 723.049 36.2334 723.74 36.2334 cv
724.43 36.2334 724.99 36.7568 724.99 37.4004 cv
cp
f
740.99 37.4834 mo
740.99 38.1279 740.43 38.6504 739.74 38.6504 cv
739.049 38.6504 738.49 38.1279 738.49 37.4834 cv
738.49 36.8389 739.049 36.3174 739.74 36.3174 cv
740.43 36.3174 740.99 36.8389 740.99 37.4834 cv
cp
f
757.239 37.4834 mo
757.239 38.1279 756.68 38.6504 755.989 38.6504 cv
755.299 38.6504 754.739 38.1279 754.739 37.4834 cv
754.739 36.8389 755.299 36.3174 755.989 36.3174 cv
756.68 36.3174 757.239 36.8389 757.239 37.4834 cv
cp
f
773.323 37.4834 mo
773.323 38.1279 772.763 38.6494 772.073 38.6494 cv
771.382 38.6494 770.823 38.1279 770.823 37.4834 cv
770.823 36.8389 771.382 36.3164 772.073 36.3164 cv
772.763 36.3164 773.323 36.8389 773.323 37.4834 cv
cp
f
788.657 37.4834 mo
788.657 38.1279 788.096 38.6504 787.407 38.6504 cv
786.715 38.6504 786.157 38.1279 786.157 37.4834 cv
786.157 36.8389 786.715 36.3174 787.407 36.3174 cv
788.096 36.3174 788.657 36.8389 788.657 37.4834 cv
cp
f
804.157 37.4004 mo
804.157 38.0449 803.596 38.5674 802.907 38.5674 cv
802.215 38.5674 801.657 38.0449 801.657 37.4004 cv
801.657 36.7568 802.215 36.2334 802.907 36.2334 cv
803.596 36.2334 804.157 36.7568 804.157 37.4004 cv
cp
f
819.657 37.4004 mo
819.657 38.0449 819.096 38.5674 818.407 38.5674 cv
817.715 38.5674 817.157 38.0449 817.157 37.4004 cv
817.157 36.7568 817.715 36.2334 818.407 36.2334 cv
819.096 36.2334 819.657 36.7568 819.657 37.4004 cv
cp
f
835.907 37.3174 mo
835.907 37.9619 835.346 38.4834 834.657 38.4834 cv
833.965 38.4834 833.407 37.9619 833.407 37.3174 cv
833.407 36.6729 833.965 36.1504 834.657 36.1504 cv
835.346 36.1504 835.907 36.6729 835.907 37.3174 cv
cp
f
852.073 37.4004 mo
852.073 38.0449 851.514 38.5674 850.823 38.5674 cv
850.133 38.5674 849.573 38.0449 849.573 37.4004 cv
849.573 36.7568 850.133 36.2334 850.823 36.2334 cv
851.514 36.2334 852.073 36.7568 852.073 37.4004 cv
cp
f
867.241 37.4004 mo
867.241 38.0449 866.68 38.5674 865.991 38.5674 cv
865.299 38.5674 864.741 38.0449 864.741 37.4004 cv
864.741 36.7568 865.299 36.2334 865.991 36.2334 cv
866.68 36.2334 867.241 36.7568 867.241 37.4004 cv
cp
f
882.657 37.3174 mo
882.657 37.9619 882.096 38.4834 881.407 38.4834 cv
880.715 38.4834 880.157 37.9619 880.157 37.3174 cv
880.157 36.6729 880.715 36.1504 881.407 36.1504 cv
882.096 36.1504 882.657 36.6729 882.657 37.3174 cv
cp
f
898.991 37.4834 mo
898.991 38.1279 898.43 38.6504 897.741 38.6504 cv
897.049 38.6504 896.491 38.1279 896.491 37.4834 cv
896.491 36.8389 897.049 36.3174 897.741 36.3174 cv
898.43 36.3174 898.991 36.8389 898.991 37.4834 cv
cp
f
915.323 37.3994 mo
915.323 38.0439 914.764 38.5664 914.073 38.5664 cv
913.383 38.5664 912.823 38.0439 912.823 37.3994 cv
912.823 36.7549 913.383 36.2334 914.073 36.2334 cv
914.764 36.2334 915.323 36.7549 915.323 37.3994 cv
cp
1 .5 0 0 cmyk
f
662.657 51.3164 mo
662.657 51.9609 662.096 52.4844 661.407 52.4844 cv
660.715 52.4844 660.157 51.9609 660.157 51.3164 cv
660.157 50.6729 660.715 50.1504 661.407 50.1504 cv
662.096 50.1504 662.657 50.6729 662.657 51.3164 cv
cp
f
678.657 51.4512 mo
678.657 52.0957 678.096 52.6191 677.407 52.6191 cv
676.715 52.6191 676.157 52.0957 676.157 51.4512 cv
676.157 50.8076 676.715 50.2852 677.407 50.2852 cv
678.096 50.2852 678.657 50.8076 678.657 51.4512 cv
cp
0 1 1 0 cmyk
f
694.49 51.2852 mo
694.49 51.9297 693.93 52.4521 693.24 52.4521 cv
692.549 52.4521 691.99 51.9297 691.99 51.2852 cv
691.99 50.6406 692.549 50.1191 693.24 50.1191 cv
693.93 50.1191 694.49 50.6406 694.49 51.2852 cv
cp
f
709.99 51.4512 mo
709.99 52.0957 709.43 52.6191 708.74 52.6191 cv
708.049 52.6191 707.49 52.0957 707.49 51.4512 cv
707.49 50.8076 708.049 50.2852 708.74 50.2852 cv
709.43 50.2852 709.99 50.8076 709.99 51.4512 cv
cp
f
724.99 51.3174 mo
724.99 51.9619 724.43 52.4844 723.74 52.4844 cv
723.049 52.4844 722.49 51.9619 722.49 51.3174 cv
722.49 50.6738 723.049 50.1504 723.74 50.1504 cv
724.43 50.1504 724.99 50.6738 724.99 51.3174 cv
cp
f
740.99 51.4004 mo
740.99 52.0449 740.43 52.5674 739.74 52.5674 cv
739.049 52.5674 738.49 52.0449 738.49 51.4004 cv
738.49 50.7559 739.049 50.2344 739.74 50.2344 cv
740.43 50.2344 740.99 50.7559 740.99 51.4004 cv
cp
f
757.239 51.4004 mo
757.239 52.0449 756.68 52.5674 755.989 52.5674 cv
755.299 52.5674 754.739 52.0449 754.739 51.4004 cv
754.739 50.7559 755.299 50.2344 755.989 50.2344 cv
756.68 50.2344 757.239 50.7559 757.239 51.4004 cv
cp
f
773.323 51.4004 mo
773.323 52.0449 772.763 52.5664 772.073 52.5664 cv
771.382 52.5664 770.823 52.0449 770.823 51.4004 cv
770.823 50.7559 771.382 50.2334 772.073 50.2334 cv
772.763 50.2334 773.323 50.7559 773.323 51.4004 cv
cp
f
788.657 51.4004 mo
788.657 52.0449 788.096 52.5674 787.407 52.5674 cv
786.715 52.5674 786.157 52.0449 786.157 51.4004 cv
786.157 50.7559 786.715 50.2344 787.407 50.2344 cv
788.096 50.2344 788.657 50.7559 788.657 51.4004 cv
cp
f
804.157 51.3174 mo
804.157 51.9619 803.596 52.4844 802.907 52.4844 cv
802.215 52.4844 801.657 51.9619 801.657 51.3174 cv
801.657 50.6738 802.215 50.1504 802.907 50.1504 cv
803.596 50.1504 804.157 50.6738 804.157 51.3174 cv
cp
f
819.657 51.3174 mo
819.657 51.9619 819.096 52.4844 818.407 52.4844 cv
817.715 52.4844 817.157 51.9619 817.157 51.3174 cv
817.157 50.6738 817.715 50.1504 818.407 50.1504 cv
819.096 50.1504 819.657 50.6738 819.657 51.3174 cv
cp
f
835.907 51.2344 mo
835.907 51.8789 835.346 52.4004 834.657 52.4004 cv
833.965 52.4004 833.407 51.8789 833.407 51.2344 cv
833.407 50.5898 833.965 50.0674 834.657 50.0674 cv
835.346 50.0674 835.907 50.5898 835.907 51.2344 cv
cp
f
852.073 51.3174 mo
852.073 51.9619 851.514 52.4844 850.823 52.4844 cv
850.133 52.4844 849.573 51.9619 849.573 51.3174 cv
849.573 50.6738 850.133 50.1504 850.823 50.1504 cv
851.514 50.1504 852.073 50.6738 852.073 51.3174 cv
cp
f
867.241 51.3174 mo
867.241 51.9619 866.68 52.4844 865.991 52.4844 cv
865.299 52.4844 864.741 51.9619 864.741 51.3174 cv
864.741 50.6738 865.299 50.1504 865.991 50.1504 cv
866.68 50.1504 867.241 50.6738 867.241 51.3174 cv
cp
f
882.657 51.2344 mo
882.657 51.8789 882.096 52.4004 881.407 52.4004 cv
880.715 52.4004 880.157 51.8789 880.157 51.2344 cv
880.157 50.5898 880.715 50.0674 881.407 50.0674 cv
882.096 50.0674 882.657 50.5898 882.657 51.2344 cv
cp
f
898.991 51.4004 mo
898.991 52.0449 898.43 52.5674 897.741 52.5674 cv
897.049 52.5674 896.491 52.0449 896.491 51.4004 cv
896.491 50.7559 897.049 50.2344 897.741 50.2344 cv
898.43 50.2344 898.991 50.7559 898.991 51.4004 cv
cp
f
915.323 51.3164 mo
915.323 51.9609 914.764 52.4834 914.073 52.4834 cv
913.383 52.4834 912.823 51.9609 912.823 51.3164 cv
912.823 50.6719 913.383 50.1504 914.073 50.1504 cv
914.764 50.1504 915.323 50.6719 915.323 51.3164 cv
cp
1 .5 0 0 cmyk
f
662.823 66.8164 mo
662.823 67.4609 662.263 67.9844 661.573 67.9844 cv
660.882 67.9844 660.323 67.4609 660.323 66.8164 cv
660.323 66.1729 660.882 65.6504 661.573 65.6504 cv
662.263 65.6504 662.823 66.1729 662.823 66.8164 cv
cp
f
678.823 66.9512 mo
678.823 67.5957 678.263 68.1191 677.573 68.1191 cv
676.882 68.1191 676.323 67.5957 676.323 66.9512 cv
676.323 66.3076 676.882 65.7852 677.573 65.7852 cv
678.263 65.7852 678.823 66.3076 678.823 66.9512 cv
cp
0 1 1 0 cmyk
f
694.657 66.7852 mo
694.657 67.4297 694.096 67.9521 693.407 67.9521 cv
692.715 67.9521 692.157 67.4297 692.157 66.7852 cv
692.157 66.1406 692.715 65.6191 693.407 65.6191 cv
694.096 65.6191 694.657 66.1406 694.657 66.7852 cv
cp
f
710.157 66.9512 mo
710.157 67.5957 709.596 68.1191 708.907 68.1191 cv
708.215 68.1191 707.657 67.5957 707.657 66.9512 cv
707.657 66.3076 708.215 65.7852 708.907 65.7852 cv
709.596 65.7852 710.157 66.3076 710.157 66.9512 cv
cp
f
725.157 66.8174 mo
725.157 67.4619 724.596 67.9844 723.907 67.9844 cv
723.215 67.9844 722.657 67.4619 722.657 66.8174 cv
722.657 66.1738 723.215 65.6504 723.907 65.6504 cv
724.596 65.6504 725.157 66.1738 725.157 66.8174 cv
cp
f
741.157 66.9004 mo
741.157 67.5449 740.596 68.0674 739.907 68.0674 cv
739.215 68.0674 738.657 67.5449 738.657 66.9004 cv
738.657 66.2559 739.215 65.7344 739.907 65.7344 cv
740.596 65.7344 741.157 66.2559 741.157 66.9004 cv
cp
f
757.406 66.9004 mo
757.406 67.5449 756.846 68.0674 756.156 68.0674 cv
755.465 68.0674 754.906 67.5449 754.906 66.9004 cv
754.906 66.2559 755.465 65.7344 756.156 65.7344 cv
756.846 65.7344 757.406 66.2559 757.406 66.9004 cv
cp
f
773.489 66.9004 mo
773.489 67.5449 772.93 68.0664 772.239 68.0664 cv
771.549 68.0664 770.989 67.5449 770.989 66.9004 cv
770.989 66.2559 771.549 65.7334 772.239 65.7334 cv
772.93 65.7334 773.489 66.2559 773.489 66.9004 cv
cp
f
788.823 66.9004 mo
788.823 67.5449 788.263 68.0674 787.573 68.0674 cv
786.882 68.0674 786.323 67.5449 786.323 66.9004 cv
786.323 66.2559 786.882 65.7344 787.573 65.7344 cv
788.263 65.7344 788.823 66.2559 788.823 66.9004 cv
cp
f
804.323 66.8174 mo
804.323 67.4619 803.764 67.9844 803.073 67.9844 cv
802.383 67.9844 801.823 67.4619 801.823 66.8174 cv
801.823 66.1738 802.383 65.6504 803.073 65.6504 cv
803.764 65.6504 804.323 66.1738 804.323 66.8174 cv
cp
f
819.823 66.8174 mo
819.823 67.4619 819.264 67.9844 818.573 67.9844 cv
817.883 67.9844 817.323 67.4619 817.323 66.8174 cv
817.323 66.1738 817.883 65.6504 818.573 65.6504 cv
819.264 65.6504 819.823 66.1738 819.823 66.8174 cv
cp
f
836.073 66.7344 mo
836.073 67.3789 835.514 67.9004 834.823 67.9004 cv
834.133 67.9004 833.573 67.3789 833.573 66.7344 cv
833.573 66.0898 834.133 65.5674 834.823 65.5674 cv
835.514 65.5674 836.073 66.0898 836.073 66.7344 cv
cp
f
852.239 66.8174 mo
852.239 67.4619 851.68 67.9844 850.989 67.9844 cv
850.299 67.9844 849.739 67.4619 849.739 66.8174 cv
849.739 66.1738 850.299 65.6504 850.989 65.6504 cv
851.68 65.6504 852.239 66.1738 852.239 66.8174 cv
cp
f
867.407 66.8174 mo
867.407 67.4619 866.846 67.9844 866.157 67.9844 cv
865.465 67.9844 864.907 67.4619 864.907 66.8174 cv
864.907 66.1738 865.465 65.6504 866.157 65.6504 cv
866.846 65.6504 867.407 66.1738 867.407 66.8174 cv
cp
f
882.823 66.7344 mo
882.823 67.3789 882.264 67.9004 881.573 67.9004 cv
880.883 67.9004 880.323 67.3789 880.323 66.7344 cv
880.323 66.0898 880.883 65.5674 881.573 65.5674 cv
882.264 65.5674 882.823 66.0898 882.823 66.7344 cv
cp
f
899.157 66.9004 mo
899.157 67.5449 898.596 68.0674 897.907 68.0674 cv
897.215 68.0674 896.657 67.5449 896.657 66.9004 cv
896.657 66.2559 897.215 65.7344 897.907 65.7344 cv
898.596 65.7344 899.157 66.2559 899.157 66.9004 cv
cp
f
915.489 66.8164 mo
915.489 67.4609 914.93 67.9834 914.239 67.9834 cv
913.549 67.9834 912.989 67.4609 912.989 66.8164 cv
912.989 66.1719 913.549 65.6504 914.239 65.6504 cv
914.93 65.6504 915.489 66.1719 915.489 66.8164 cv
cp
1 .5 0 0 cmyk
f
662.657 80.8164 mo
662.657 81.4609 662.096 81.9844 661.407 81.9844 cv
660.715 81.9844 660.157 81.4609 660.157 80.8164 cv
660.157 80.1729 660.715 79.6504 661.407 79.6504 cv
662.096 79.6504 662.657 80.1729 662.657 80.8164 cv
cp
f
678.657 80.9512 mo
678.657 81.5957 678.096 82.1191 677.407 82.1191 cv
676.715 82.1191 676.157 81.5957 676.157 80.9512 cv
676.157 80.3076 676.715 79.7852 677.407 79.7852 cv
678.096 79.7852 678.657 80.3076 678.657 80.9512 cv
cp
0 1 1 0 cmyk
f
694.49 80.7852 mo
694.49 81.4297 693.93 81.9521 693.24 81.9521 cv
692.549 81.9521 691.99 81.4297 691.99 80.7852 cv
691.99 80.1406 692.549 79.6191 693.24 79.6191 cv
693.93 79.6191 694.49 80.1406 694.49 80.7852 cv
cp
f
709.99 80.9512 mo
709.99 81.5957 709.43 82.1191 708.74 82.1191 cv
708.049 82.1191 707.49 81.5957 707.49 80.9512 cv
707.49 80.3076 708.049 79.7852 708.74 79.7852 cv
709.43 79.7852 709.99 80.3076 709.99 80.9512 cv
cp
f
724.99 80.8174 mo
724.99 81.4619 724.43 81.9844 723.74 81.9844 cv
723.049 81.9844 722.49 81.4619 722.49 80.8174 cv
722.49 80.1738 723.049 79.6504 723.74 79.6504 cv
724.43 79.6504 724.99 80.1738 724.99 80.8174 cv
cp
f
740.99 80.9004 mo
740.99 81.5449 740.43 82.0674 739.74 82.0674 cv
739.049 82.0674 738.49 81.5449 738.49 80.9004 cv
738.49 80.2559 739.049 79.7344 739.74 79.7344 cv
740.43 79.7344 740.99 80.2559 740.99 80.9004 cv
cp
f
757.239 80.9004 mo
757.239 81.5449 756.68 82.0674 755.989 82.0674 cv
755.299 82.0674 754.739 81.5449 754.739 80.9004 cv
754.739 80.2559 755.299 79.7344 755.989 79.7344 cv
756.68 79.7344 757.239 80.2559 757.239 80.9004 cv
cp
f
773.323 80.9004 mo
773.323 81.5449 772.763 82.0664 772.073 82.0664 cv
771.382 82.0664 770.823 81.5449 770.823 80.9004 cv
770.823 80.2559 771.382 79.7334 772.073 79.7334 cv
772.763 79.7334 773.323 80.2559 773.323 80.9004 cv
cp
f
788.657 80.9004 mo
788.657 81.5449 788.096 82.0674 787.407 82.0674 cv
786.715 82.0674 786.157 81.5449 786.157 80.9004 cv
786.157 80.2559 786.715 79.7344 787.407 79.7344 cv
788.096 79.7344 788.657 80.2559 788.657 80.9004 cv
cp
f
804.157 80.8174 mo
804.157 81.4619 803.596 81.9844 802.907 81.9844 cv
802.215 81.9844 801.657 81.4619 801.657 80.8174 cv
801.657 80.1738 802.215 79.6504 802.907 79.6504 cv
803.596 79.6504 804.157 80.1738 804.157 80.8174 cv
cp
f
819.657 80.8174 mo
819.657 81.4619 819.096 81.9844 818.407 81.9844 cv
817.715 81.9844 817.157 81.4619 817.157 80.8174 cv
817.157 80.1738 817.715 79.6504 818.407 79.6504 cv
819.096 79.6504 819.657 80.1738 819.657 80.8174 cv
cp
f
835.907 80.7344 mo
835.907 81.3789 835.346 81.9004 834.657 81.9004 cv
833.965 81.9004 833.407 81.3789 833.407 80.7344 cv
833.407 80.0898 833.965 79.5674 834.657 79.5674 cv
835.346 79.5674 835.907 80.0898 835.907 80.7344 cv
cp
f
852.073 80.8174 mo
852.073 81.4619 851.514 81.9844 850.823 81.9844 cv
850.133 81.9844 849.573 81.4619 849.573 80.8174 cv
849.573 80.1738 850.133 79.6504 850.823 79.6504 cv
851.514 79.6504 852.073 80.1738 852.073 80.8174 cv
cp
f
867.241 80.8174 mo
867.241 81.4619 866.68 81.9844 865.991 81.9844 cv
865.299 81.9844 864.741 81.4619 864.741 80.8174 cv
864.741 80.1738 865.299 79.6504 865.991 79.6504 cv
866.68 79.6504 867.241 80.1738 867.241 80.8174 cv
cp
f
882.657 80.7344 mo
882.657 81.3789 882.096 81.9004 881.407 81.9004 cv
880.715 81.9004 880.157 81.3789 880.157 80.7344 cv
880.157 80.0898 880.715 79.5674 881.407 79.5674 cv
882.096 79.5674 882.657 80.0898 882.657 80.7344 cv
cp
f
898.991 80.9004 mo
898.991 81.5449 898.43 82.0674 897.741 82.0674 cv
897.049 82.0674 896.491 81.5449 896.491 80.9004 cv
896.491 80.2559 897.049 79.7344 897.741 79.7344 cv
898.43 79.7344 898.991 80.2559 898.991 80.9004 cv
cp
f
678.657 96.1191 mo
678.657 96.7637 678.096 97.2852 677.407 97.2852 cv
676.715 97.2852 676.157 96.7637 676.157 96.1191 cv
676.157 95.4746 676.715 94.9521 677.407 94.9521 cv
678.096 94.9521 678.657 95.4746 678.657 96.1191 cv
cp
f
694.49 95.9521 mo
694.49 96.5967 693.93 97.1191 693.24 97.1191 cv
692.549 97.1191 691.99 96.5967 691.99 95.9521 cv
691.99 95.3086 692.549 94.7852 693.24 94.7852 cv
693.93 94.7852 694.49 95.3086 694.49 95.9521 cv
cp
f
709.99 96.1191 mo
709.99 96.7637 709.43 97.2852 708.74 97.2852 cv
708.049 97.2852 707.49 96.7637 707.49 96.1191 cv
707.49 95.4746 708.049 94.9521 708.74 94.9521 cv
709.43 94.9521 709.99 95.4746 709.99 96.1191 cv
cp
f
724.99 95.9844 mo
724.99 96.6289 724.43 97.1514 723.74 97.1514 cv
723.049 97.1514 722.49 96.6289 722.49 95.9844 cv
722.49 95.3398 723.049 94.8184 723.74 94.8184 cv
724.43 94.8184 724.99 95.3398 724.99 95.9844 cv
cp
f
740.99 96.0674 mo
740.99 96.7119 740.43 97.2344 739.74 97.2344 cv
739.049 97.2344 738.49 96.7119 738.49 96.0674 cv
738.49 95.4238 739.049 94.9004 739.74 94.9004 cv
740.43 94.9004 740.99 95.4238 740.99 96.0674 cv
cp
f
757.239 96.0674 mo
757.239 96.7119 756.68 97.2344 755.989 97.2344 cv
755.299 97.2344 754.739 96.7119 754.739 96.0674 cv
754.739 95.4238 755.299 94.9004 755.989 94.9004 cv
756.68 94.9004 757.239 95.4238 757.239 96.0674 cv
cp
f
773.323 96.0664 mo
773.323 96.7109 772.763 97.2344 772.073 97.2344 cv
771.382 97.2344 770.823 96.7109 770.823 96.0664 cv
770.823 95.4229 771.382 94.9004 772.073 94.9004 cv
772.763 94.9004 773.323 95.4229 773.323 96.0664 cv
cp
f
788.657 96.0674 mo
788.657 96.7119 788.096 97.2344 787.407 97.2344 cv
786.715 97.2344 786.157 96.7119 786.157 96.0674 cv
786.157 95.4238 786.715 94.9004 787.407 94.9004 cv
788.096 94.9004 788.657 95.4238 788.657 96.0674 cv
cp
f
804.157 95.9844 mo
804.157 96.6289 803.596 97.1514 802.907 97.1514 cv
802.215 97.1514 801.657 96.6289 801.657 95.9844 cv
801.657 95.3398 802.215 94.8184 802.907 94.8184 cv
803.596 94.8184 804.157 95.3398 804.157 95.9844 cv
cp
f
819.657 95.9844 mo
819.657 96.6289 819.096 97.1514 818.407 97.1514 cv
817.715 97.1514 817.157 96.6289 817.157 95.9844 cv
817.157 95.3398 817.715 94.8184 818.407 94.8184 cv
819.096 94.8184 819.657 95.3398 819.657 95.9844 cv
cp
f
835.907 95.9004 mo
835.907 96.5449 835.346 97.0684 834.657 97.0684 cv
833.965 97.0684 833.407 96.5449 833.407 95.9004 cv
833.407 95.2568 833.965 94.7344 834.657 94.7344 cv
835.346 94.7344 835.907 95.2568 835.907 95.9004 cv
cp
f
852.073 95.9844 mo
852.073 96.6289 851.514 97.1514 850.823 97.1514 cv
850.133 97.1514 849.573 96.6289 849.573 95.9844 cv
849.573 95.3398 850.133 94.8184 850.823 94.8184 cv
851.514 94.8184 852.073 95.3398 852.073 95.9844 cv
cp
f
867.241 95.9844 mo
867.241 96.6289 866.68 97.1514 865.991 97.1514 cv
865.299 97.1514 864.741 96.6289 864.741 95.9844 cv
864.741 95.3398 865.299 94.8184 865.991 94.8184 cv
866.68 94.8184 867.241 95.3398 867.241 95.9844 cv
cp
f
882.657 95.9004 mo
882.657 96.5449 882.096 97.0684 881.407 97.0684 cv
880.715 97.0684 880.157 96.5449 880.157 95.9004 cv
880.157 95.2568 880.715 94.7344 881.407 94.7344 cv
882.096 94.7344 882.657 95.2568 882.657 95.9004 cv
cp
f
898.991 96.0674 mo
898.991 96.7119 898.43 97.2344 897.741 97.2344 cv
897.049 97.2344 896.491 96.7119 896.491 96.0674 cv
896.491 95.4238 897.049 94.9004 897.741 94.9004 cv
898.43 94.9004 898.991 95.4238 898.991 96.0674 cv
cp
f
678.657 110.119 mo
678.657 110.764 678.096 111.285 677.407 111.285 cv
676.715 111.285 676.157 110.764 676.157 110.119 cv
676.157 109.475 676.715 108.952 677.407 108.952 cv
678.096 108.952 678.657 109.475 678.657 110.119 cv
cp
f
694.49 109.952 mo
694.49 110.597 693.93 111.119 693.24 111.119 cv
692.549 111.119 691.99 110.597 691.99 109.952 cv
691.99 109.309 692.549 108.785 693.24 108.785 cv
693.93 108.785 694.49 109.309 694.49 109.952 cv
cp
f
709.99 110.119 mo
709.99 110.764 709.43 111.285 708.74 111.285 cv
708.049 111.285 707.49 110.764 707.49 110.119 cv
707.49 109.475 708.049 108.952 708.74 108.952 cv
709.43 108.952 709.99 109.475 709.99 110.119 cv
cp
f
724.99 109.984 mo
724.99 110.629 724.43 111.151 723.74 111.151 cv
723.049 111.151 722.49 110.629 722.49 109.984 cv
722.49 109.34 723.049 108.818 723.74 108.818 cv
724.43 108.818 724.99 109.34 724.99 109.984 cv
cp
f
740.99 110.067 mo
740.99 110.712 740.43 111.234 739.74 111.234 cv
739.049 111.234 738.49 110.712 738.49 110.067 cv
738.49 109.424 739.049 108.9 739.74 108.9 cv
740.43 108.9 740.99 109.424 740.99 110.067 cv
cp
f
757.239 110.067 mo
757.239 110.712 756.68 111.234 755.989 111.234 cv
755.299 111.234 754.739 110.712 754.739 110.067 cv
754.739 109.424 755.299 108.9 755.989 108.9 cv
756.68 108.9 757.239 109.424 757.239 110.067 cv
cp
f
773.323 110.066 mo
773.323 110.711 772.763 111.234 772.073 111.234 cv
771.382 111.234 770.823 110.711 770.823 110.066 cv
770.823 109.423 771.382 108.9 772.073 108.9 cv
772.763 108.9 773.323 109.423 773.323 110.066 cv
cp
f
788.657 110.067 mo
788.657 110.712 788.096 111.234 787.407 111.234 cv
786.715 111.234 786.157 110.712 786.157 110.067 cv
786.157 109.424 786.715 108.9 787.407 108.9 cv
788.096 108.9 788.657 109.424 788.657 110.067 cv
cp
f
804.157 109.984 mo
804.157 110.629 803.596 111.151 802.907 111.151 cv
802.215 111.151 801.657 110.629 801.657 109.984 cv
801.657 109.34 802.215 108.818 802.907 108.818 cv
803.596 108.818 804.157 109.34 804.157 109.984 cv
cp
f
819.657 109.984 mo
819.657 110.629 819.096 111.151 818.407 111.151 cv
817.715 111.151 817.157 110.629 817.157 109.984 cv
817.157 109.34 817.715 108.818 818.407 108.818 cv
819.096 108.818 819.657 109.34 819.657 109.984 cv
cp
f
835.907 109.9 mo
835.907 110.545 835.346 111.068 834.657 111.068 cv
833.965 111.068 833.407 110.545 833.407 109.9 cv
833.407 109.257 833.965 108.734 834.657 108.734 cv
835.346 108.734 835.907 109.257 835.907 109.9 cv
cp
f
852.073 109.984 mo
852.073 110.629 851.514 111.151 850.823 111.151 cv
850.133 111.151 849.573 110.629 849.573 109.984 cv
849.573 109.34 850.133 108.818 850.823 108.818 cv
851.514 108.818 852.073 109.34 852.073 109.984 cv
cp
f
867.241 109.984 mo
867.241 110.629 866.68 111.151 865.991 111.151 cv
865.299 111.151 864.741 110.629 864.741 109.984 cv
864.741 109.34 865.299 108.818 865.991 108.818 cv
866.68 108.818 867.241 109.34 867.241 109.984 cv
cp
f
882.657 109.9 mo
882.657 110.545 882.096 111.068 881.407 111.068 cv
880.715 111.068 880.157 110.545 880.157 109.9 cv
880.157 109.257 880.715 108.734 881.407 108.734 cv
882.096 108.734 882.657 109.257 882.657 109.9 cv
cp
f
898.991 110.067 mo
898.991 110.712 898.43 111.234 897.741 111.234 cv
897.049 111.234 896.491 110.712 896.491 110.067 cv
896.491 109.424 897.049 108.9 897.741 108.9 cv
898.43 108.9 898.991 109.424 898.991 110.067 cv
cp
f
678.657 125.452 mo
678.657 126.097 678.096 126.618 677.407 126.618 cv
676.715 126.618 676.157 126.097 676.157 125.452 cv
676.157 124.808 676.715 124.285 677.407 124.285 cv
678.096 124.285 678.657 124.808 678.657 125.452 cv
cp
f
694.49 125.285 mo
694.49 125.93 693.93 126.452 693.24 126.452 cv
692.549 126.452 691.99 125.93 691.99 125.285 cv
691.99 124.642 692.549 124.118 693.24 124.118 cv
693.93 124.118 694.49 124.642 694.49 125.285 cv
cp
f
709.99 125.452 mo
709.99 126.097 709.43 126.618 708.74 126.618 cv
708.049 126.618 707.49 126.097 707.49 125.452 cv
707.49 124.808 708.049 124.285 708.74 124.285 cv
709.43 124.285 709.99 124.808 709.99 125.452 cv
cp
f
724.99 125.317 mo
724.99 125.962 724.43 126.484 723.74 126.484 cv
723.049 126.484 722.49 125.962 722.49 125.317 cv
722.49 124.673 723.049 124.151 723.74 124.151 cv
724.43 124.151 724.99 124.673 724.99 125.317 cv
cp
f
740.99 125.4 mo
740.99 126.045 740.43 126.567 739.74 126.567 cv
739.049 126.567 738.49 126.045 738.49 125.4 cv
738.49 124.757 739.049 124.233 739.74 124.233 cv
740.43 124.233 740.99 124.757 740.99 125.4 cv
cp
f
757.239 125.4 mo
757.239 126.045 756.68 126.567 755.989 126.567 cv
755.299 126.567 754.739 126.045 754.739 125.4 cv
754.739 124.757 755.299 124.233 755.989 124.233 cv
756.68 124.233 757.239 124.757 757.239 125.4 cv
cp
f
773.323 125.399 mo
773.323 126.044 772.763 126.567 772.073 126.567 cv
771.382 126.567 770.823 126.044 770.823 125.399 cv
770.823 124.756 771.382 124.233 772.073 124.233 cv
772.763 124.233 773.323 124.756 773.323 125.399 cv
cp
f
788.657 125.4 mo
788.657 126.045 788.096 126.567 787.407 126.567 cv
786.715 126.567 786.157 126.045 786.157 125.4 cv
786.157 124.757 786.715 124.233 787.407 124.233 cv
788.096 124.233 788.657 124.757 788.657 125.4 cv
cp
f
804.157 125.317 mo
804.157 125.962 803.596 126.484 802.907 126.484 cv
802.215 126.484 801.657 125.962 801.657 125.317 cv
801.657 124.673 802.215 124.151 802.907 124.151 cv
803.596 124.151 804.157 124.673 804.157 125.317 cv
cp
f
819.657 125.317 mo
819.657 125.962 819.096 126.484 818.407 126.484 cv
817.715 126.484 817.157 125.962 817.157 125.317 cv
817.157 124.673 817.715 124.151 818.407 124.151 cv
819.096 124.151 819.657 124.673 819.657 125.317 cv
cp
f
835.907 125.233 mo
835.907 125.878 835.346 126.401 834.657 126.401 cv
833.965 126.401 833.407 125.878 833.407 125.233 cv
833.407 124.59 833.965 124.067 834.657 124.067 cv
835.346 124.067 835.907 124.59 835.907 125.233 cv
cp
f
852.073 125.317 mo
852.073 125.962 851.514 126.484 850.823 126.484 cv
850.133 126.484 849.573 125.962 849.573 125.317 cv
849.573 124.673 850.133 124.151 850.823 124.151 cv
851.514 124.151 852.073 124.673 852.073 125.317 cv
cp
f
867.241 125.317 mo
867.241 125.962 866.68 126.484 865.991 126.484 cv
865.299 126.484 864.741 125.962 864.741 125.317 cv
864.741 124.673 865.299 124.151 865.991 124.151 cv
866.68 124.151 867.241 124.673 867.241 125.317 cv
cp
f
882.657 125.233 mo
882.657 125.878 882.096 126.401 881.407 126.401 cv
880.715 126.401 880.157 125.878 880.157 125.233 cv
880.157 124.59 880.715 124.067 881.407 124.067 cv
882.096 124.067 882.657 124.59 882.657 125.233 cv
cp
f
898.991 125.4 mo
898.991 126.045 898.43 126.567 897.741 126.567 cv
897.049 126.567 896.491 126.045 896.491 125.4 cv
896.491 124.757 897.049 124.233 897.741 124.233 cv
898.43 124.233 898.991 124.757 898.991 125.4 cv
cp
f
678.657 138.952 mo
678.657 139.597 678.096 140.118 677.407 140.118 cv
676.715 140.118 676.157 139.597 676.157 138.952 cv
676.157 138.308 676.715 137.785 677.407 137.785 cv
678.096 137.785 678.657 138.308 678.657 138.952 cv
cp
f
694.49 138.785 mo
694.49 139.43 693.93 139.952 693.24 139.952 cv
692.549 139.952 691.99 139.43 691.99 138.785 cv
691.99 138.142 692.549 137.618 693.24 137.618 cv
693.93 137.618 694.49 138.142 694.49 138.785 cv
cp
f
709.99 138.952 mo
709.99 139.597 709.43 140.118 708.74 140.118 cv
708.049 140.118 707.49 139.597 707.49 138.952 cv
707.49 138.308 708.049 137.785 708.74 137.785 cv
709.43 137.785 709.99 138.308 709.99 138.952 cv
cp
f
724.99 138.817 mo
724.99 139.462 724.43 139.984 723.74 139.984 cv
723.049 139.984 722.49 139.462 722.49 138.817 cv
722.49 138.173 723.049 137.651 723.74 137.651 cv
724.43 137.651 724.99 138.173 724.99 138.817 cv
cp
f
740.99 138.9 mo
740.99 139.545 740.43 140.067 739.74 140.067 cv
739.049 140.067 738.49 139.545 738.49 138.9 cv
738.49 138.257 739.049 137.733 739.74 137.733 cv
740.43 137.733 740.99 138.257 740.99 138.9 cv
cp
f
757.239 138.9 mo
757.239 139.545 756.68 140.067 755.989 140.067 cv
755.299 140.067 754.739 139.545 754.739 138.9 cv
754.739 138.257 755.299 137.733 755.989 137.733 cv
756.68 137.733 757.239 138.257 757.239 138.9 cv
cp
f
773.323 138.899 mo
773.323 139.544 772.763 140.067 772.073 140.067 cv
771.382 140.067 770.823 139.544 770.823 138.899 cv
770.823 138.256 771.382 137.733 772.073 137.733 cv
772.763 137.733 773.323 138.256 773.323 138.899 cv
cp
f
788.657 138.9 mo
788.657 139.545 788.096 140.067 787.407 140.067 cv
786.715 140.067 786.157 139.545 786.157 138.9 cv
786.157 138.257 786.715 137.733 787.407 137.733 cv
788.096 137.733 788.657 138.257 788.657 138.9 cv
cp
f
804.157 138.817 mo
804.157 139.462 803.596 139.984 802.907 139.984 cv
802.215 139.984 801.657 139.462 801.657 138.817 cv
801.657 138.173 802.215 137.651 802.907 137.651 cv
803.596 137.651 804.157 138.173 804.157 138.817 cv
cp
f
819.657 138.817 mo
819.657 139.462 819.096 139.984 818.407 139.984 cv
817.715 139.984 817.157 139.462 817.157 138.817 cv
817.157 138.173 817.715 137.651 818.407 137.651 cv
819.096 137.651 819.657 138.173 819.657 138.817 cv
cp
f
835.907 138.733 mo
835.907 139.378 835.346 139.901 834.657 139.901 cv
833.965 139.901 833.407 139.378 833.407 138.733 cv
833.407 138.09 833.965 137.567 834.657 137.567 cv
835.346 137.567 835.907 138.09 835.907 138.733 cv
cp
f
852.073 138.817 mo
852.073 139.462 851.514 139.984 850.823 139.984 cv
850.133 139.984 849.573 139.462 849.573 138.817 cv
849.573 138.173 850.133 137.651 850.823 137.651 cv
851.514 137.651 852.073 138.173 852.073 138.817 cv
cp
f
867.241 138.817 mo
867.241 139.462 866.68 139.984 865.991 139.984 cv
865.299 139.984 864.741 139.462 864.741 138.817 cv
864.741 138.173 865.299 137.651 865.991 137.651 cv
866.68 137.651 867.241 138.173 867.241 138.817 cv
cp
f
882.657 138.733 mo
882.657 139.378 882.096 139.901 881.407 139.901 cv
880.715 139.901 880.157 139.378 880.157 138.733 cv
880.157 138.09 880.715 137.567 881.407 137.567 cv
882.096 137.567 882.657 138.09 882.657 138.733 cv
cp
f
898.991 138.9 mo
898.991 139.545 898.43 140.067 897.741 140.067 cv
897.049 140.067 896.491 139.545 896.491 138.9 cv
896.491 138.257 897.049 137.733 897.741 137.733 cv
898.43 137.733 898.991 138.257 898.991 138.9 cv
cp
f
678.657 154.286 mo
678.657 154.931 678.096 155.452 677.407 155.452 cv
676.715 155.452 676.157 154.931 676.157 154.286 cv
676.157 153.642 676.715 153.118 677.407 153.118 cv
678.096 153.118 678.657 153.642 678.657 154.286 cv
cp
f
694.49 154.118 mo
694.49 154.763 693.93 155.286 693.24 155.286 cv
692.549 155.286 691.99 154.763 691.99 154.118 cv
691.99 153.476 692.549 152.952 693.24 152.952 cv
693.93 152.952 694.49 153.476 694.49 154.118 cv
cp
f
709.99 154.286 mo
709.99 154.931 709.43 155.452 708.74 155.452 cv
708.049 155.452 707.49 154.931 707.49 154.286 cv
707.49 153.642 708.049 153.118 708.74 153.118 cv
709.43 153.118 709.99 153.642 709.99 154.286 cv
cp
f
724.99 154.151 mo
724.99 154.796 724.43 155.317 723.74 155.317 cv
723.049 155.317 722.49 154.796 722.49 154.151 cv
722.49 153.507 723.049 152.985 723.74 152.985 cv
724.43 152.985 724.99 153.507 724.99 154.151 cv
cp
f
740.99 154.233 mo
740.99 154.878 740.43 155.401 739.74 155.401 cv
739.049 155.401 738.49 154.878 738.49 154.233 cv
738.49 153.591 739.049 153.067 739.74 153.067 cv
740.43 153.067 740.99 153.591 740.99 154.233 cv
cp
f
757.239 154.233 mo
757.239 154.878 756.68 155.401 755.989 155.401 cv
755.299 155.401 754.739 154.878 754.739 154.233 cv
754.739 153.591 755.299 153.067 755.989 153.067 cv
756.68 153.067 757.239 153.591 757.239 154.233 cv
cp
f
773.323 154.233 mo
773.323 154.878 772.763 155.401 772.073 155.401 cv
771.382 155.401 770.823 154.878 770.823 154.233 cv
770.823 153.589 771.382 153.067 772.073 153.067 cv
772.763 153.067 773.323 153.589 773.323 154.233 cv
cp
f
788.657 154.233 mo
788.657 154.878 788.096 155.401 787.407 155.401 cv
786.715 155.401 786.157 154.878 786.157 154.233 cv
786.157 153.591 786.715 153.067 787.407 153.067 cv
788.096 153.067 788.657 153.591 788.657 154.233 cv
cp
f
804.157 154.151 mo
804.157 154.796 803.596 155.317 802.907 155.317 cv
802.215 155.317 801.657 154.796 801.657 154.151 cv
801.657 153.507 802.215 152.985 802.907 152.985 cv
803.596 152.985 804.157 153.507 804.157 154.151 cv
cp
f
819.657 154.151 mo
819.657 154.796 819.096 155.317 818.407 155.317 cv
817.715 155.317 817.157 154.796 817.157 154.151 cv
817.157 153.507 817.715 152.985 818.407 152.985 cv
819.096 152.985 819.657 153.507 819.657 154.151 cv
cp
f
835.907 154.067 mo
835.907 154.712 835.346 155.235 834.657 155.235 cv
833.965 155.235 833.407 154.712 833.407 154.067 cv
833.407 153.423 833.965 152.901 834.657 152.901 cv
835.346 152.901 835.907 153.423 835.907 154.067 cv
cp
f
852.073 154.151 mo
852.073 154.796 851.514 155.317 850.823 155.317 cv
850.133 155.317 849.573 154.796 849.573 154.151 cv
849.573 153.507 850.133 152.985 850.823 152.985 cv
851.514 152.985 852.073 153.507 852.073 154.151 cv
cp
f
867.241 154.151 mo
867.241 154.796 866.68 155.317 865.991 155.317 cv
865.299 155.317 864.741 154.796 864.741 154.151 cv
864.741 153.507 865.299 152.985 865.991 152.985 cv
866.68 152.985 867.241 153.507 867.241 154.151 cv
cp
f
882.657 154.067 mo
882.657 154.712 882.096 155.235 881.407 155.235 cv
880.715 155.235 880.157 154.712 880.157 154.067 cv
880.157 153.423 880.715 152.901 881.407 152.901 cv
882.096 152.901 882.657 153.423 882.657 154.067 cv
cp
f
694.49 168.118 mo
694.49 168.763 693.93 169.286 693.24 169.286 cv
692.549 169.286 691.99 168.763 691.99 168.118 cv
691.99 167.476 692.549 166.952 693.24 166.952 cv
693.93 166.952 694.49 167.476 694.49 168.118 cv
cp
f
709.99 168.286 mo
709.99 168.931 709.43 169.452 708.74 169.452 cv
708.049 169.452 707.49 168.931 707.49 168.286 cv
707.49 167.642 708.049 167.118 708.74 167.118 cv
709.43 167.118 709.99 167.642 709.99 168.286 cv
cp
f
724.99 168.151 mo
724.99 168.796 724.43 169.317 723.74 169.317 cv
723.049 169.317 722.49 168.796 722.49 168.151 cv
722.49 167.507 723.049 166.985 723.74 166.985 cv
724.43 166.985 724.99 167.507 724.99 168.151 cv
cp
f
740.99 168.233 mo
740.99 168.878 740.43 169.401 739.74 169.401 cv
739.049 169.401 738.49 168.878 738.49 168.233 cv
738.49 167.591 739.049 167.067 739.74 167.067 cv
740.43 167.067 740.99 167.591 740.99 168.233 cv
cp
f
757.239 168.233 mo
757.239 168.878 756.68 169.401 755.989 169.401 cv
755.299 169.401 754.739 168.878 754.739 168.233 cv
754.739 167.591 755.299 167.067 755.989 167.067 cv
756.68 167.067 757.239 167.591 757.239 168.233 cv
cp
f
773.323 168.233 mo
773.323 168.878 772.763 169.401 772.073 169.401 cv
771.382 169.401 770.823 168.878 770.823 168.233 cv
770.823 167.589 771.382 167.067 772.073 167.067 cv
772.763 167.067 773.323 167.589 773.323 168.233 cv
cp
.8 0 1 0 cmyk
f
788.657 168.233 mo
788.657 168.878 788.096 169.401 787.407 169.401 cv
786.715 169.401 786.157 168.878 786.157 168.233 cv
786.157 167.591 786.715 167.067 787.407 167.067 cv
788.096 167.067 788.657 167.591 788.657 168.233 cv
cp
f
804.157 168.151 mo
804.157 168.796 803.596 169.317 802.907 169.317 cv
802.215 169.317 801.657 168.796 801.657 168.151 cv
801.657 167.507 802.215 166.985 802.907 166.985 cv
803.596 166.985 804.157 167.507 804.157 168.151 cv
cp
f
819.657 168.151 mo
819.657 168.796 819.096 169.317 818.407 169.317 cv
817.715 169.317 817.157 168.796 817.157 168.151 cv
817.157 167.507 817.715 166.985 818.407 166.985 cv
819.096 166.985 819.657 167.507 819.657 168.151 cv
cp
0 1 1 0 cmyk
f
835.907 168.067 mo
835.907 168.712 835.346 169.235 834.657 169.235 cv
833.965 169.235 833.407 168.712 833.407 168.067 cv
833.407 167.423 833.965 166.901 834.657 166.901 cv
835.346 166.901 835.907 167.423 835.907 168.067 cv
cp
f
852.073 168.151 mo
852.073 168.796 851.514 169.317 850.823 169.317 cv
850.133 169.317 849.573 168.796 849.573 168.151 cv
849.573 167.507 850.133 166.985 850.823 166.985 cv
851.514 166.985 852.073 167.507 852.073 168.151 cv
cp
f
867.241 168.151 mo
867.241 168.796 866.68 169.317 865.991 169.317 cv
865.299 169.317 864.741 168.796 864.741 168.151 cv
864.741 167.507 865.299 166.985 865.991 166.985 cv
866.68 166.985 867.241 167.507 867.241 168.151 cv
cp
f
882.657 168.067 mo
882.657 168.712 882.096 169.235 881.407 169.235 cv
880.715 169.235 880.157 168.712 880.157 168.067 cv
880.157 167.423 880.715 166.901 881.407 166.901 cv
882.096 166.901 882.657 167.423 882.657 168.067 cv
cp
f
757.073 183.649 mo
757.073 184.294 756.513 184.817 755.823 184.817 cv
755.132 184.817 754.573 184.294 754.573 183.649 cv
754.573 183.007 755.132 182.483 755.823 182.483 cv
756.513 182.483 757.073 183.007 757.073 183.649 cv
cp
.8 0 1 0 cmyk
f
646.782 21.9521 mo
646.782 22.5967 646.221 23.1191 645.532 23.1191 cv
644.84 23.1191 644.282 22.5967 644.282 21.9521 cv
644.282 21.3086 644.84 20.7852 645.532 20.7852 cv
646.221 20.7852 646.782 21.3086 646.782 21.9521 cv
cp
1 .5 0 0 cmyk
f
931.116 21.9834 mo
931.116 22.6279 930.555 23.1504 929.866 23.1504 cv
929.174 23.1504 928.616 22.6279 928.616 21.9834 cv
928.616 21.3398 929.174 20.8164 929.866 20.8164 cv
930.555 20.8164 931.116 21.3398 931.116 21.9834 cv
cp
f
646.907 37.2852 mo
646.907 37.9297 646.346 38.4521 645.657 38.4521 cv
644.965 38.4521 644.407 37.9297 644.407 37.2852 cv
644.407 36.6416 644.965 36.1182 645.657 36.1182 cv
646.346 36.1182 646.907 36.6416 646.907 37.2852 cv
cp
f
931.241 37.3164 mo
931.241 37.9609 930.68 38.4834 929.991 38.4834 cv
929.299 38.4834 928.741 37.9609 928.741 37.3164 cv
928.741 36.6729 929.299 36.1494 929.991 36.1494 cv
930.68 36.1494 931.241 36.6729 931.241 37.3164 cv
cp
f
646.907 51.2021 mo
646.907 51.8467 646.346 52.3691 645.657 52.3691 cv
644.965 52.3691 644.407 51.8467 644.407 51.2021 cv
644.407 50.5586 644.965 50.0352 645.657 50.0352 cv
646.346 50.0352 646.907 50.5586 646.907 51.2021 cv
cp
f
931.241 51.2334 mo
931.241 51.8779 930.68 52.4004 929.991 52.4004 cv
929.299 52.4004 928.741 51.8779 928.741 51.2334 cv
928.741 50.5898 929.299 50.0664 929.991 50.0664 cv
930.68 50.0664 931.241 50.5898 931.241 51.2334 cv
cp
f
647.073 66.7021 mo
647.073 67.3467 646.513 67.8691 645.823 67.8691 cv
645.132 67.8691 644.573 67.3467 644.573 66.7021 cv
644.573 66.0586 645.132 65.5352 645.823 65.5352 cv
646.513 65.5352 647.073 66.0586 647.073 66.7021 cv
cp
f
931.407 66.7334 mo
931.407 67.3779 930.846 67.9004 930.157 67.9004 cv
929.465 67.9004 928.907 67.3779 928.907 66.7334 cv
928.907 66.0898 929.465 65.5664 930.157 65.5664 cv
930.846 65.5664 931.407 66.0898 931.407 66.7334 cv
cp
f
646.907 80.7021 mo
646.907 81.3467 646.346 81.8691 645.657 81.8691 cv
644.965 81.8691 644.407 81.3467 644.407 80.7021 cv
644.407 80.0586 644.965 79.5352 645.657 79.5352 cv
646.346 79.5352 646.907 80.0586 646.907 80.7021 cv
cp
f
915.323 80.8164 mo
915.323 81.4609 914.764 81.9834 914.073 81.9834 cv
913.383 81.9834 912.823 81.4609 912.823 80.8164 cv
912.823 80.1719 913.383 79.6504 914.073 79.6504 cv
914.764 79.6504 915.323 80.1719 915.323 80.8164 cv
cp
f
931.241 80.7334 mo
931.241 81.3779 930.68 81.9004 929.991 81.9004 cv
929.299 81.9004 928.741 81.3779 928.741 80.7334 cv
928.741 80.0898 929.299 79.5664 929.991 79.5664 cv
930.68 79.5664 931.241 80.0898 931.241 80.7334 cv
cp
f
646.907 95.8691 mo
646.907 96.5137 646.346 97.0361 645.657 97.0361 cv
644.965 97.0361 644.407 96.5137 644.407 95.8691 cv
644.407 95.2246 644.965 94.7031 645.657 94.7031 cv
646.346 94.7031 646.907 95.2246 646.907 95.8691 cv
cp
f
662.657 95.9844 mo
662.657 96.6289 662.096 97.1504 661.407 97.1504 cv
660.715 97.1504 660.157 96.6289 660.157 95.9844 cv
660.157 95.3398 660.715 94.8174 661.407 94.8174 cv
662.096 94.8174 662.657 95.3398 662.657 95.9844 cv
cp
f
915.323 95.9834 mo
915.323 96.6279 914.764 97.1504 914.073 97.1504 cv
913.383 97.1504 912.823 96.6279 912.823 95.9834 cv
912.823 95.3398 913.383 94.8164 914.073 94.8164 cv
914.764 94.8164 915.323 95.3398 915.323 95.9834 cv
cp
f
931.241 95.9004 mo
931.241 96.5449 930.68 97.0674 929.991 97.0674 cv
929.299 97.0674 928.741 96.5449 928.741 95.9004 cv
928.741 95.2559 929.299 94.7344 929.991 94.7344 cv
930.68 94.7344 931.241 95.2559 931.241 95.9004 cv
cp
f
646.907 109.869 mo
646.907 110.514 646.346 111.036 645.657 111.036 cv
644.965 111.036 644.407 110.514 644.407 109.869 cv
644.407 109.225 644.965 108.703 645.657 108.703 cv
646.346 108.703 646.907 109.225 646.907 109.869 cv
cp
f
662.657 109.984 mo
662.657 110.629 662.096 111.15 661.407 111.15 cv
660.715 111.15 660.157 110.629 660.157 109.984 cv
660.157 109.34 660.715 108.817 661.407 108.817 cv
662.096 108.817 662.657 109.34 662.657 109.984 cv
cp
f
915.323 109.983 mo
915.323 110.628 914.764 111.15 914.073 111.15 cv
913.383 111.15 912.823 110.628 912.823 109.983 cv
912.823 109.34 913.383 108.816 914.073 108.816 cv
914.764 108.816 915.323 109.34 915.323 109.983 cv
cp
f
931.241 109.9 mo
931.241 110.545 930.68 111.067 929.991 111.067 cv
929.299 111.067 928.741 110.545 928.741 109.9 cv
928.741 109.256 929.299 108.734 929.991 108.734 cv
930.68 108.734 931.241 109.256 931.241 109.9 cv
cp
f
646.907 125.202 mo
646.907 125.847 646.346 126.369 645.657 126.369 cv
644.965 126.369 644.407 125.847 644.407 125.202 cv
644.407 124.558 644.965 124.036 645.657 124.036 cv
646.346 124.036 646.907 124.558 646.907 125.202 cv
cp
f
662.657 125.317 mo
662.657 125.962 662.096 126.483 661.407 126.483 cv
660.715 126.483 660.157 125.962 660.157 125.317 cv
660.157 124.673 660.715 124.15 661.407 124.15 cv
662.096 124.15 662.657 124.673 662.657 125.317 cv
cp
f
915.323 125.316 mo
915.323 125.961 914.764 126.483 914.073 126.483 cv
913.383 126.483 912.823 125.961 912.823 125.316 cv
912.823 124.673 913.383 124.149 914.073 124.149 cv
914.764 124.149 915.323 124.673 915.323 125.316 cv
cp
f
931.241 125.233 mo
931.241 125.878 930.68 126.4 929.991 126.4 cv
929.299 126.4 928.741 125.878 928.741 125.233 cv
928.741 124.589 929.299 124.067 929.991 124.067 cv
930.68 124.067 931.241 124.589 931.241 125.233 cv
cp
f
646.907 138.702 mo
646.907 139.347 646.346 139.869 645.657 139.869 cv
644.965 139.869 644.407 139.347 644.407 138.702 cv
644.407 138.058 644.965 137.536 645.657 137.536 cv
646.346 137.536 646.907 138.058 646.907 138.702 cv
cp
f
662.657 138.817 mo
662.657 139.462 662.096 139.983 661.407 139.983 cv
660.715 139.983 660.157 139.462 660.157 138.817 cv
660.157 138.173 660.715 137.65 661.407 137.65 cv
662.096 137.65 662.657 138.173 662.657 138.817 cv
cp
f
915.323 138.816 mo
915.323 139.461 914.764 139.983 914.073 139.983 cv
913.383 139.983 912.823 139.461 912.823 138.816 cv
912.823 138.173 913.383 137.649 914.073 137.649 cv
914.764 137.649 915.323 138.173 915.323 138.816 cv
cp
f
931.241 138.733 mo
931.241 139.378 930.68 139.9 929.991 139.9 cv
929.299 139.9 928.741 139.378 928.741 138.733 cv
928.741 138.089 929.299 137.567 929.991 137.567 cv
930.68 137.567 931.241 138.089 931.241 138.733 cv
cp
f
646.907 154.036 mo
646.907 154.681 646.346 155.202 645.657 155.202 cv
644.965 155.202 644.407 154.681 644.407 154.036 cv
644.407 153.392 644.965 152.87 645.657 152.87 cv
646.346 152.87 646.907 153.392 646.907 154.036 cv
cp
f
662.657 154.151 mo
662.657 154.796 662.096 155.317 661.407 155.317 cv
660.715 155.317 660.157 154.796 660.157 154.151 cv
660.157 153.507 660.715 152.983 661.407 152.983 cv
662.096 152.983 662.657 153.507 662.657 154.151 cv
cp
f
898.991 154.233 mo
898.991 154.878 898.43 155.401 897.741 155.401 cv
897.049 155.401 896.491 154.878 896.491 154.233 cv
896.491 153.591 897.049 153.067 897.741 153.067 cv
898.43 153.067 898.991 153.591 898.991 154.233 cv
cp
0 1 1 0 cmyk
f
915.323 154.149 mo
915.323 154.794 914.764 155.317 914.073 155.317 cv
913.383 155.317 912.823 154.794 912.823 154.149 cv
912.823 153.507 913.383 152.983 914.073 152.983 cv
914.764 152.983 915.323 153.507 915.323 154.149 cv
cp
1 .5 0 0 cmyk
f
931.241 154.067 mo
931.241 154.712 930.68 155.233 929.991 155.233 cv
929.299 155.233 928.741 154.712 928.741 154.067 cv
928.741 153.423 929.299 152.901 929.991 152.901 cv
930.68 152.901 931.241 153.423 931.241 154.067 cv
cp
f
646.907 168.036 mo
646.907 168.681 646.346 169.202 645.657 169.202 cv
644.965 169.202 644.407 168.681 644.407 168.036 cv
644.407 167.392 644.965 166.87 645.657 166.87 cv
646.346 166.87 646.907 167.392 646.907 168.036 cv
cp
f
662.657 168.151 mo
662.657 168.796 662.096 169.317 661.407 169.317 cv
660.715 169.317 660.157 168.796 660.157 168.151 cv
660.157 167.507 660.715 166.983 661.407 166.983 cv
662.096 166.983 662.657 167.507 662.657 168.151 cv
cp
f
678.657 168.286 mo
678.657 168.931 678.096 169.452 677.407 169.452 cv
676.715 169.452 676.157 168.931 676.157 168.286 cv
676.157 167.642 676.715 167.118 677.407 167.118 cv
678.096 167.118 678.657 167.642 678.657 168.286 cv
cp
0 1 1 0 cmyk
f
898.991 168.233 mo
898.991 168.878 898.43 169.401 897.741 169.401 cv
897.049 169.401 896.491 168.878 896.491 168.233 cv
896.491 167.591 897.049 167.067 897.741 167.067 cv
898.43 167.067 898.991 167.591 898.991 168.233 cv
cp
f
915.323 168.149 mo
915.323 168.794 914.764 169.317 914.073 169.317 cv
913.383 169.317 912.823 168.794 912.823 168.149 cv
912.823 167.507 913.383 166.983 914.073 166.983 cv
914.764 166.983 915.323 167.507 915.323 168.149 cv
cp
1 .5 0 0 cmyk
f
931.241 168.067 mo
931.241 168.712 930.68 169.233 929.991 169.233 cv
929.299 169.233 928.741 168.712 928.741 168.067 cv
928.741 167.423 929.299 166.901 929.991 166.901 cv
930.68 166.901 931.241 167.423 931.241 168.067 cv
cp
f
646.74 183.452 mo
646.74 184.097 646.18 184.618 645.49 184.618 cv
644.799 184.618 644.24 184.097 644.24 183.452 cv
644.24 182.808 644.799 182.286 645.49 182.286 cv
646.18 182.286 646.74 182.808 646.74 183.452 cv
cp
f
1 lw
646.74 183.452 mo
646.74 184.097 646.18 184.618 645.49 184.618 cv
644.799 184.618 644.24 184.097 644.24 183.452 cv
644.24 182.808 644.799 182.286 645.49 182.286 cv
646.18 182.286 646.74 182.808 646.74 183.452 cv
cp
.8 0 1 0 cmyk
@
662.49 183.567 mo
662.49 184.212 661.93 184.733 661.24 184.733 cv
660.549 184.733 659.99 184.212 659.99 183.567 cv
659.99 182.923 660.549 182.399 661.24 182.399 cv
661.93 182.399 662.49 182.923 662.49 183.567 cv
cp
1 .5 0 0 cmyk
f
662.49 183.567 mo
662.49 184.212 661.93 184.733 661.24 184.733 cv
660.549 184.733 659.99 184.212 659.99 183.567 cv
659.99 182.923 660.549 182.399 661.24 182.399 cv
661.93 182.399 662.49 182.923 662.49 183.567 cv
cp
.8 0 1 0 cmyk
@
678.49 183.702 mo
678.49 184.347 677.93 184.868 677.24 184.868 cv
676.549 184.868 675.99 184.347 675.99 183.702 cv
675.99 183.058 676.549 182.534 677.24 182.534 cv
677.93 182.534 678.49 183.058 678.49 183.702 cv
cp
f
694.323 183.534 mo
694.323 184.179 693.764 184.702 693.073 184.702 cv
692.383 184.702 691.823 184.179 691.823 183.534 cv
691.823 182.892 692.383 182.368 693.073 182.368 cv
693.764 182.368 694.323 182.892 694.323 183.534 cv
cp
0 1 1 0 cmyk
f
709.823 183.702 mo
709.823 184.347 709.264 184.868 708.573 184.868 cv
707.883 184.868 707.323 184.347 707.323 183.702 cv
707.323 183.058 707.883 182.534 708.573 182.534 cv
709.264 182.534 709.823 183.058 709.823 183.702 cv
cp
f
724.823 183.567 mo
724.823 184.212 724.264 184.733 723.573 184.733 cv
722.883 184.733 722.323 184.212 722.323 183.567 cv
722.323 182.923 722.883 182.401 723.573 182.401 cv
724.264 182.401 724.823 182.923 724.823 183.567 cv
cp
.8 0 1 0 cmyk
f
740.823 183.649 mo
740.823 184.294 740.264 184.817 739.573 184.817 cv
738.883 184.817 738.323 184.294 738.323 183.649 cv
738.323 183.007 738.883 182.483 739.573 182.483 cv
740.264 182.483 740.823 183.007 740.823 183.649 cv
cp
f
773.157 183.649 mo
773.157 184.294 772.596 184.817 771.907 184.817 cv
771.215 184.817 770.657 184.294 770.657 183.649 cv
770.657 183.005 771.215 182.483 771.907 182.483 cv
772.596 182.483 773.157 183.005 773.157 183.649 cv
cp
f
788.49 183.649 mo
788.49 184.294 787.93 184.817 787.24 184.817 cv
786.549 184.817 785.99 184.294 785.99 183.649 cv
785.99 183.007 786.549 182.483 787.24 182.483 cv
787.93 182.483 788.49 183.007 788.49 183.649 cv
cp
f
803.991 183.567 mo
803.991 184.212 803.43 184.733 802.741 184.733 cv
802.049 184.733 801.491 184.212 801.491 183.567 cv
801.491 182.923 802.049 182.401 802.741 182.401 cv
803.43 182.401 803.991 182.923 803.991 183.567 cv
cp
f
819.491 183.567 mo
819.491 184.212 818.93 184.733 818.241 184.733 cv
817.549 184.733 816.991 184.212 816.991 183.567 cv
816.991 182.923 817.549 182.401 818.241 182.401 cv
818.93 182.401 819.491 182.923 819.491 183.567 cv
cp
f
835.741 183.483 mo
835.741 184.128 835.18 184.651 834.491 184.651 cv
833.799 184.651 833.241 184.128 833.241 183.483 cv
833.241 182.839 833.799 182.317 834.491 182.317 cv
835.18 182.317 835.741 182.839 835.741 183.483 cv
cp
f
851.907 183.567 mo
851.907 184.212 851.346 184.733 850.657 184.733 cv
849.965 184.733 849.407 184.212 849.407 183.567 cv
849.407 182.923 849.965 182.401 850.657 182.401 cv
851.346 182.401 851.907 182.923 851.907 183.567 cv
cp
f
867.073 183.567 mo
867.073 184.212 866.514 184.733 865.823 184.733 cv
865.133 184.733 864.573 184.212 864.573 183.567 cv
864.573 182.923 865.133 182.401 865.823 182.401 cv
866.514 182.401 867.073 182.923 867.073 183.567 cv
cp
f
882.491 183.483 mo
882.491 184.128 881.93 184.651 881.241 184.651 cv
880.549 184.651 879.991 184.128 879.991 183.483 cv
879.991 182.839 880.549 182.317 881.241 182.317 cv
881.93 182.317 882.491 182.839 882.491 183.483 cv
cp
f
898.823 183.649 mo
898.823 184.294 898.264 184.817 897.573 184.817 cv
896.883 184.817 896.323 184.294 896.323 183.649 cv
896.323 183.007 896.883 182.483 897.573 182.483 cv
898.264 182.483 898.823 183.007 898.823 183.649 cv
cp
f
915.157 183.565 mo
915.157 184.21 914.596 184.733 913.907 184.733 cv
913.215 184.733 912.657 184.21 912.657 183.565 cv
912.657 182.923 913.215 182.399 913.907 182.399 cv
914.596 182.399 915.157 182.923 915.157 183.565 cv
cp
1 .5 0 0 cmyk
f
915.157 183.565 mo
915.157 184.21 914.596 184.733 913.907 184.733 cv
913.215 184.733 912.657 184.21 912.657 183.565 cv
912.657 182.923 913.215 182.399 913.907 182.399 cv
914.596 182.399 915.157 182.923 915.157 183.565 cv
cp
.8 0 1 0 cmyk
@
931.073 183.483 mo
931.073 184.128 930.514 184.649 929.823 184.649 cv
929.133 184.649 928.573 184.128 928.573 183.483 cv
928.573 182.839 929.133 182.317 929.823 182.317 cv
930.514 182.317 931.073 182.839 931.073 183.483 cv
cp
1 .5 0 0 cmyk
f
931.073 183.483 mo
931.073 184.128 930.514 184.649 929.823 184.649 cv
929.133 184.649 928.573 184.128 928.573 183.483 cv
928.573 182.839 929.133 182.317 929.823 182.317 cv
930.514 182.317 931.073 182.839 931.073 183.483 cv
cp
.8 0 1 0 cmyk
@
646.74 197.786 mo
646.74 198.431 646.18 198.952 645.49 198.952 cv
644.799 198.952 644.24 198.431 644.24 197.786 cv
644.24 197.142 644.799 196.62 645.49 196.62 cv
646.18 196.62 646.74 197.142 646.74 197.786 cv
cp
1 .5 0 0 cmyk
f
646.74 197.786 mo
646.74 198.431 646.18 198.952 645.49 198.952 cv
644.799 198.952 644.24 198.431 644.24 197.786 cv
644.24 197.142 644.799 196.62 645.49 196.62 cv
646.18 196.62 646.74 197.142 646.74 197.786 cv
cp
.8 0 1 0 cmyk
@
662.49 197.901 mo
662.49 198.546 661.93 199.067 661.24 199.067 cv
660.549 199.067 659.99 198.546 659.99 197.901 cv
659.99 197.257 660.549 196.733 661.24 196.733 cv
661.93 196.733 662.49 197.257 662.49 197.901 cv
cp
1 .5 0 0 cmyk
f
662.49 197.901 mo
662.49 198.546 661.93 199.067 661.24 199.067 cv
660.549 199.067 659.99 198.546 659.99 197.901 cv
659.99 197.257 660.549 196.733 661.24 196.733 cv
661.93 196.733 662.49 197.257 662.49 197.901 cv
cp
.8 0 1 0 cmyk
@
678.49 198.036 mo
678.49 198.681 677.93 199.202 677.24 199.202 cv
676.549 199.202 675.99 198.681 675.99 198.036 cv
675.99 197.392 676.549 196.868 677.24 196.868 cv
677.93 196.868 678.49 197.392 678.49 198.036 cv
cp
f
694.323 197.868 mo
694.323 198.513 693.764 199.036 693.073 199.036 cv
692.383 199.036 691.823 198.513 691.823 197.868 cv
691.823 197.226 692.383 196.702 693.073 196.702 cv
693.764 196.702 694.323 197.226 694.323 197.868 cv
cp
f
709.823 198.036 mo
709.823 198.681 709.264 199.202 708.573 199.202 cv
707.883 199.202 707.323 198.681 707.323 198.036 cv
707.323 197.392 707.883 196.868 708.573 196.868 cv
709.264 196.868 709.823 197.392 709.823 198.036 cv
cp
f
724.823 197.901 mo
724.823 198.546 724.264 199.067 723.573 199.067 cv
722.883 199.067 722.323 198.546 722.323 197.901 cv
722.323 197.257 722.883 196.735 723.573 196.735 cv
724.264 196.735 724.823 197.257 724.823 197.901 cv
cp
f
740.823 197.983 mo
740.823 198.628 740.264 199.151 739.573 199.151 cv
738.883 199.151 738.323 198.628 738.323 197.983 cv
738.323 197.341 738.883 196.817 739.573 196.817 cv
740.264 196.817 740.823 197.341 740.823 197.983 cv
cp
f
757.073 197.983 mo
757.073 198.628 756.513 199.151 755.823 199.151 cv
755.132 199.151 754.573 198.628 754.573 197.983 cv
754.573 197.341 755.132 196.817 755.823 196.817 cv
756.513 196.817 757.073 197.341 757.073 197.983 cv
cp
f
773.157 197.983 mo
773.157 198.628 772.596 199.151 771.907 199.151 cv
771.215 199.151 770.657 198.628 770.657 197.983 cv
770.657 197.339 771.215 196.817 771.907 196.817 cv
772.596 196.817 773.157 197.339 773.157 197.983 cv
cp
f
788.49 197.983 mo
788.49 198.628 787.93 199.151 787.24 199.151 cv
786.549 199.151 785.99 198.628 785.99 197.983 cv
785.99 197.341 786.549 196.817 787.24 196.817 cv
787.93 196.817 788.49 197.341 788.49 197.983 cv
cp
f
803.991 197.901 mo
803.991 198.546 803.43 199.067 802.741 199.067 cv
802.049 199.067 801.491 198.546 801.491 197.901 cv
801.491 197.257 802.049 196.735 802.741 196.735 cv
803.43 196.735 803.991 197.257 803.991 197.901 cv
cp
f
819.491 197.901 mo
819.491 198.546 818.93 199.067 818.241 199.067 cv
817.549 199.067 816.991 198.546 816.991 197.901 cv
816.991 197.257 817.549 196.735 818.241 196.735 cv
818.93 196.735 819.491 197.257 819.491 197.901 cv
cp
f
835.741 197.817 mo
835.741 198.462 835.18 198.985 834.491 198.985 cv
833.799 198.985 833.241 198.462 833.241 197.817 cv
833.241 197.173 833.799 196.651 834.491 196.651 cv
835.18 196.651 835.741 197.173 835.741 197.817 cv
cp
f
851.907 197.901 mo
851.907 198.546 851.346 199.067 850.657 199.067 cv
849.965 199.067 849.407 198.546 849.407 197.901 cv
849.407 197.257 849.965 196.735 850.657 196.735 cv
851.346 196.735 851.907 197.257 851.907 197.901 cv
cp
f
867.073 197.901 mo
867.073 198.546 866.514 199.067 865.823 199.067 cv
865.133 199.067 864.573 198.546 864.573 197.901 cv
864.573 197.257 865.133 196.735 865.823 196.735 cv
866.514 196.735 867.073 197.257 867.073 197.901 cv
cp
f
882.491 197.817 mo
882.491 198.462 881.93 198.985 881.241 198.985 cv
880.549 198.985 879.991 198.462 879.991 197.817 cv
879.991 197.173 880.549 196.651 881.241 196.651 cv
881.93 196.651 882.491 197.173 882.491 197.817 cv
cp
f
898.823 197.983 mo
898.823 198.628 898.264 199.151 897.573 199.151 cv
896.883 199.151 896.323 198.628 896.323 197.983 cv
896.323 197.341 896.883 196.817 897.573 196.817 cv
898.264 196.817 898.823 197.341 898.823 197.983 cv
cp
f
915.157 197.899 mo
915.157 198.544 914.596 199.067 913.907 199.067 cv
913.215 199.067 912.657 198.544 912.657 197.899 cv
912.657 197.257 913.215 196.733 913.907 196.733 cv
914.596 196.733 915.157 197.257 915.157 197.899 cv
cp
1 .5 0 0 cmyk
f
915.157 197.899 mo
915.157 198.544 914.596 199.067 913.907 199.067 cv
913.215 199.067 912.657 198.544 912.657 197.899 cv
912.657 197.257 913.215 196.733 913.907 196.733 cv
914.596 196.733 915.157 197.257 915.157 197.899 cv
cp
.8 0 1 0 cmyk
@
931.073 197.817 mo
931.073 198.462 930.514 198.983 929.823 198.983 cv
929.133 198.983 928.573 198.462 928.573 197.817 cv
928.573 197.173 929.133 196.651 929.823 196.651 cv
930.514 196.651 931.073 197.173 931.073 197.817 cv
cp
1 .5 0 0 cmyk
f
931.073 197.817 mo
931.073 198.462 930.514 198.983 929.823 198.983 cv
929.133 198.983 928.573 198.462 928.573 197.817 cv
928.573 197.173 929.133 196.651 929.823 196.651 cv
930.514 196.651 931.073 197.173 931.073 197.817 cv
cp
.8 0 1 0 cmyk
@
646.99 213.118 mo
646.99 213.763 646.43 214.286 645.74 214.286 cv
645.049 214.286 644.49 213.763 644.49 213.118 cv
644.49 212.474 645.049 211.952 645.74 211.952 cv
646.43 211.952 646.99 212.474 646.99 213.118 cv
cp
1 .5 0 0 cmyk
f
646.99 213.118 mo
646.99 213.763 646.43 214.286 645.74 214.286 cv
645.049 214.286 644.49 213.763 644.49 213.118 cv
644.49 212.474 645.049 211.952 645.74 211.952 cv
646.43 211.952 646.99 212.474 646.99 213.118 cv
cp
.8 0 1 0 cmyk
@
662.74 213.233 mo
662.74 213.878 662.18 214.399 661.49 214.399 cv
660.799 214.399 660.24 213.878 660.24 213.233 cv
660.24 212.589 660.799 212.067 661.49 212.067 cv
662.18 212.067 662.74 212.589 662.74 213.233 cv
cp
1 .5 0 0 cmyk
f
662.74 213.233 mo
662.74 213.878 662.18 214.399 661.49 214.399 cv
660.799 214.399 660.24 213.878 660.24 213.233 cv
660.24 212.589 660.799 212.067 661.49 212.067 cv
662.18 212.067 662.74 212.589 662.74 213.233 cv
cp
.8 0 1 0 cmyk
@
678.74 213.368 mo
678.74 214.013 678.18 214.534 677.49 214.534 cv
676.799 214.534 676.24 214.013 676.24 213.368 cv
676.24 212.724 676.799 212.202 677.49 212.202 cv
678.18 212.202 678.74 212.724 678.74 213.368 cv
cp
f
694.573 213.202 mo
694.573 213.847 694.014 214.368 693.323 214.368 cv
692.633 214.368 692.073 213.847 692.073 213.202 cv
692.073 212.558 692.633 212.034 693.323 212.034 cv
694.014 212.034 694.573 212.558 694.573 213.202 cv
cp
f
710.073 213.368 mo
710.073 214.013 709.514 214.534 708.823 214.534 cv
708.133 214.534 707.573 214.013 707.573 213.368 cv
707.573 212.724 708.133 212.202 708.823 212.202 cv
709.514 212.202 710.073 212.724 710.073 213.368 cv
cp
f
725.073 213.233 mo
725.073 213.878 724.514 214.401 723.823 214.401 cv
723.133 214.401 722.573 213.878 722.573 213.233 cv
722.573 212.589 723.133 212.067 723.823 212.067 cv
724.514 212.067 725.073 212.589 725.073 213.233 cv
cp
f
741.073 213.317 mo
741.073 213.962 740.514 214.483 739.823 214.483 cv
739.133 214.483 738.573 213.962 738.573 213.317 cv
738.573 212.673 739.133 212.149 739.823 212.149 cv
740.514 212.149 741.073 212.673 741.073 213.317 cv
cp
f
757.323 213.317 mo
757.323 213.962 756.763 214.483 756.073 214.483 cv
755.382 214.483 754.823 213.962 754.823 213.317 cv
754.823 212.673 755.382 212.149 756.073 212.149 cv
756.763 212.149 757.323 212.673 757.323 213.317 cv
cp
f
773.407 213.315 mo
773.407 213.96 772.846 214.483 772.157 214.483 cv
771.465 214.483 770.907 213.96 770.907 213.315 cv
770.907 212.673 771.465 212.149 772.157 212.149 cv
772.846 212.149 773.407 212.673 773.407 213.315 cv
cp
f
788.74 213.317 mo
788.74 213.962 788.18 214.483 787.49 214.483 cv
786.799 214.483 786.24 213.962 786.24 213.317 cv
786.24 212.673 786.799 212.149 787.49 212.149 cv
788.18 212.149 788.74 212.673 788.74 213.317 cv
cp
f
804.241 213.233 mo
804.241 213.878 803.68 214.401 802.991 214.401 cv
802.299 214.401 801.741 213.878 801.741 213.233 cv
801.741 212.589 802.299 212.067 802.991 212.067 cv
803.68 212.067 804.241 212.589 804.241 213.233 cv
cp
f
819.741 213.233 mo
819.741 213.878 819.18 214.401 818.491 214.401 cv
817.799 214.401 817.241 213.878 817.241 213.233 cv
817.241 212.589 817.799 212.067 818.491 212.067 cv
819.18 212.067 819.741 212.589 819.741 213.233 cv
cp
f
835.991 213.149 mo
835.991 213.794 835.43 214.317 834.741 214.317 cv
834.049 214.317 833.491 213.794 833.491 213.149 cv
833.491 212.507 834.049 211.983 834.741 211.983 cv
835.43 211.983 835.991 212.507 835.991 213.149 cv
cp
f
852.157 213.233 mo
852.157 213.878 851.596 214.401 850.907 214.401 cv
850.215 214.401 849.657 213.878 849.657 213.233 cv
849.657 212.589 850.215 212.067 850.907 212.067 cv
851.596 212.067 852.157 212.589 852.157 213.233 cv
cp
f
867.323 213.233 mo
867.323 213.878 866.764 214.401 866.073 214.401 cv
865.383 214.401 864.823 213.878 864.823 213.233 cv
864.823 212.589 865.383 212.067 866.073 212.067 cv
866.764 212.067 867.323 212.589 867.323 213.233 cv
cp
f
882.741 213.149 mo
882.741 213.794 882.18 214.317 881.491 214.317 cv
880.799 214.317 880.241 213.794 880.241 213.149 cv
880.241 212.507 880.799 211.983 881.491 211.983 cv
882.18 211.983 882.741 212.507 882.741 213.149 cv
cp
f
899.073 213.317 mo
899.073 213.962 898.514 214.483 897.823 214.483 cv
897.133 214.483 896.573 213.962 896.573 213.317 cv
896.573 212.673 897.133 212.149 897.823 212.149 cv
898.514 212.149 899.073 212.673 899.073 213.317 cv
cp
f
915.407 213.233 mo
915.407 213.878 914.846 214.399 914.157 214.399 cv
913.465 214.399 912.907 213.878 912.907 213.233 cv
912.907 212.589 913.465 212.065 914.157 212.065 cv
914.846 212.065 915.407 212.589 915.407 213.233 cv
cp
1 .5 0 0 cmyk
f
915.407 213.233 mo
915.407 213.878 914.846 214.399 914.157 214.399 cv
913.465 214.399 912.907 213.878 912.907 213.233 cv
912.907 212.589 913.465 212.065 914.157 212.065 cv
914.846 212.065 915.407 212.589 915.407 213.233 cv
cp
.8 0 1 0 cmyk
@
931.323 213.149 mo
931.323 213.794 930.764 214.317 930.073 214.317 cv
929.383 214.317 928.823 213.794 928.823 213.149 cv
928.823 212.505 929.383 211.983 930.073 211.983 cv
930.764 211.983 931.323 212.505 931.323 213.149 cv
cp
1 .5 0 0 cmyk
f
931.323 213.149 mo
931.323 213.794 930.764 214.317 930.073 214.317 cv
929.383 214.317 928.823 213.794 928.823 213.149 cv
928.823 212.505 929.383 211.983 930.073 211.983 cv
930.764 211.983 931.323 212.505 931.323 213.149 cv
cp
.8 0 1 0 cmyk
@
3 lw
643.823 221.817 mo
932.491 221.817 li
0 0 0 1 cmyk
@
932.823 223.149 mo
641.323 223.149 li
641.323 3.65039 li
932.823 3.65039 li
932.823 223.149 li
cp
.5 .9 0 0 cmyk
@
0 0 0 1 cmyk
ZVVWZC+ArialMT*1 [16 0 0 -16 0 0 ]msf
815.228 170.43 mo
(slip / no slip)
[8 3.55469 3.55469 8.89844 4.44531 4.44531 4.44531 8.89844 8.89844 4.44531 8 3.55469 
3.55469 0 ]xsh
670.725 93.2627 mo
(no slip)
[8.89844 8.89844 4.44531 8 3.55469 3.55469 0 ]xsh
855.392 93.5967 mo
(no slip)
[8.89844 8.89844 4.44531 8 3.55469 3.55469 0 ]xsh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/ZVVWZC+ArialMT*1 uf
/ZVVWZC+ArialMT uf
/ArialMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 13.0
%%AI8_CreatorVersion: 13.0.2
%%For: (Shanon McIntyre) ()
%%Title: (diagram_all.eps)
%%CreationDate: 5/4/2009 9:14 PM
%AI9_DataStream
%Gb",KCO=N"e+!7Ff>W4NZp6UhOgI/9J_N[%,U=[e6>9(->9PVZmE.>OkL[I)]0!'Y/_a0rFW??3*09eI1HXc*ak*`J#*XM6gOEQL
%r,^3:G"`9mKn^P$L)%4"^:SjmVs]If1u6<UfIZ[RYFsk[(5)<H`<fcS3]Rr,F@,?I(pkZ'EIW@t%,15b<$1`:alo<nruC]k^$%Ua
%M2XB5Y;c5ee9Y!hKANL`k`;ES2<dTD]d*KuiFFq7FlUb@Ms:uM?)u_<>D(uf)B3,(j?Un;=.=;YS`c3Cj#FS^36^?#p5UBiEWha0
%;Y[_S5O#Y(P>6K*35qF9B5i:;YP@S]LVn@!#$/Op(?/?OHh0q/&A[kEp%CiP^,m5\dC;:%s*dTNIh\LaHdOh8]QF+0CUe7.#[BUc
%JJnVVK'>/qIP]`^Ga?5Uk$!N"QkboF:"^P:m)G[c)*c);-Vbq"Wlb%?qgUl1*<_+6GnU$adYj<Ur@YBRn1,3#fc,%m*je\S[sAW!
%D=X$Yrg#-rU?$_b#$Di9-:mSg,;A@#n:!=m*%-n^36D.RmN2mEEC@9AgGP@0EGCSX2MdU\\fa^p$I:[/:ek\DLa<;G;/cp^*I2Z'
%!#B95l+ZW[mqm[sZV[g]j.tF$(XKRM5lBV@<!)G7U`YFEO?O`+IDR$nWkOg["PU)(.-EQN"Yo=5?!s47#6ohN&Z$BO6GF+lUO,Jo
%fetD+5=Y&3Qj]2drtrZ2Sqk(u&:`<t"D&#!)8iM6iDmn9eQ.TP(Yq1aRs?'(niUaNH.^@4=tLXL%'`MD@[dr.na9hAc,($]iEu@!
%S(6iWXBrrMof?EYf<J&NKi_J1cf<hc/SrdKM,"+dJ[3'^bUK](=1ZZoFN6=VL32BmCkd$D[Gi);Ktjl%&r"(\mDKL^)<o#qp^)eo
%h`-j.Q5CNs_V^l,quac+(X=LT.PSYM8/hKI2Q[b3BU(RJK%#=<JlVSMF;<:5!X/?$4#&riSsG8&Lk"%cBuJmgPZUIB\[Wt&%fa=V
%80b7D@#aB/1u`HOKEMWB^u#cM"Q=98L,@n.Z'[j_"EO_N3%)fL8"Lu_Q;4)$G`U)Po8#>WH9hO$?D&WW(1Yh!M'hj*gE;%mUIZNr
%/gqO&O[f8.c%N/CNIigX1]GBP80E"%.47h&lk=FG8LJL)Tcpu,a:"+B6:"41CFcnJn.WGN1CN>bjCr%Y5(PmUU\Vmu@K:CRr0,20
%72:t;em:%$%+4)7KIEbP0D[qXdb[sLLfp\u#Y?Ba80sCB:Sin)5@&-cFh/KI'=!aF:K^$J'$<&;(g(mf/<g+OGA/NYq9QLgV=\'k
%"0]fGV=3CcFE_!k9&ITPh\Vp6GO[<l`9/7>ZNp&.[43f*n)@]V-9e?riZE8\1^#4T(]TpunMu"6s%N)]g3Hpjr%6K$I&9^!*GMmO
%]&Qh.^Bm,aC,#Cq_;@%5d!ZZ<*<IsA?C.MEkPii$9ji&V5,2odI=B;\^13?h\:37PnF$(FeM(EJ\C:kUC0:*5]#.`i(IT*;`OXoJ
%OS:!2k?c=26)5e3KP(%_?dHsMjR3,_9=XthIK]3qVAlsOQq"an4ReKBeZdb2re%IKrhYp,#D(h`=T`QW-iHPW&'FnT$lLS>6EP!r
%l1"#,=_BGrVE_!"Mc!3oKgnN=(B![iF"W7EB>DaN;@j*_^mF7+MEfX<YiK)*a&PSB"B`C<M6h3qADb;(G=$cD;?6?E^8"7cA)>?9
%jHg71=pNQf<!ol,3ED]"[-k_6>E#US_%NiHOUj3sk=U<N<2o=HI%JB&quPpe9KDZW`NXnq<LCtYf,;+Ph]:+%>5NHVmeNnIk9nd:
%"m^8,5e8TtDK+F(<gJp7*o`(S*j#lcr`<6H`CXJ<MljOM4OGM5JUJje`YTV6/T*%Ne2k#/\NdIh9'_u)AR+2qE5<jk"ggDd?+L>I
%1r&J11`6R-(5m!(Nja]Uq'f.=]d$0EPQ=$NBKhe7>XW&XHoo):$L1WT,>[NDWGCUt_qau?lR'Or/!Y^jQ7E-@C)Q)t'Ju$gQm`-E
%DIT$bMg*k2Ddq-leHE\j7'er2RTf)TY"(jJ$`3+=Zo0R_%gDO2l=uTLIBOl%e<nEG@=8Y4Q%<loYfa]0FUqROCZrCPA"1u&b]nDA
%)"i*9ODt3c)>iiRe*n;okX*c,57Q4>?2"t[kM793Z@1>JD6ATW&j%9cD=A)M)KNk_mHnQDi@c/`ET$qD^gO_.XM+Ao/tg:@(=C'@
%I1I=FL""_Bna_c=E<@D;65^OSd-m8+)gG0dOY.&P$6ET\=l\_sEE8`)n@$]dF-R?e+_P6>>K#:GbN!_*ljRL:a:lJ0OAfI,3T?/$
%WU9r']Wt-XTt\]1Y6fePHHgTgc1CP<V<?[n:EPn$2TO:1g!9-[dh-^V(#S8I*pX)3*oh[2S[Z-&#Lg\-es7uf8WcM\f(h!G4T-i%
%;c1c?V\f7BhL8<a^Y%"^3U7`DkddpQVfc&`6l*b>R&?iu,0q)Wnarcg+p";js$aU`G&JRC8J%+#"@YF8)=#mJTjQ9F5VCrY'^/;,
%3q:Bb"K+CG>$=So=5iY,COU#4>J*#VB&#XWbVCaRXbOfJ]gpNuI,)pqB=3'bHQ(5rX.SG:EG]<S\<t"Z=oc-]M3Y!ZfVTClV#)bB
%6i-4l7ceoAl,iPS$2H\^R.';$&dM)$pY:-;*-5DQctX\?SZ_9EnN:.,GE0E0m-_O1DY@A(aot*2Cd)3mN"&?iVX#ORFd&mfEREd"
%FOG<jkqRo@](0nD1FWK+SphH57J]2bor%D,=)&_0I4Eai(s-JB5L!_V.T)L0A<dk)+aU$,7dj?Ba([!9&e#/'^k&ED4dnO7n&dc6
%>(Z>=Ek%F6*b9[_+tlW@/'J$K6TjFGLg\bE4L3,Z&?D3m$85OA`3cqmjU*;'4O1kF%;Qp<gWWh?4`[Q\mYh&B['9rleaR?S^WIcp
%QPWeeC;41uK!O6>fm1;V+dRK^:$fs#a/Xh(KAs\.W;4/:Bdd5^O=#04gugB*r[uMEGYL&,C+.O3=Q;I*]<@-GLigR=kP5/'bE+,C
%9LoL&=WiI>mR0adAZ6a__27:]`".NNosCqV-/=*_X7A<\pY=$r=Od>p[!U*po0jAd/@eNiLb<FaOUI!pk6ktbVcKEP5WGn7]M",#
%F[`2BYc=9!#.4B(@\s<V`&9%Lq*4.*R>[J+R\(+(!Te(CHX5"dV6jlbPW5M3V`Xs5#G1j51B^DOKORJea+Mh<:k3A4jL_DB7X`;B
%aE_X9oh0?(<@EC@9$9l95_KB9p7jLe2V$c,cQna@<_$+ZE;G!o*M5L4TM-af,7.<;e:%0k/,M?Q$K07sm"Kqb_If<g],Y8X?(YC0
%"_<hG8cP"nV=33Sk?j[+T8Ea3\qeth/b:Tib*c)A/V8tPIF^e7$`'SkeZbJ1@_#Q9f>WJJN>lC,/t")Q-Kd1uM]Z@[1=;V-F/L9%
%i/=dir`QteV8?h1J<oc`(ad>[KA:\0-K[2UZ_,(E$5(1**dU#T'?^?FoBn3A0'Y?$C;o;2Jj49KCX*H0JD&"pGs=&,0Dr`\J/jqW
%UJ=+/h]$0-G)*Qmc$fm.Crnp-K/5VoLZc(`@BP5ncl9Wa=47]Xg0m+8%'P'Qp<%S1h"c:P(rrChs*ZOY6>u%8&q,`/CtML(OphbW
%R9GO/BGBp*oEImr0;+kG!K2<<mVp[0l$#29qtG(Shr+?+]:6/TB.(CfT:KD\N)'\B;:P($*4DVQd,0+5l1Xo)^%c-NZemSj`t`)/
%!64&K-f+Np@l5QN8fu!Jis@uk4)r"KND=]W1]B<#p,_`h3/K]d=d4;a_+%@eMU$j!V_]1aimF]?5\RRsVULM<TQk#6N.t1Kf\nhP
%m7EJZrUsn!i9_L3K+Du%3(g?$B6h<'[GP[/L7dRp8`q?_lh7r=kjI1e_#J:6lLbDBS^Yp&e%!/VnACU>Z*SKe[1Ouu.kK,oYW!Fc
%ccKj5r+RjR!7SN3A7p:Y`3K.Q[3t!ZkA4U0!ScS;:)hcVO4K=Qh-LU;@qX.aHN6BFdAT4mEK#JL0E++k''OstSjpC,0o#ml$nJ]/
%Wa$TQW2c5iWi]l5n@,ErY9F!/e`KV4U9N,-h05=#1Q9c3\i3X(-_f-)0uXg.bnJX)3Bl8Ec6n9Rp-jabd:$DJYV0tL=8gDk]lA8K
%qn07"lCgna,_B?[c7cTN03,27io8AM+9?25P;A<Qj5+Gs&edc':SdZD`70nf,i\0Higi!4,8T*F0m]@5L7r),Y:Ee!7B<RL79?mR
%JK9.niBT4A&5E>0_a$+WrArbq>m(FF9LRKhQt_`"B;56M(73(3)4q4_jgu`gTi[krmaHAMUWHYdcZfqOF@D_njbBYcD\)>>p-%H,
%49qFKLOQj&YT:;%Np[teHA.C[G)Q298'*#?qE,IE]418R0\ZW4Gg*SXq2eqkhAu58E:Ip'QjfVZ:Bjn7gT#E$a0BUqNDGO;%kPZ_
%Q6B\rUER2KFLV.0J<d&p]X;:k_p;u9K3ibDV?YNnlL,oa*@2h#5j84;?ZCE$]d4g"lYt8ma$k_D^pCgJJ%mWb:*u`7j(L.1.3rI,
%GtATT9u`pRKpb=dcC4ed?JNB_&NE0TY2O*(SMu#CFZ%R:^."o9oqE^,8)bWLr<2!c$$;Z?=rt]:959@;*Z&<->c<j(^B7cOihW(d
%S.5"#&``@;)Bp#&[^;>hn8H5mKB,^i%1[7K5K:CQ:g3o'!V^%#&gbF^Wn!%(;.B#&C2@dU%O/-#;q?iDdU?E<S%<1dhHk"S*M_3;
%><G[-Jb@(XE;Y1/&J5SlJgk_j@'XXEf&?/[O&s&Jn?gk`[-FbsWs\Z&d.1CIbAB6kf!8L\bA=VUc"<_RDq:B-B%RN\Ia`)D9rH+%
%G112p&:lbZNCLTYCK)6]"!V?5b.WPaE#Pfd2lqa:Dq1?M7_N-3eZ8AI*n:/"=*Nt*S^m,=<B"]q>-leYeSDQr[2.>FRU>Z$DU#/c
%RU*77OF'u3eRl3dX]K;g.^+m.<Nk[gSLU\oOLLU=__o>$=:]1LUC)Y#&&$=!SWJPKBSDNm"jN\Pe:Uq$%Di*a%/dmKgqX4u?jB^4
%5sI$Hi>J)a+8Q"6?sLd4R;_tgDgF"=kr$,b=7`FukQRRHH(O=^*qO3onc21hjYkqL>Bak#eIC=7nhe[8?,pNZm96[W[%+#BE9^3C
%WB)2'!ZfU,*QMTKm9#Cj>-,gaXNkR^b!H:l17rj9AI`4oAe<VL/\>^Um(-K/X*/.][VpN$CHFG\D;2?jX(=/jL/k]t(?EJ9@/6+$
%\X$_[bI/r0E&:u`9iqt5AcgFT+PZN^5g=tu9n"Aa+Z(sW^T/Yc4OCdRV?'a0LA.LVdm,dH.4k!D]rh?[[FRm&S0Y>3nCi0)CSUCq
%e&'l#!fS=^6<rR4s,`-o$8[Pq$8dVs$8m\u$9!\u^3KB!(NC#W/)P>4YAmu@ECYRMOnZE=UYqp24'_\\!DishATC4QEFihSA(Yr'
%K$5;N"'#Gg"(*1+U&YToic.CQ<H5O[0Wm/h<uZOT>^9LXJXTi#i-"-CY"Wu@:c5CT<N]H`(%@PC?_2YUo&[q/P:mk^0VZfl0n#Jd
%X4@n:/fqh$^]]o'q#f_u5`%U"V?#,G$L1UrnsVip1dUMF:d537ci\D!YcJ8u=m&Ilo%L/Kb0*&,>u5JNb7K%3UC'V"#Bhu*XW#80
%(]YK`JHH)WF:V&4!%+G_cbS.`Z-?I1j(JJm%-U"r]t+^g+W!K'99""m!Sdc@!_4if?O$Etc?jg6"(!-XTc.Q_"',t6'%Rauf&eLM
%J7LXDp*^#,QO/n9.[LiSRKf*%O<lMZ-s\64-uCAT."*Lt.#fX?]VYk\MioPl/!a=o:fG*h5G=>>^Eln/ilcj207_n7csIU]fEZg7
%6*G(>Ns<[8bJJTFCs[V9XFLQ,+98H="m^[hg]6&3[L%,p#5dA0*V$:[#8STcb>JKO;[4p4JH?Z0Cl]#`a8oN+JP?Ke3`X!gU&6`t
%2_E&QqdkC#F24Au8Hd3PJ;($b+T*?t%B_?9f*!U;K/J<O?l(u1Nrdm)0]QOql`_.!c6X.*W=;lC#BIZ#qI"(@Ydd\<I1I#+FJd0*
%BnBUpKY^!mKY/GIn$)lY*J+_*8`:T7i4=ho2fffbKGhas"<']IKc7oK"l&4LB7sO&;8?sP^D^A$RsZe^0'k"S..HTGG9HN+p*f\a
%qC)7B^\atP<M7A)<2`)]m!E\_5]o>G5a?;M/YEfV(*Lh!2*u:U#ZhR:&QFo?QQ`%NW%+_sW%P#&Ub\l*W&CS6<H7a=[i>j[5YWk\
%6A[72#T-Vh;C7GD&tr&D2`3Ih<"3`25]X]bR9[9n]bi\B6H)',b)35;.2o0hK,[LXDPV5Vjg`/fgu&O9e(%2p]Y^ZR$:i6/MFU8d
%eVthb',GH%U7&56@l;21ADI0Y"\'Gi<`n!_[)Bfs$Yq<[0j/$qPK>:I]*s=UD/LcVXBT>AcdFl?p/tL2ZHjBr%?.<,/"O)qA>PQN
%jqbN_AYF241G5P:T?0,%gKYP<=^#C6/92l8Z*;/WKn4lt0\2DjVL44;LnYQ#ar!'o/EAH@cour)r8mJcOp1Q2hZRb:TthIO(,Q2b
%:ElsAF"sY6;5nSBU;3GCT[7pgE):XQG[Npb$_W2_`!*+dU-64[FY6Q?<%(cj(G-=RT<G9<7Ec@BhuL:VYf\@i4RV8Sf+@He(H`DF
%O@tV["jl<#`7`'4dH:"38o_3n&nss><^:#YBWSA?Yi+]kfX^2t1T>GTlEj]ZL)!Bs<<^mD%&9Y=e]]N]=>I-lA=3jOKq[V*QM\W>
%pQ?]oR6LA<0))9&$P"f"aj7[X\Hf9Yo.(6R35=Kp1FrqhKT05aD/PFe^;qmDQCBu<W,q!(j,lWm`s;])dlo_@*fhKbrXoP<iX540
%&2tabgnjOCUrfBpL5>kTUf%T]JKc/MKQOCHO(uUk#?N$-*fkQab>Bpi^$M_b2=iTPQ].r1]Q+,YF3][3WlICj-5hOQh_`#'!M+:;
%Atp)B?=I?^"EcU(!3mZr'@aR0.&.MY*S9fI$><54oB\p4--!:t.EAW:VA!W6k?d:6!?^'mCL.0$a>)<]dL.#A.-eBD!Ft(*Q</&g
%hoZ?_YDjAd4q,?5JM/-OL7\+b?7VH&^OX(nhGec8(5Pn*b#=chX?_&GEUdagn`gL8f?P%9)hh@YV`%:gj7E[=]aGmoD6f^,[WA^Z
%SP@XP;mk@Zm5E@$\Z4Ite)]h3RV_\'2uBc8i4eO3o+aj2:3#EsP_m[kVE/'elt[<r^8)m]+N#jXmOC@F.o/do1Ud!Q:.Fd+35cK_
%nVE3%@V&rm'oo*U<_P`^pj6E./V*::,X$a=Y<Rrk:Z:cW!;afVN'64gn#"LCK(.AFW0hQOrfBJb]D-A\r%-2/+&2U,00\b:&<ZbW
%eODd>?ahClPoF2;9ZP0g#<.Q:`q@-p6>Jc]N<79c_mM!'JcRSh!C<J#B)5tA<^HbS$_u"ZGpB1WR0"BJ&@Xe-`27"s9[)^$Je5jj
%Jp'!_ZR\f78XcVo/l;!fR.,-N("mlXk&o"@-P)mj]_`VHQ73Zh*&%tR+=D7\(1Vmsmcm%bW%cP\6W*S_@&A98V3_;m-t"[12QV&?
%a)s=8(<TV^)U-":Jc/F9!Tl(AT0U",#\NXZd$9F0Y.6g2F.O@TVTU('CkmgG^uZ-'1@t]Q+>R9eJ;cL=YUbEiJ5uj5C#W/i#oPp2
%3X8-FGOn:o&OnUd&<%JlJK)ZJ_0DHPX^Jb%bc-8u'Ro>9"4DPA'?,pm:JE8DLU@NKK0C-gZoN1]b9K8>_kcC5R,s4gAi%m[MZ>Rn
%<Yua`"nG)%Z11ueN*s7YbcA7N*@go2h`R:_2bu=S&4[ZC^MV76+fIU"U_%pcHp?)2e!A<Zc$&^Tjr#B$!15dR=PuTdi8E8gFb9#G
%Y_qOrTs>6(D]VU@41"jp:1-89.jbB+B2X.sSKqlM"*$]h99#)to3cmrrq).Ai5dUrpBG)-(SmEiCF(?iTXf=.iL:j)QMpU>qnP_<
%@$!^5l!UUpb>PQM%7Z(j=7;Xebk0Hi^Cj_ok7[6:!>4]*])ec:Z:;AI&.C=%P(`5f0VBn'^0G^32\2e[c'.mPRqFM"&sm<.J#3=7
%9/h9$*^/]p_*'ZS-5`)r$NalB+i.3`>n'8hG$".&$dA77B*bDI3h&2rmSnHkjl*ASAa[E@b9/l<k16j*'Y(1Gaft7!h/e.8m`SVX
%p<cCb-?mfHR#d2uT#U#2mS!s8i.F7HI3()k4i]XW>6msJ(5'Y_=9em<<l%a&=9lnf&9eH8eR?7b^kL][=7;Xee9c71!"j5.*5BBc
%7e0X+RmR><)S[jnNOAGbhiH(B%c'MdN=G(%("9*jg@tHmQ1$%DmnC'?r7jPJ#29/HDj;GQbQr$XO[1s[*81lra$t\#C@L%n3/#\N
%jU/L]c9->4:*7m;a*c,>?*o7RLMm?$W&t96@^tOk&g]0)(rcZAO2F3ck?4*9dpe=;q'_B"SJ,*<(g=Y970+>'NapQRC.s]jA%Jn=
%!pKNK<[,o`I)j=!*C`"#r*\GTIG$fgI>dlUEN[OuEPW6;h*rMHPlP'kBP`B]"2.=bS!Ia0,M0LD_$>OEIKGOcb/VZ!klTa$6qb]0
%LhNHH7_hRI$j[)')h=kX(*kjZBFD8:Y#TJDcm9HqXrIK#%WaaAO[p5j*)Q>b>QV;9_[o@&LMe5Cbd-<FTudQt%VLZ9?lfKu#+HgA
%#Seo[M"LdZB^#N":Ggg<-l`%,@/qH6!CJ@['YKP&lXCcGb/V4gd?n?M0,o83kt%K/3>)RuWhq$1>Z$I<\h7t-A]P5_Mn+7'TMohA
%9tBt`i&`nWk/k$?*(s-6E&99hDYbN9&3;EE&TnBg#reD9(F6h[o#KNN&E6c-bEE!9#EnBq,rS>O@g?b%TOKE$(is4lRh8tm-RDA$
%1E^!CJ0@kP!+%&mHQeBaZS)=f6X.^/j"\O2&<&f4@/75J!E/_IPX'c0&f<U"01F\)S9+m13(X7%4-Wto&);uejG\WrWLNrlTeCCq
%[bs1H*L""YZa)WO^uph>]0SK`(RPi!^o)`L(a[?"YZD=A._&,;"'@rJ_Au-)FraYX%,mo?8<c9XFlaa+'+j>/83d]lE_/++&o(r1
%4/3c5'GnMM.qP:P12.b7@CRTpD4JC-)F=H0Vr6"'3_Z7[.NrsUToIFIEn$7]&gBhR'iuuCCC8XF3$J6`3(^@[(7l*MN_M#5E88m'
%pnDU;5i4GUnS%bF0H_Pj1hpcYOO;5(Q7jZ[78PUf<[`NZ)phhRBe=og;pk[:DTT>iCU'9.4PQ2j=JuaF"?_0#H7osHJ<0b5`(+77
%4O?K[k2IAI,6YNBZu"10+OD8`YUs:P78&I>BRl_8^mO[_W)Ni^\\:j7b4?l4FHjM41K#G_#Y&cA3<0gKRoj9+KL4TNif+6nZlB)<
%hG_>rEnNcj5c(Rs5[ITT.Vl>3";c$@NL;1LCu`MWE'j@F9,K?rm+\*Z)/S&4FF<_E2S%]fUd`98BKdd>q_BL`l5^!19MKm!\,af@
%P#Ldj"YeHu7p&2%'HSdZ.9^`pJ6O9]:?Yp3fI$Q:^kNbGW3HlL!O4E<o&,-5g14[^8;%+t[3c>nMNn29;/G@8&iXK_nUAJDq5L:2
%(%U1&"Rc+4aT5a/+(?].kQTF%&Kh+9q.+Ri$m^Z2\BbEccP<.)mpNjdbt7EO1'j"C;NBZ@ND(@D!;\$V]G9.\"?L/7a/KY54-0rB
%Z8O]ff!%Qh&NGF_I\RU2A3QcNrA;5cE<M;<"VaJJd(jj*TWOq;+2)&1#7/22_6>UG=U<3Jrk@VFX!.:s2'+&kWQmlkOO;32Y&2;#
%[c_l\_'2dq&SspPXK4(*I7JQGjq)Gn&Yoc<.s)Q]qJ+h3^VKOmA)o?ZKHT%t*-c#rJIi]GU]@nH/V.:T"7j(<@]hA'=-s:2p]APV
%*]+0Gm[?`^9]i2S_"nX]4H!fE]g!;m3@n)`QaT"aBsFlj[9Ed!#R(0',Bs?uQ"tE.D5SVSU@)^m%7$X=?]3_C0X/[ZE*`mEB@G!.
%kg%`"i,.;L'adA!98m7O.u3#g)$CXtl-r#1-gaAO6P(=I)\rHA_6X\h]T?#%)++;<fNY66>3Ldp!J.]@&\>gc!RM7rD#"Ri7W9?@
%(7kkl!>mNLo2&s$%=qZ5^(LV(;%<iiY2BA7(IA-'Aqo@H^bu;uA2[.nH!WN3I[cZlc$/tu#*s9QSr1>bkXrNX/gqqEE5s=R"L@&b
%A!mFF.W@eK-$03=W8hUq4Im]G%W!$aYR,#d9O@k;:_O<sF4(Xg&Q"Bk"'`b&d+5[n"PU(ZE[ja1jT#i6"r?/*fqiKnIS;XXAK6ND
%L)'f,Q*UPIYrt)K&'ba-PjnrIqEg\P87<+;oLKr6/;"J??P3N]'ojs%]!egE!+`f<5g(LDK5g'I@0AFN]**>F00-l)RfN;F/K9?+
%d<*)m,?Uhc7KQYfS=]Mq;1Yst*/Bn6CbL`T8uL[*J55'8"V`B#+,#7c&pkVMZjCE086`&^7GO^3eYmFaQtZ[@^BYV"\>2EX$S*^B
%LV'q7km/o<E73Y6!D)p91kYq?B2O&TA.m?jO3E,Z@TUP@Sd:,%!.bR$ETmQtA.[$W?!&M6=Wkg[)'OO-dNL2a7CX<#\g;kZj?ca@
%9S2f]99*`jkl?a$M1`0Q#&qmf#0i?Pm:#p$:T]>KbVu2FVF6C`3(gYJ!/%M+K\_gQ$3^3c>%&.k,!6:1b!D7A7dsif<)ePj!ar$]
%>bL-`^.P:'"UncM(a(_I4(X]^5Y#O^K`RY_+]'U9Nkf=]^aB6#!uV5N%RAaiNMda>`;Ndu*O@$.Tdi3>=pRBO<7=kh%gNA7Z95is
%Ze8"iZqr5;.(m&H-)n-S\7a5^Qr;faM/\l#f**jM.EDsgJ49gLdL_Rg`&`k\iYO.=^#I"(%V-a9(GE#A&X]K/Y4VXcW@F@.i%kEd
%iVl^s,"KG>+dZ59#/;<&OWb1n)b0rH@Y$nljTXlSGV5GZ&eP6Id'9^7VNW,e+R>cG#XIoJWFg3p#nHZhQGSuQiO1>%5Wln3JX3A`
%H,?c.Og2Deo#-2#!uT!A*fjM/bRMY/nbRt+cbR>YEDRL&7<ZaiHF!/H5g&jXNYLHGU0'/T%'QMg:1fn;eru@N2,b.7HBU0GQorJf
%4^ZVF.>k0&E6&TEWIQ)uQBM5D[WQSN6`Q!aiXr,*5;1Zg!IU(FOD6-CjC520+f)rPn.t?c1]Zt!;:WLLFT;DFVFaP7Q&F\&EX7D,
%5ro",_^,L2/41Q61]`iKN)8X;!f6aNEWcm`f1D!BG3fjs@Dj->If^#BmA8&?\HW+8j;gQ:RuZj6`$CR2(P&),+S(1X!<%Fe82I+S
%bPNdY[V3P]S#8GDBqVZ[$:C56!75>R5\=1AQu0L:huTOqbLH[8643OeNXe=ILdjW3VFIF"20B[jL1g=N1R<)BjFb7;L$8k$,8''8
%QGc(70jEd]*!`=1RaD-U4GNu+)<HU?]2;[*EA@Nn4=0#%3C3^hQI1<Z,-XQ[ULAHH6imGt0caNFFG.G25"H#-\3-)ld?3!!C[7!F
%/!o0M]g,Y&3GRajDe+ZS5T)M"F.2g3b]$0R"#6%)5$)0(]-JY9`Xd$[s2tT:M$[nkm`MO>!.@ebL6r4F&No/VR-,"jT(:1^A]hP#
%`M_L_WY)3-LLHN<YnFob-n$ZC$;^V?MK>G2"-&RFGE=SZAdnWg@MLZ!i6GV4:C78eWf<UK(Wd7U4L-Gr"==%lNmr'5#rOjPjJV@?
%W2nhkiL[/\'e2q0<E,ed-'ehDnSFZT-P)ISkh)-g3Yk_o"Ir^M(EbRjmI#80LHpKfZ(0%;&4j2=9SlH87`H9sX>Y-9_Mt1d$,gG+
%*5M\VUBDlBTd.FR$7Uj8#b_<mb)R($Ah=j7X59OG2F]G=r3"`[!#'.Q:]g/;h5B9Z%ej3CdK\4P-Cs<K2$023!V!3c3<0]raY[*b
%+?3Mjl3W"i#:#>=hCo>2p`&277>Z=<Ds@L:b_Ut53;4Q5-*j'Qon&#EdWj+kJKC*U!jTk%5[339.NF55N]"6,H=Ou3qrfA=W[d+M
%""tYq<o9c&84\oA"lCa[9t8[!$K2aF`H6NGj*5('#j+3M!m"&=LNMF52cf@2q)!Wf>KX"V[KM0c;gCs-Tb,kPIse\1Jnl!N0nG"1
%UNY*'_A-jF5dEEO.0MUhT,`mS\dE#!#LlkE<<Vl0&1Qj%_,Q<4SWFc*ouIJb_XA[&[4cS#g+ibi^V"A98&.h>MCQ+ph'KSkOO#)X
%5f6>d^p?BH3%]Si#>V%:=!/8nE[o92#c(q8N9+T"aH0Ag.d@4Gd+#e%-S2t3C?2r9%=iDYdMSVID9K5iHH1j)((D65M\19P@T^(k
%9bIPTZlR4Xn0j4a74emubbDV%l\-=0H'G)'@KOCe:FW@NJ._"V'G>Y")[h52kB\QhC4J.B%7T6C&"lN^DW",(Sstj!i6J_KJ3n=:
%P>#g*!X9j^6"!;PHB&!ags\m(]/5-$;PpI-@&f5;CM[_g9p%S"(^+7#(JT#f$!&?";e-+Q?]4Und_,ZF@7WJrr+Lm)R2c,jm*:?m
%b#DH/S(YHh8,I*"=@7L&ItkG#OI[-`Q_GdsI,K]02$0r^$Sj8s3:+6!b1Vf.JL;R[$E6@(=cVW_AR-AsHV.,"lnM@qQ_A)k&J6L@
%25QNslC<s9'-`Mm_GtZE*!K[qa$,Ku9WAm(+sTH_C)R-gkTJ[PaP1rj)M-sHDG'GB(.eQ<<#55K>Hd.!@[eHj^@H(93oJ[8P7F3f
%&m]Tr'RL'1Gj#9IH/+Cc?B3sD]iL3&8,0;<?P2rr5(LXBhbFE\I&c(K2IYP>V@$T+5QW*tOVjIS.(Ca#o#9u:&ub%V,8sfVJ\($T
%klAFIS[bCJAQbVYIIbAV\-*!]Fe5]LR+E\,L]fmFX;2$!&kWL^Tac\WEk;g4/?M"nY.P[>NdQ(n6k4dA'_,#d6ZS8Uf#C_QM_'_j
%q2kN\<j$L4@1Rpt$I/AJWl[V2^\,R.YO(>UHA3Q"(4<7$U\FLN?mmA^d?\J48`@T$,aKFd8sdL5Tt!M+<*])rE:;8)$N`K%$0+r]
%J-4><kroZ6>BJrS'"'J)PZ;Ze2+bMC*.[pf.T3Z.SJFeWcRYn+2$bfSZ&jELZLQ!C\Ka>'iY@7NVY$i;G_=#07hn*=:b``mk62:Y
%CW3hYS5'AN=fXe%#ilo%[Kc1X;CWE;&BbE6i=[t/$8m:n<7$p81'%(1iBptJAHM'uat*<8!NF`0C\o<'A<f0.9IDI;Bk6I89ZO#>
%64;7@dU6-FXB)8'Fn5/,!gu/#KMj=[81<oH&esX6nD$lmK2B"!)#55@PMr17JBX9^%H+3[^d,Km:o#gD->gWB<QBhO@>FhSEb+PN
%JSDnO:W%eK(%hu$X-H.aTq;-kTj9>gg7'QK[T.:?*s\T,%u3W:'/!-+N;[&9G3,V.lSL6HIG.(*AL7O8FdgYnk9gl*W+0>+XQ.A&
%<ABjScj51k!KPt.8"ac4,PY0Z&M-po8s^!*kYTZ'JD$b!;Sc*E**]VcqdQ<%JY#NsJKI`%5c..+TrFadD![8N%Qk>SibWYA)cT6e
%72o&"=UqPrQ!D65,WbKAN+GApm*dGJ^-bOUKLb!X`W_r:$]-Qk;8lD]19rmFaRO:Mog8$po>[@X<GB7g(29ftdIX?e`dsQO[oKEY
%PK.GM7d%BHTlUjF(6WC+@&"I5N6:^**FSOgEg)nQ:?ALg)il)>&KFH'&-tX6Vl)/tFrUQHVC\Fp'L=^L84$IP[`kF17\55E5`a-Y
%g-4R"bO$aNQi;18m!?)Q;Th\kFJbCO<B5Zd]_6(:)`1gekK+YGjE+(d.`P)+5Y_UC[RmWUdP;eFQ;5nJ`l=g3f]/s+VDnYILV,_n
%@>B/b,;BJF48PQ;BpbmUB=dU5d8K'_?YiC)@7-;-q2Rq6X\'7;d.qcoj\:M<^/)#'UQ3YF4=q/eUU:@9CiWQK-^^bol'WF4L,_<?
%3(\95[2C+I!<Mh?iiT1(@g$#Y.>e!Wcj`jkauC\\)5uq#cdkVUX^Kl^45,^S0?[lsY#5u>cc2mqb`HjZ;c]*T0dI%C"u>dD1QZ>b
%L3(D3U&s5"-'lr00+-#;(kg=5BZ:?4$e00>EVPBc(!m7jb&[9ZdW?1`8%XW_MAbZ+)BU(b9HhT:#]q'/NDnkjfba%2nInKWjega=
%E$]"!/]cqL,NK.$'XTP=Gk6[nWhbU%%\)@X91bt[mG].^(9P/1[>_mtm7WU%U\Q4]lAj0=S2a<9"Amhnn3lhZH^[1IC9+e@m=IC;
%7Sa/3W<,^4</iJ'CMYss5gh&>_K]R5LlCn1"GYt`]KcW\[\msiLSbb4:Y@kTb'R<[SQk\"#FC<VXt+NB>H_PZUBqoRdJ;N>:k>'p
%_7fDSXs,khk,QW7.PpJ^H0U%e_Kkc(AWOsASrut4-N`\Z&C3r/!*CZY.7b*+.2G,/,Y3,:D#ua>AW'`c)rS(PmY^'l!4aiil=csn
%q@;%upt8h.6E';aU#H69i/q2@/rqT\qRGO>+#O,=S$"GKnpWJq$bq'f:l!@k$.RpW=YXB1GFP_#86#huZ1$.UF*1+_Dsu&3Nasn$
%[DUU:]:8sdU<X3JE?=*(@'(Zu2ZNrVF%f&Bf[?I'm'a*V#r>#9_r7KJ&Ri2G6`4Mk)1)BXpV6MiGWCAPDX<Mlmh2/9a^I>!</MRM
%0c$dAi?G;<HU8a1]JW'5E(24RGbJl=i2L\,ksF(g:pmmd$%[Z&D@:FE4bGYa[oDuK6"Y@ZOmZ*<eN#mJ>HUWn\QLaYHL0FORYr"e
%,fd@)X,[^l%d;%K`Q0/OfVq6T#_W>2:0Rt;2?K:e\c4J19mNWC8(JjZ[[!.7>92O>6qpp\+EsUMXtm92JLJ$MF!8l2eO%_f;+K/d
%&-_<n*+$[O0[EW+?!eO9St0l>DM]&@f9[n19TEkeUB$<TQX]_0%?KrNEtl3G7CR"uWoYX;V40<j]+@!X-+GiPh'D11m5A3(9NlKH
%"h`NHAs3H`&4eb03?nKdG"1=YRGO'[:&-N$5eD6UiqJ"f$CTmS"`?1K]#Q'ZEQ]:+ZjFqI@L;\VI19dR3_rt+Y1T7;D5Bs^]ua,]
%riGO%YZ(G`dLDD3BtNU0/otiGJThE<bO`f816i_"M)jDs0+TKkH>jTI=7%ErBD^shK+-*:8ab@j2Y)QAPO*E`K@0Fm><c*hl\R\F
%j:[ZW\($rdHr!R-4;o_dT;(L6jpR2/llgmsaG>Qnd#nr![$WcB[`DQ%2*t\K;Mn97,@hfH\`Z^]i.+,@DOTsU@]GPVYF%mR8?m>a
%'\s??(2Do0$!k]>;[/G,_YSrXduN)><0[tDa#e#<&.9t.HO*O\<C<M%`"?#oXVV._h_F"I<-94!7g$EI4:jG(nPYfOk/!p8H2uY1
%lE!rR3a9iW:Ta+YUIdBXoA-ro;6+dVl)_H46^1kj7HG+i"M2#pQW'K4k2g!o,O3bZ/RDAAAL&Y*L3`'m43.\<R0+u1[S'<3HV;eH
%%2k]jEPM4UfEuY(O-o13h*P7TLW^5XC3u-Ffm4^s9+G1k0FYj?J[B\Ab+h[)go.[+GCDoi@DP@#UipiS);dEd>,$2/.@#%o\PU!h
%*B93r->aG%_Bk(Jdt/S-CqG:e9^Mdso0%&U+/XWVgatI=_Ec:d/&q53q'r&SZ"Y#FDJrot1DGlUGb/GLC@1hj#+Kl%#B]Zi!^\4H
%ltq#A63Po!+,Ngl-g7]V\X0cuE0&Zb@t"dt!<Y>9V%Yh-818.5?$M/mL40Pb98qeB>%A8%DT-,^?4+Jb\RW`0$T4>%&@;".Ke8m:
%+Abck*>%WDEnP-@*ItjU&7FKuAc_Pbc(-Nh*["?*^`nO:QR=!H4Aa*i)FU81J<W_]E?[c1@&]@pVNVmmFs&4qK'AAY0kL1Uq'V>S
%^83r9=?L=m9BfhePE16l]BCSi7SWr7jDU9ALbjEETLk^p_,HiDN5>f^i+dU,L!0tqS8o1&8ndsELZpBE9H4l%-+Lj+&=X0jg8Z@A
%`5<f&O<6]L32D<_D3YVfFj"?`550Vb,YXfS2FA,MoEG:X$gs+f0R3a.*_#fpW;%N?EU'&q[\Q<jgU%P6P-VT>$JJI7&K))Z,g?"2
%dUG0&:FGFq\3iV'e>EqaP#Ql4JNRY_6maER^cMg,;BddsFT10@M$n?6RKM)DL?bQU+5*Lcapc60YsG%#eO$O<>9c7U/=#I\G6e8T
%i"@Y;5pO`JV-;a;'WCt?-B_q#K!0("Aa)oKR"pl;aeM)uNZj+CFrtb?1fFs][m&1Kg#-3hGp=;-gO;h4a/BU6#m"/uEp.s#Y]*!a
%]Ur6:fo'S;%YT27E6Ba%rY_U$M8T\KVuF%7Ndan[hH;3"4]m%%'iTmSRCX,iM0k"G6^qe6][>+_L\=aD9l);_TS)Q]Xe+_8L_N^G
%?ojNanp!LX0pHQP0_*eaD18*cRP`.A!.f6!5fO;l9r^BkMBcpAhXVYLR.AI?S)5Jdqi4@bgC3PgQZmc7/J3RoHiSd]o4ZU4aWAoa
%N:6\e!I,"CY4<o5"Id8$cSFa)'6J"G'6fkF&StA`5"j\VLHnQXKt?lASh^?3bcbZ[RP^ca[/<c<+UK%BL4DO7n;Z],PMi3"HjU,>
%ehB9jKMJX'FWZ2SW&qtcIdGl"<(+so[L%W/MR&,Hp],lCCk+hQT;COGQt!*iL;P$1/htsj"h.30&:0QI!)8eV[_t>:DP4EdQkk85
%o4,:3j/X_@*IO(]I[8X.'B]'T+eMl9h*9nPC,_00TOjTWP),!#N%2O9r1_Q5&bqs'*5PW$#,Z;;k0Yn0/LEV_8Ui3)[i'2h>A`#m
%"@)(39s<X,SFAg?G$9@1]^Ca:<^8[1GVTja)`d1qr'2#.Qr`>#:@TI^Z`$^YW+SiXJM!-iC3U3qFi)Gt`9eNFY9fr\4]?<$h%Jan
%Pg0KumT(+%>&p9r\i\V(0:'9$).4qCV\S4`]GUc63WSF>H3'UTi:g2FbN=Rje6SB!E1!@D-.(1;iq"qNR=b=Cs._8feU\1?\L)i+
%beR/pksj"CaLc1bVKh*YRcbR)I9R``?trKaQX8MbpM4Whm4!%Z^t0W;_VpO/Q*f(jSD<5tl!3'r#'CA8b3@u<)22=Ao*(sB=Ar%O
%P'p,*Df&H;g,VoH6'OH?['`3sW(]>m`tN[njl2Ar#G*:KM*d.XcP50?La%+.bJp%?C$/Oa/t2&:VVJ^^2$DW/9i$`#VV"WO_uV-I
%:5hm*T[:lPVr8R$B*o.5P(\V]:hq1?:J&/eVhNP.6>`=uCCVBl?RQtQ+r[L\>#[s^T7l-\"3'pn\<01:>:A`L&%@=,"F&CaAq''W
%\ms/g-^AuI@<^!VC'm1)O&+dp\B,WXYmY<aRdP"2k;K7`FQt"_TrO8fD@sm>4W;/!JZ5j1b:@cRB2PTXjD8t&Tdq>b1Be<>6T=Mc
%N*QStkg:Kb['Vo-*'sTtq0^.n^QX)Wi]3X\BURl>iN(#$D@_K5o%f?&gUIK\?LR8F+*:ukGGEn6G6e'pq7Pe:I:MT8ZX+_+D?GJ^
%pNSHR8%4Ghd'/rad<(lOBt)\ci]_9h)`pjlj7FPp)LigJr8O#frKa_[ZJTL$oFOL[^X'@d)"f5]ks()1ikm0i6UX?#G/4L]>b%J5
%X!>\@99AeFgDQV!-VH@)$dqf1mebIQES@AiWed]>GusAB:SW,7@1p0mBY'-TCpY[\#0254m;Ztsl$!-Jg0fb/cq$7W((f2[8&^fK
%e*1a)_Ch:.*D_jY8MBM@j2/GASVo6p9slbI$58`DUIhYB$<-h%&_A*ENk=?F&qd1r39&2D]"PV,P\3%ZMH%2ANW$uPIX<&_/46/g
%B4ZVp`8QE,4H;mN.uF:tJDuk#';i>U1g0G6Ynk`NmjN:9)^"=AB*mj]=68G2Q>V2/"D:sf2I;Xg*Y'Mg4+<\f_p`M8"FXk&>9.k0
%nC0uI%-&TO&!Gq*V*.k\=nTVaE%pR;M^d5lKEVmHQ6WW_Lej!,Rlp?&'"#bJ2gOV:OG>ld4S0T<6VijN,4OI\6$K]X6oUNI/sR4s
%'.n+!ei+6o?4u$=U8p5DRm_@^Li*jQD^5qN[P(o9>)K+58Of8oRuEXVD%2]V>5U,C*M,`k_5DcsCNLTG1Z=:<U42?3nSrKQ`4)mh
%Al_$")3$_;pgZ6L[*%H?HES'=)ipc9B[i%<26inA(WmP$X\K2[hH?On00rGAfA9Z(D_GZSf#7h':/4:K\Fq"I_H#<GI89$1>),a"
%Gs.,]nFUIBcl48)5+RRIZ)H"Fgac5&QH`K"l=_$DpErU5ArU;[ioaB4PN4!(a+s&\eFI0sXXjK&:*m"9U_b?M6%:_OqB]0_[cbf3
%2+s.fr+A"Qa6+U)mCB*.d^Eq[`>Q*2jVc5m6e$DrBX[;+7/^J4UAf)m&^J4cgE5n,_TU*%Y482bl<WZ4f.uDJ?eo3t[TLZV,jQ(A
%?M6X"Z[$Z_/P#=bnO!V(nR7.&U'*od"@[-L'GV,Y4tIj@6]nbl'J6<.ALMTMa-NoipV#>e*.$H26.B2+"g5*DNfri*oIM&M=M'PK
%?I-"X*7aS#W9GduG:u_Ja2ll?N3u:4RS1=Ts!eeRK3Vcc<-\AI'ai-S$sJ]ITk/)dESXpHF'SCSTN=eGq#?6?->r6%\pX5e=dA!-
%%S3<hG>a#We:+e3jQ/Lg=.H"mb8\XXUS;P36F52+p7`1T2V'hqhA[`Xdm7pArps=U8XJ*I?9T$IH#FKNEP'rE"E$okf1f-rhgsk3
%BDIF'26NM7.sXof3SV#8_m%,cX"XFh-d#!9]%DfOU$TADLuP54976@@4WpQq.JWRa5Y,kqh)lfjp$Q\=Be3QU9&>Z7g,h%3fZCN]
%'m(=!F`@Fe4',^XZupB=08a[@f2&/j5OKQ3]sq@JRPEQ<<Rb'-moZ3Og=`&Jp1KBQB\86snQFWhmmY.%FD>G#$s.fYFIf]pe"E$^
%o;@lLZS;4QcOsY5[9j0N\h7<nGi`r4]O8io\#rM(X,]-8muaSP5:]lKA_';2MC7%lVan]t>F0$/`81"ah=HCSR[0P04/[8MmIa)B
%ip*X"Q<=iBkbTL$B"AU$,11d<KLNRMdHBN-JS>ul8NC!#3in3([lAAuAN*(h[Rqnt9_XD`f^YV&\hI4k"+-1>c:XH5hKi1$,r&1l
%$e#l63o+fM@u1mQmBJ,Zqh'>(!o*+afjsn%P73:OT2cKVlh9A;ph`ssW7TlFF@m+4p/i&d`<-p)4UHo,S<h#bRdIQ3lmV.Cc_ArR
%g3NXhpp_>\c6HWiPd>d`cQe\tD9Y[3S+B/e\&)E?lINpD>i,'C,tM7,ZICgT*i['k*7spMdcS/_f?1oE%sljn6rFmq\Mbgu/u,be
%]I/k7OL?deH?18ZTA%PHU^Q;6^82K7ei.dsWJk+g(GC#Y:F)2JD9^4,l[C%Wbf[#F*aRV98L6o3QY>qVSk*%?rNUK-=]Iq?b?LH9
%Y3^I!Z*VYGa3D2#P,INFca*JL=KE-f9D&S@lB?E$rnO&g-#6go1!ICG4=O.[>dFZ_?1,bpD]U%/0n`oM&:,9_.-W8-M2`\6(rD7U
%]I\fAR/gb2&8hQd27J2mb43I[DTq%*R))KV\-WC!AoM5a^KE@kmsi#$Gp_G^>JoHjp_NTh2nE!q\,;5'8c"<c@\[-Hh3t*C#Mjmh
%hE`gkr3#,ZR2>\[NGBGMnH5Lp9ja,F,H>lh'oe]dBIh?5,X*.uHZI0hksnZoD4Z4Kmh0<!=M"0Nr/kPmpMJB`>ki.Sn8f]NLA1Ra
%_76jBpUgB!I+%D+95H+)nM$!CNA:mBF]fHQS#7T-'=ao89c=K2\OhLs>fW`h'b'QFh+&etZnUl&J(s=0DjdG/j*NaX&[sB:EGVX+
%lXr<%mnp41,8/.ufU<Yrp>BaH(dZZa5?VI_f%;r7>E$b1\QGc+>YFB[]EJ))KYdGf6@2R]U*]!31)."D;,k32qdBg$)2bN'TP2Gj
%C5*pFFVLB"JmT<9HnKWNNkY;Z5)_<j]&V8GG[)F^gc4Egh"3V!5]:O$4YIS?c1uj!F2$^f;(lrUA[=D3fppAsfk,=)mUgNh2GDnB
%cMpNQ(q8[Fo6r]8]\/Cm(XpW`r+8=qlO`k$I#ZNc6[m;&igUDQ2(`ld2WQe9nuI6=hIYKHmW;6"-7-A\C#/,F=o-^gFF9*q]tpV`
%AG*P&:WLgi]8_k</l(DJ^QiB6,mEqFgfL.Z3aI+OV,5bKrR!UiQdEa?N[r<-MgN00EWYK5aT]r_.d6[\R`!h.&asW&LpNC^`HB*l
%q&SY8S_ejg`,Yf@"FBV:DSOYK5Ig`u46XZDqaoSR5=hOJqr6nN.59o-n#!n1.55WHN.jhS*k-'fN#*dZZ\%36:so;ccR.Zu?`KPt
%,jMT`RIl@M(\cid\XJf7A]4hR7[GJo];U<34cIl%=kg*d"`((MQa1io)THX`J]VK;f`NGUDl:bMT9gj)F;1N1R8UoFQ^VN5Y/@83
%UmqAm+b2`e\S9Aad:lO$g(^)97AkhS(G%:tU6DZDn_2Hhkd2d"D2M)XU=6"'Zme%QMGC-E?Fj&TRo7r[jncFt3L"73>1_1TpH@d(
%.B74lL)6aq\9U-Z`O?s9T$sqk:PUAbd@*0<VSr(D2G]*2&OiNl(U&f7^>.V-eE`,*U@,>`rYdlWbu8'%`u/e:eTUJRn`E\c(Z-+&
%06(55LKrPEXd_!#4JH]QN7\%@D<6Iso6@_8@^/N60&,F>%SrkFi6u96ij?sObKcOID]XqDFob)&7k/DJ,I)PP/,huSSL$`UF->p_
%e]D/)ME[B"kjt71Mfl:UK9MKr4@["Ui_DKirrj0XQ*t.o;uA3o,%%S*QT?A%B^>;_mB`n?&oEfOF\!F[/baR"GqBWKX>#S^78et-
%Aqb5`jd="YqUFns3>3m3YDb;=K!a!Oq>!mY2JTuVimO"6-$ihqVBiJsaa>Tb)/iH:=edB-\9'$b&eo1T17OHNVBg5VfD8D.q\O+?
%2C4cZ-/+SoetF@A8`Mc[F3J<]11%\ZnK`tFj/D^"cn06IK'6O*9kpu!&D6t`%p,lfUuGCGF\@B\OL?ccD>+9jj6jFjUf<dSnZhme
%[o__>/=B86,.5@a_YTJ&I5!c*bL!3^=VZd*V>0YuNh]J,9&dT5EPGd'D4^%$VN0aN58ih95="O45!R5l'`S62nXr9p1KY0'FHR'X
%8n]&[]dgTO&,M_^jlSj9GpI8Ko_"i@e;K)<hsPR"riOo+d3L`DoRQQ!>U@(b%j<Ed[B<)\@Im`qs%KmT<E6TJ.BE,$k#[/-2*'`1
%?J\%uAOp%C6[i_\n8?@30K-O$MeYat^M>XVUVY-_B7o8Ng+A>'BKr0bZ*O&Y%PTR"I_[9Br<<q_;MK7VMJc>>]Qe1TMJc>>$^e,7
%;UGl@MA?_Q2Q>p%91:N4!Q%PdH9%/9ifBX5hdj)RNLO0poqleoMf*R_9eQ9:jJ(D[V9;>$OgHJ2W-`g]d5%N"@6XP2@*j1k6m_3k
%-5jLEalqjc*h#b##aB??CflmJ^P_2aS*.AahKiuZ[C^^ebITk&A)5B,J0*qFY8R1:R_Z,u\=1stnTtg5MskW"GMJ,1+7:'L1`/^L
%meHCe1=a@kpiEW,JR:<BPt[M@iqdfH\8p*$RDQ@.7+Y>o^?GAflV[g;.=3"XIF4"oLd+qKrbn9f9eHBseFG8]Q+W@?IbF1@?8nWV
%qKoBs`*dsR/b;5Z*nJ9'_0,i,W)G\3DcP;QrJ&S7G#TgNcZHbn1eO1=&,N&@[-W->1W>OANiSn^pbBJ0,WU_8EQJC/p+#;!/t0P[
%=E-5fs49E'Ph?+;*EFHfgpC>#-`hU4+$184i)@0)]@LQ4Tj4A99usKmS6agi$p]L#ZsDpq2Nd)iM(I!EV<7(Z?%-!TfRN=s06eI+
%&mda5S*daAC5_s>6G!!=E6sZl6Z1V!'9ZYNODGSmD'H8=6f_'Yqc\bcQhroCH"+*Sgj*o!cHUOK`O?u/h9LcgB&gc9X[WVSQ95d0
%6P3OX=T?:%VAY8m[901M7qaXl3NJpRoFB1#Gi?ho6G1nj+%4prC#U$mi@*rN:XA#UhcdC,`Y[OZYDG%f6.),\itAM1j,DS<\QU)1
%>hWb+I.>2mYHolg`u=m<b@oKPjSCNgl2%L,^P^!6b/^?.=P*AW&Cr)!3%FsTmr]!e^7iT0I08Al\Tp+,H?k:P#_jl/P`^+Z$^P5D
%=5I9k;ODY,B*i^Vp1r_Nf#94)L>J]eLYfb*='TSHg)D;aUnd6g?7p;8p.a<N\p9ah3iUm-ja3NBG4Bft?(P^#?e*Y,6JVQ4DNnM)
%eQCi:^jNt-Xj:l`q-\2JF:IslE:Jr@oAf*pB.u!Q*BBH/Y+q9t^QE]qeBFqW\F")GlE=IS0"4o/I1dp0DK91N3u;c,a3em`Q!^Gh
%X_ed0,iN!Q<O+0Fl*OnMe=-$a0@nSL>[@H4pkEL1>9`ie,D$_)"KcUe#hE%&\;)G=Gf0GV'(naB7D=B9!p[[KDf]'J3mP:q_K?33
%`<-$?@IL(\ZRP%tXq<n`=RGc>\^sn_e]kARo4"ss$qbsnh=^%HbC%q.GLSS#EL;ZWGL$Nm!uQ_V@VT,aC[q:>?b^XC]B;O"LL31A
%I!.X9!A:V;K28tZQq$bkGGap,e!9AKo\VM!iE%>p/MhJWZf9]_@0&UMoDu/DZ)?3Gn^CG3lS!d:1)sfMGl,*eFC<VM0<T]3*EXko
%p^XWi^inL*@%)Xd2?h.9Cst=d3S^niQ=G3mhQJUt#UMTMn%'7_KlO!K:/D7F23.!&!]P'6_'M9$j.u/Xi7pE@NH*Mb>^s5jD,s@0
%:Ku"GXkIYgc<^q!Bhe0p4']aK=2'$,jh&ml\n/PRA`iIZ.7hfnjk'U4CRk$(_"s&1#p9,%AFB:Ue(CW/#/*^ZAfi8ga-1C2CA@IG
%p?[>)@&IP:%4.-:fVS-dV<4;b(Pli3]a=Vnk?gi9'%e'Aa$qYKN)#AGW#r^6'4X8kJ:]>aBS`_^W7U@L(D3Z`H3Bbj0jJ3JXr+9I
%1u=?hJ]%A5+Sul,h(eujXgE6L1eQJSW4-ikW(;#]`%84o!o\4)8,?-]Dt0$H0"b$>6N1?+r`a2]#3r-"o5=)-gQ(g0O*7TL><rM3
%feM]EVIRYs?gt)JklJr1:J*%<!S3&$boe8#ER4K6:OW3K2/K>IkIV2L!F+sn&%cJl?EC<!`XD\j:3f$mBD#Aee\cR64"qknNs<jR
%q@02[3#ItI>S'$Q0?,6_$^A]L>DNOY9fB?c4S2@!a[-r/WL0:E4)R%pKe:Ikk8-BY:AunV&tF<Z/AT1"9$?>&$R%D,@O53Wd.iM6
%lT^N"6iJq_3Z_9,3'O3am-liQddNu=JW.U^gG_NaQAf)]Y8u<YDLT(4ERaulUg#DhFk`<Jal#P!\<G0%o_&sOq!M+M#/gtj0B2[*
%ie3?M2/amW1s.LQ8g!5n!IW_OL/Ll0bUo32&1-@AZKd'kB@7gHUF=mmS1?9V-h:qBQ\A[C!ThL%h#&#`pH.q+O>q4%bC.h*o*T?W
%>;^@+cAJj%OUQsKagRJ2E_F#HM7Q%cIM#dLPF0j-.l5&f;0UeG+BT>K[ms#:*cEO:l\&YSm(d-#(-%9-)uT?)r#2ti$)OD+WJ48O
%5g5,S)ETV3W.u+h87:VL"R8Cs#7g;S:-_)7+DZt<j'H(D\Qsbk9Xad7-_ebhX[>khaoBUm[J:nVf!EqcqjfAPgDrIEH!T%sRZ=V6
%,j<_T-Z2]kQ\@p'/\n,QDuBK1ql_Nuq-E,fDnmT,Ln_;%G^3\F&G9MR'*U9!a'o*tD8"IudGJr7?B:3'/GRA3#OMq6>JKY4DsMA#
%_e]$aJI6:7M@j1PHh5I+&U1T7R7hJX?4Vr2r2MW&ol1VbII3c.?`\a;dVDnW=q(it.5mT0H]X*X`t;U[==t+/:sfFuo`kKNHXN8=
%n`Bj_CX:qb'S"snE,!5q-8Z1:-,?*8cl32A386.F6V]R^;lY*n(L,kjfk/I!SJbha1KR8AC*K7T+]>(K8__oZ]-#\&Cc+(i`Q^5\
%k;Dk;m<j+Q4!^K9(JM(q&F<GW;g*4o1WdZEPO1_4\RHkS6:/C\iSeF;'_(qCMN]q-9L?Y=[e1(^-"]1dDi(RAThTIH.HAUN2meA`
%1S#L7ha;_H4E*)NZ*E\R?[>WoSi/L8?(D"^NbBo`du14bF3Q_iR*Z<)C9,>%0q"M:/V1$!P\TJY9/C42SQ-o1hOY?XQfrWk;+1n0
%D!Y[O4*!V;P.@<tK4?tq+lV^Lc$qjH]<9RIcckt2V7)s\8%(ou4Ph-iiCos5aS%[[NbY\9>2nOS=KQQ4V`;p,QU&T^.9qHRg^+F`
%:`7Q'/sup0D=>ZueCsbuP.DM=_0%$]mi!-nKo/[.CWDeGD!cECEKl!)O#gRN`d$)e\J*.WDp5>s7q&CI@*%"Bl%%igC8ZIK(XN:/
%RhCA"p/m-Q>oHqZ34@!8TC!d+Qa^lMLOW*o,T[i/8:2pDRWuNrLAp!GcL4D<83^Hr)$_-!ppGfRW>P];W-e)%W2TiK/R-'o9oQ>?
%PAjl-A;#^Nmcfl]5aq1fqNRHBq>->EM[8r(D9^Pn;sGFFe]&a93N/e5QO:%@'f:+XcH69WBo5+om>8hiA`F&OqL@btdI[p"]Y%W%
%8Om:;St(B(255*/[m13AG!C/I[mTeifpp7W[l4'MMVR"bYD2jFZcq0V9_WRJG9O0)gUbcS^&&WmU\f,@)Ug90BT*`sbP!1r2P]WZ
%[:`Khd%@clSDd@ad/FS0rLR\_#rTDC+UC3up,df/<J3o)RDX:IS5W@::qc\V'T+PVb//#llgK_9U5OAsKf#RG9!;J2ar?%]+,cTl
%CjRl>*pIK:7cV><"YbH+WefLN79E/K*t!<r>Z1S0]fB>H&+b:1cfJ'ddE/9o+Q$sBa[a$^qsp+o4KIO>nU:D2(L-A:@^<J6T]-&Z
%9?I$8Loeo=KIk;V_/bu.FZ]Nek*FIB>@%ThCrUF(b?@NpBjB_gbr@'"oKj+fG1PeRG!$U/N3O=oN;&P(H[[#[3K:A9/ke7@mA)^u
%>f0k2M\/a8S%B5VSAjNe"+f$)5UQD<AA7NRC.TS:doq[tDti6dGB.<.Le!*S7.0#.+""0TYq/7BAKZAh%/GauESQTgiuj2`hP]Ia
%qCtsmTIGj2IE7-JPHjXA),,dCgNEUgBH.u3\..33Y94O;QYp/3T7k3j4?>?+7&+alFT7D?2/7fc/tVAa<ulMpN@5Yd&#,k0nF,?o
%/=8bDPF7itpF"uET_kQ!]]YcF=]9q^a*:D40M:hKUX5so0h1"!,?.q&Z%MkIg,dq\gZfV,D4IPV`DXk,VH.:H\O[tfA)f!:B5BCd
%h/RPlm<-IAdm^/:a>8FU)ti)aUA(p40Gl8gR5+P3SN7TWS^+SnSOK:adtj!<KCO&qW7N'S9@&ac%(d86'qO_/a?p_JM5j@1l=<"R
%EfhU?TeVL\TGsZofqbO<!Oq3s;`8U%##`K<#Ci=5a?O/nrYYBMG]"EI8g/u.rP?N6).Lj5[%p4(f,Xo.QpL]RMu"La?.K2O\C^,g
%`e^7@)WbXR?L'>eK5BhNP*KaME3=).N8%j(Z/_c!n`Pjgk`FFu:Bn^O&kCs>>/#2[D%Ja(Ni)Xm`kA"=0hCBnTH3^PUl@.ckHkG`
%ioEZUdoO54KP;f/S][3/hT*;1;"u4U:3n/P7KL/lSn=BWHfh\.As#ET5=cUIkk=h`b'V,DfmM&sgBNK/+p5"V"`IX9!NJcnHBAd^
%I@YXfTf,!9_ueOG$_/reU,d+AiK81+l?@nERBaOFY98.j/M6<8gr+<<ja=:kk.tJ77YoV'3&004?`M(R7Yu5IM0=eZQ6fkE00jrO
%e"U%Y<bpi3b&@ld^+rF+"?(<@C+@ri8]0C*Y`-8_O-F3:a$FW')YY^%0dIS5R-a(giX)i]m%?d>761l>B5kE5094Yg;g`ge[7n2_
%<6Nh?>7QE[V0`ElZI4@^U0uI?J@qnKb!:F)7*EIF?qFjjc_QS/[VZs&Ii?D+)D5`J3o+\.[snjIJ[_EBqnDK,kI'BOHn;UljXg]b
%h-O?^@5L%5NmFHYP.%)^19F>tc.fq-dN8&NO<k)_MpTG?b1Ig-UN6e]-_8C&6+a@[?eFoP%%00(R>+&Wc+%Q2N0^fA3&+goMh[MG
%U('=>^i0#IlpE)]2msIN.GdE?Q+!nc3l0g8nK]f^K84".oDmWtVP?<+X#"hE++hd[q^7#-m1Se/jg)<WO?APdd39q/QGC&@!ue$U
%NWQ=]gJOWKDES=`ce&bHDYpagq(S8S]Kg8Wl7HqU@pYi([,mc[S<Nr^dch4)P<j\l3Y+^qN7Pd:N0^R=VujC>KB>A)SOm8^VZ.&T
%ac+p35snu-pOt.41mA2:$g@3;?eS?;#n+aH3lu&-Vl`)4o6-?NN(+1%DkC#X'l'@h?>(5*Q@n_,MB-^t&$ALVOTdON,O+kmMWT7s
%h-0U4gh)t;kSAhI?t_U@nRnVZ5RNbI0T5/rqO%E04R\dt?1WGbS5nrZL12Z>h^E)Nd6hO9bB7qEE@pi*anl-7"r`VVZ1=Y4CrVO8
%WR7"i>i`1YX'r41H'-&97d^1g+`F(%\D'Z7@WUAA8DV"aTFnZJ9-$["b\&!R_S0S_-b%K:Ei`qaq0&m,X`3>Y3UU?cZ.M24j7e[:
%)jkDX+k#[0C"0K9-q=X53DhT"jO:%@-h1l4q&0V#V3rr#0=1euR4Wj2Z`_"0U<"!O%#4.<0a;PN>/UHuU,,rB2)!<nkeBNnKh7p/
%gVo*TD]\TKWh,P(m5*"QRVFPTRbVeoX;k9"?fGQdiM/-[fAF"HJ([']m?[8sk@%CI/jrJRm/4sZea0=4qgDHu`F;Q,=rLSHW-#.`
%VDscHAME:)4.:<VWl]?Kd@=Fha<*jZR3#sC\KHBQGm]:%K)dMT;A3k*qTp6LIah^="^nqFXA:U/#Q4*)Mjn0m,#VFKlq0G^*']#,
%?=1b7-'9RghLnDqK>dP:o#TD0.>0HGPf*dE15:`T%#>_im-VmhF;jn5;=kGjMu&/l.uLMBN=[Z/WB=k$e=K@QGWFbN_XHi!T*H$>
%#g>.1I05E1?K"h@iSNU3X51ufG7Bp5FmXe`1<'D9U)b1Y?F5ZM?M#-0MPB(6f56GJQdMUWMWd4f2gF&K%O5TOK<^sIG(Z!#qX2Fl
%oKV9IGa67\6l?5Mhnd\,UcVfo!TR?nl_C8&[YK.DP4W_)r@c><.-g:GI]nfNji7)Fp^l4r4Do^KH\!/01RP^9n1];S9f\efqhnna
%l?+4!Ar'R_kqdC-a<Ko3[cOnF7\aiY$r1uRg/e1eI,PRU;83bj9CTF0.Y(XcBuXDjM)Wsq#mqT^?"IT53&3fjlndZ"iCcfmR@.e_
%.rLd;0+*Tl!SGmLBk="]&b:\&cd*F)qNS7u5uPmj.e;:GfgK!h&"q!OM7DY,(k<(k>`Kl-qi]YhOegc9J[VM$%5:E6fOe1OQ7V(D
%_GEA4hqT)cGEG2LrUAQ8&(?N_`BB<IW=Fi.&"Ena+%LVaPEu[@.L=4Zfg&lb=qh`kbX\RpZf?Mam4Ao)@@s:A(rF!gh>#I9'$2-e
%cKpbIG$\-4VtUk+T3%'Y.U-&e5kuaRWB=kMjG%[u@^EpTP1FI4),ceMaaB<hFPIi-#OTuNE#.VO5^oDC;<JgcSV7Ki+VrGk'Uh17
%NH<:*ao_)bP8<cpJ+[N;I+V_&,G!So[^6l5\*Jr``RD@\;p/3*bFAnri4@RCeSOuM`4bq;+)S'$H@R1eO`D-6&uQi68:87+*9W5K
%Soc+Gn"+W$2H0[5r1bEnoTd]0<SPXR3#_6TTAsHR5?fpY=C<2@e'/8HnGl(/Hls'sjmIRpcO:GEqTD&uqJF<3VQhek/M3Z2MQEj"
%%E1W6Y$sKRV9h`r6=$FG"`r*S)[Fc-D`!48G;<+9GgcV"i,,*4g3Z%s=R@O_;`B3c0]K63X<5eXHpSQQcp<J*os"GV8`2L9>[otg
%SVQX*rgcQ_Nd&^<4+"I*4?=K=r6'84r:qC4(OfD7nI,*EUSDh2E=tJ7nC.+b*^ku$o?BXFe\:Y5Km.k9k4%L"X*<r3'rJNfGOMqb
%p"$Y(20U+S\](IdYL[Xjm#:;Y*[&l*i&o`no-(.</F\,]c@5_3qp3j/s+Ql3oW%`9]==FX&#9-ahQ+DOCObdN>clj'[-fc#WF'u]
%e*R!3rUj=d-gspGFnEb#rP+onO!ElfoZ[6tc\&ftF^JOu8MY5_&=AdZ-E3V"rp=HCs,WqAXWO%X?UXDO-qWc&FS3q_>>MHZH2RD(
%Uh6Z;<j$<^5'h?o44lHphECi'kj!?YNJ#/dl,5T+?f59KlZVs1.OX:cpsTb'9p%9DqYSNlIIlF*7bU83:#eTPB,!J:++=1<+7Sf?
%cg9G3e'N*H5C/UmedJ(;43jOe=rTDFI/Pr"hp5M2d*:ikUuMM&^XmE(&#Q>1h-b9diT$std`(.N3eJ6(rHYaKOo54HoPi*W&,p\N
%^-+=%=^`4ci]k(_&*D.5e+^Q9SR:u$rUK1-dJ'j$*9>HBo7NMdc,4o$[nlV:]lUsUr&A=ip[n.iO.<o]=e.LTc'EX%0:`iW8LM7'
%l?GPg05`r!S(2<qrR.&hX7uScK>VGHhQ24D2!3ieIsm_Xm^:*is1A*f\FM\)Bn-"1o&QkW2fDHn/%\%6Fni$\QH)^a[*6t48Ue.@
%50$fEbq<kpXn,r(IKsJ-"u?>Ra,d@5ZbeP:Du\NNSN&]HPl,O]qPuW_[b>'fVT3^i*E@T%l)_BQ=b1StDr1uoBDqASf'&u\,KZE4
%RJ^c)^U<aumI,>,,1D"Rs'd%[hY5q-4o*XST@J5YendMHnK=1LCTXr4](<T)1S5DM2D%aXmaJ_QhUpSD+4$E62BVtsrNCLQ_DJ%G
%q(Ln'%m-s)@:F^G2='Jgj*/H&2qqP8ZatX93.)l]D>s7&Q'q<sLZ\#gOQ!:M\YMr^qpU>8IAce[ad^i94ZeM`c5Q%,s#A;n'rJg(
%s"O1oqqONoSsf9)c!R)C.YB!jf#'Z5c^f4QZ1H2uZbeQ*jM#c\UF1i+k0,k(+7;=AlfZRiarGWsAjm)e'-G3>G>@<Tq<\jeeK6^l
%k0LUXhL)_Rp%bB<=b#+RFbA#_rQQn(^Jq]1Im7l&Y5.D>#Ckg\qYWq_f@BT^Xf5HC)F!][a4L%I1ASi$hT_s>B)V+Zq8XRW-\'_G
%44f4r_:57EbTljXp3LNBXOl>,EI0'_efV)%9p4)D#FtH^3\*rM/C_E4^H:&!+58L8]t^HseAUXeP-]TCDbnXSpH/C+iNkiRYk:qL
%elrB'mL@0LTlK)(1Nr<adE_F`mbS>=om``N>+<inVOVf,kg#Di]Pd`<:+22%qtT#H4tE6pg5;NIB(KRAB<BD3`TpTD``rE]R'ef>
%p9G3P[XSmq5-gbs:X+4QkipJ&&_T;7Yt$HkG;E[Y\:<&3O4uXp3CE*_p=irX)aE26=eB#kk&?J?muWl!31C@;Y1hiuPGnc?<RuW)
%4nn64LCXU&\Q:dK#<.gV%F!sqS\'":E$dd$rSLChl0><`04XFa3-ppkB3p59TC)I1pTF5H0=^<F:mnn`@@F_kq=*#6mYA!_E5C)R
%Ao6s9PdI2%KDi=iP4;hI]\MO+ZaTG$s#46^D-Gc>=7>GgNG5^.Iehs\L\]bUnUB4rE:p-X`miNidscGshO3:"pCCL*o<8.ujh.13
%'q+d9q`j)N%D_'iHoV/+o4g@UJ+Z+hjQ.S_=gcUrk')=SO:C>Zh>dB/rC'DlG@NUW2n/\7)gCR"?%&&5?i=F%i<Qr?4Db6V>I2So
%=gl.c.Rujao0T:`2u(pY_co>8_,0OlV%nkoeDstd5(04^LS#V-2*P+r9te",oU!Sln^GCqUH=6$_=lCu'DUn`!G%l_l`JdR[5r#Z
%#@i.21FKg6I]*)$p_GFA[3f#M7kZVu0Y%D:fJallCl=Yh;^%.ULYoG-4PAhn(A"1XWVPB'$i2e*4afIZ[t6qinmgOX@,:9SdrAQ3
%/Y/0)6??c3^;iA"pGoRoq/'kI9\<9aYI0+$riDIlc(,U@T_C;/j.8I#O&p7V'N\#q*<)Teq7sDG=Z\Q[I'7N,Es"9MbKT7C@W'Oc
%B16Pj9`BJ>XOgWQAaZW^2jcD%LJ5VXi6QdkSN$!Qbkh)>DuQi*)l0f\/!(>k$oF](ZbBPWiTJNnc(,Sd)?q,5V>UE6gf8i@b:)ZL
%K:P?r=P]K^-hV)_WVP`EHdr0bnfTKk)d)3AZkAPM?kGZkh;eu:$U#$<a04h&bt$n0j:.T]X?F5N]W;"2Dr7^uS0#lfqr)1@]uX^e
%^fpK`S_@KD>i5X426amCjASjB.@C.s!IVP2_<U)>boi`j3J3(3_2TUV,%BcRs67KPY^tq8p\ORTf>HQJk=A(kI%XGkTeYL$^V<4$
%9EC8c>h_8u)qRr*i;J#AT\FbB6(m1R_hroQq30g3cM`M/S(Hc*]6f/mSC3jc5cZbGLt;=Oh3Z\ur:O*ocX[E>SEl6ERa4m7o8FfQ
%nbcJ\\rilIGndP+mQ]H37Nq[roj"qa2m6)B"`&pOqMUs:A15B1UhCd=/RHGkCM:_;`NQ/7P\Qc\ppFeBd>)(db.O;[k)'&PCApDC
%HqsK0R4HeYIcZKu:TT&4jKW$o9hFcFe15H1fa(`3au)S;oY]Ed/(C)t6Akc]<f!+0VH2d&h'Bm*KlklQ`<VYI,$:=G?P>6`-X$,4
%`ou7>-CFYC]8D#@F4g4We,FbnH^8TgkGbAX*6sGrS*auu9H9,Bmesf-N89!?]"rN'%OQCT9%.hFip+WWHi35b'S.6&hu'U]r?W^\
%JSt%;:R?=&Nu;rPJ\PO8>q5Ha](RJ30t9_ML,Y#1GATuFc@`eN,$gF_jp:V+Y5K8&/O*FAp-mRShiUT*'sMgU"e7mPfUen>8N!!:
%"l8ElJ+##i,u#T@ilI7Akh<XabEnH&JJWV9HUd@+1F>s@m=/_1I^q7efJ0uq0,BAHmFcRBG3<sdkJ:tV[U<6+!/YKc;I'"dGZf,h
%fEuaB>ISBt[8O$4rL79DUt5<.0OF+C;F[D;/6l^Ns,Y8<#?=Zp+&<dB*.H_pIIV]TibJq7kPl5c"_,0c;mBX5Vu7E(H*oN*9KI)0
%Qc49)f.b_Qc*Cncb-+n$F,**N=a%.u@8PfWWTfojD<L5IBms'Z=^RG.p/bfDq[tZ\Vj?=cQQ/:<]7'^CfsqtX^Gp8BCTfh:K'5+0
%I\r72&*$/]Mh^*[ear`8=hfH8oc-3m@B$'IUsj^(2jZhjlZ5e%oUZ4'FJEemP/A:P5f&o0dCY_KF,A\.&ZBt6?_L&0(*b%Y.@p]<
%A&8n&M9L>n/r[nOe>Y-iME7*/AVnQ)-]cZ_nRIGmZ9IS%?Loe5]&1Ui^I/=([MfHcqV-<CJ?jYH]cWT/@:&ciY:!6Tpf(dfB1_57
%b3u+?F8^P/:3(](5$D=6'Q@fqRU=5Pr'&uK;6hf.T0i88e^7]Cqb?6iEZ'A<`(<`4n!l*3$/ZOu;<O:'Q?dNBn(2VtKIGSLAO^`=
%GL1q]a\!h\iRGl)jHoJgpa%f2R.m-0f9ERF:Ie[C;fpY&iD>I%V;C9EEm&5qB2>kV5,Xe=pt6,@4`bHdqr-D_%gs&oU4qC#;Ea^J
%5/3I_TTFNo1`P5VX;/h)[tm"Vl^WY?Xe^::FP9Z[0+rgi9X8@[ds!pOQYZ[oiSSHhZ9>Zf1um/YnpTLN/.qtn:@;ut]!sd\D%nan
%J!NA.C-*<.OClq/W^JbnhO+hZLX387pA>em'poeOZUZ\;I/eoe)a;`ak8]Ef7`g_ZrHr[k=Cf:b`NBf/]D!'4B)!qC($Af"q;VD;
%j`N)7/rD[t<dLBX?W`nqb[FTs5uV[j*2_ZNcW@I@O3N[5QLVsF?j]fXLDq`nd[arG2U#IhQfa(6iW.3==nY\5cN7-:!U"2>g>b9D
%8`;Zf!:$dfc=/;[k623=5TK/t!?UBhBP/kQNqQlYKdPsTiRIkH>RS6TN/oJj`Wp*7]qu%W-Ca0d#PBcT<Boq;F7qWB;+,B8I%ZEO
%/FNkn=FcHuh.S>s>.1)a42tK=,cXNcJ1HO8W+a9^LGGc^b+uPD1,Bp;p4?SFGrp_$+q$Li>)8Yo?oi/\ZKd:lACe<mlq=Hb\i-;o
%?aLWj/]c-b%D=Aj2SR5ZFsj,fS(Pg.9t##JK<&?oh-P-fp>o<T<c5Hj.q/[$TJ*ZiFAVeV!t@!-f@\(("(eT=B'\UBF;JU?5"H\[
%G23oKeM94JZR*3T*#W1*lV;=trUm4p[?^Xac&a=-MaR06&K<@e[$f.E\GTUpEha#;c/3^s?u`Lg)FceY@QCR@c/3u>:5eaMgnK])
%C?E=];Y,u'Bs5f"ps4sEO&VpKqKW;qP]j*equm2a+)<>?Y@k<gph4$:aGgm/3Cc+Cs-9=.Y\?1++XsLF9mOG)UZFO,IFB].>+m_j
%b7A:E:rhHh<Gp,-DSHlFh,M=p_9.1?"\acg=,?iaP^1QZS6Nm^Q:Cn"UJ*!#s.?t`m>@Z/njhU33ID(9fqF;Y(X0U3[P8U<N"'AT
%`\n#'T)!TF\=`_7MabdiXK3nC485=.h:!DZV$oe+$,o\<8;^8Go4)L0[98:QI"#mr9TFlb3T<HRp&'(2:pCiHkHa_'o%,b!i)$TC
%D7!sl?CNc,/%4r57B,J#^1M40=KqZ$ZIVE?B:K?I5H@lCMl40;.]pun`YOZ`mEhaA[75Po2QRl19kV`*4_iO@`1A2P`G"Ah6M7]H
%1Y);2&]UA+et&[O*P1?+[G3<=^8u`>c<1rCIrn^$>Ld>F6$Dmj7sbEKRX78FP-3[@Okfm%SS),"3Ie-<%S_D-[B!]Ek*0r8[sEhC
%L#4$a.($tp<k%!k&QN;jlkWUA@VM)p2TAKq%Qpi>^%C(L[rg`\g5#W\WMcS`eVB@A;\dSZ*QogfH(Juhl<$4Z$D/K3Y@X[_QHr\P
%l9:`A3gQt1LG&95c;u%0BCE)!&C+>tbLbp1/p88\<uoK9<u&=!8N:("/75"_]%D-b?ZdoleHL7*kGsX)6bqPo3+$eZ?d$EQ:;cn-
%A,0f'U\Xt4lN"TNqtA+`3I0LC)!S!(h?#"QOpN86&8SfprkGi,II!Q.a0NT=(6Yg@Uu3j:\#?<1$cFQu#LIVbmD!=Y#-)Q@h:\",
%HYQ-s2aX6b6#$524/sc><PUODKf-%$2'a#o<hOCUTrs-BWrlG29Pja+6EIU##i!JN7tI%E(:kuqWdXB.?KJ+jF0=27=$LW3%+2<i
%.^o`EC:B7)AS3%Hp8B^mbAsqcg_!a>X#L=87_+Q)QaA_k.DtR#Sfpc?L1!db`%p\^hR3s1W:D*Q1jNGZ#jUeXaGMFbGdIQ&/Q%Dd
%ef"mr%c*G?IDBX2kZOFX<C?NW(4+47TBZOs];LD/f':8g[L7CE&,sq+2AWlZ2#pK\'cZ1F7AY5/VJ<4fEnC;%N8-dgO3uLTQdG'&
%ou:F"@'i*ZVQcUQ<^3J.51!QC/l4bRX\J_Qm(T7MLMe]0IAG;[3'2q;<9*+Rrj&A&j<E/j6[R@im,WTN("m_Re['ZCo)0N:^=pQe
%FO27CgQ^LDcm?/e+Zd!jd0[;)_u(NV>-"<emOG>J-`(<1>MRe+\'gf>ihs=OcADO.l0tLV5=pe-28&CU\\E9BIET%D[\8%"Gp%aj
%Q_(u!ii/F'6XTf@At1Lpr[AlNeJfgrgT):dnR/nc[S_&XZ?%((mr>&0hJ3k2;AllDYEe5kX(0e!:fKV@A?]?$/)XGu!IJ_6`H`Im
%lP7_U;N4ZO1K((7qcPKB<ErP54j9(+diY(H,'@bsZ?:rZlu4PTD4k52AoS-SD&JYIg3SA>fMDD81fP^hXS!nhpX;#^>RP9enM`2^
%aAb-h<3rT*SuUCoS:4;>d'_Qkl:lt+ZC!OO0GV34$^iJ6Fm686+]`6V2m&.ZDg&^<A'&8bhLpOWc`+c5,?rL#H4pc`^Mo58F`@iX
%G,t5bRoUp*`<[B2T%+dRS3PI!iM>51)QPfC4fqF@>alt'm8n57i6:RE`5>TWhXk6<D#7>N*`d2enQsd@geiSuX6?4YZKRtP%UC^t
%IX:b1%?6oC(b.\D@tDKXNjNcs??Y0M$H?\iQPCW%c4?7kb1:Ai=TK/XNRgp$@F*)@\=TleP@8;*/4V?:IVfQ9"7TtCin)qmB,VK,
%&APBn"?L\SdWG6:!R,C^:1XU*SI]5uFZRPD7n`PdpUcskMYKXEk<4$"?MPX.m:1Kc,P1csgn3/EA=bf)m0;`:G@Y#mLLIfTb]D)?
%Rc(j8os2VHg%i"dN&ld=e&A[VK_Sf7H$q#7g'Q&Om`7Ms#[,>>l6.pD<hN&4Zfd4i1KL1>88!./Gm1S+@UEfZE$9:HEGO"3kc9YH
%X+0d4T_djuo/^[B]HOi93-s97$@KAL3Vm+:UPZPe0&&-2]7-O(c!nqrk.N9^`/u*ib;2s80WK--W]>@^reRt@o4u$ieh2tK<LPuj
%O7%qd;:%?AO3V.o^gjqOTLAa_XJ2m/(:rPrpn=HuE;HRfc][(p)NRXIMdguSO():bXEOB\\S]NgU[ctd:0KC;Gs!Q/-&B0L>&2<[
%<ogjRosZ\7MHfBUgpS':?HndO2X8Fpqok332VVqe#=bioX7aegSgR([J'n+c8EW:ErejrgXYk`Ar>/>Wcph"0PoKDF`Tj*''RQ,g
%foOGl,l@,BJn.)0=-2dhqA3F=XalfSW9*#-f@COi:<tSQcpcPe0nOdL4epOIO6&ZQACESu([<P"&"MBT98_%0PfG9@H]@p4\dcgJ
%BW\W<TY*28o=9JDe8A7/anOJ?o(;K?qr$'IKC[+FW-,CaR4_'KB,%H%morQ8bK\m]^UMb[A"ego>mVmh[6/Zs/4.oIH76\p>2@<Q
%\S&8(ls`Pm7;JJQX%oYF]6RLJ6WVE^\m'^.;,aQbh4cT)^lk^h/ncNRVt<T.[:omEde`W%j7g17J]SEMWrn@#n782sQ*1Z'J?pg,
%3mqrKMgm"d)47pID@K:Bln-D1jKkWW+L^R>,II9i$@mJJoS<3gJp*AXoHK[JXi%AD.,'U<Wj'*IK6J67e;9UOqOLQ"*sMNf04,dU
%s#P$4G5%scm-[ADYhuoKqgB3qI`)09ks_XN0<6;6QM+I\1*WgGI])]4'j4'd'Q*9ai%=6ZL><lX/613hCh9iC\!DAZ>*PJg*8J.8
%:0NA-[0u\TN*;RZ55Fk=b>RH&\_gTp2G,JrojZk)8BXmQ*Y7B;>*_4Rn>5[3>.bXT?f`D^qTC_8f^br`>H8.=aER4Lp31Yn54`U`
%T9IgC[r#9fhbEPqPGnt<qRl%%W3E!Pb-#>%GAuqfldqkGSF<kV>BbusqZ=egSXl?e*F,s5Z<"D)jmIBCH3::U,;W5pne5:ZY(PMP
%aP'hPCT+jn?E`^1Ip*u_q0BZbbB>E':Mn^bW`S3j,&;CGYd9\hg+D'%s0>ro%J@QB=08*ZktK"gY:J,+ptB@_8Z'qtL\?eoeX+Bj
%0WKc#[I"(nb'(f5$cK^`p=3KUkq0-#B83?K<b]kpfN4r?=gND!^qNk0k*Z>Kb#IZ,+,JUnSiBHmcPG/7Far+$#56TZbbXF;^A=%8
%:P!q*;11<f]/pJg.pJ2$_ooBX/[2E0Wiu)pTrnLpaum\,W/+a^q_0galK`56pHuE@I:[S&Fm.utlmn9Vbr<r`fN/j=B/rf7'A-CK
%[_`+91C!Q\5&0blJUKC^@"+-O^+r`;mG^8j&+$?u[-%h`.uW]YU!hY@N,:&Ha2#Ep?'nY?ms>?,.uW\F9'_j7S(GlTW'5VTr`K@#
%8d>*GRL#KDYcj!OhnQ1pAEtGDY?30Mr%aK!$LB9aFNf'bEsD=QX5ifD^=q3$FScK=WfFeoQSiq.fN74:Jo`H]MS!OJ)^>Po*m^<6
%7bgr[d6?(3F\L]]Ja07Z:NX")l"`BI\]`s7r%JNW>d*pf4lKIIZg%9#^G7UI+`?VG)X4)uW1MM,gNMFCc$o/qcF^UZ`2[_i/=B+8
%FWjeVJR(nqn-UXMot".'B2iq^;^L!ioXSK/H1)T>YHq"WA<NWlmERW?=irO]s7LWdWp\nsIJO/82Xg\=r:h?i2AP]\p&+SlTDQ?8
%]9p>#Y!0<*.^sa(Y="S4O8lUCSX&`*FUqT^=bJ?=s4:C)KO$YHd+7F-[E_g\H2OkL<>8cAmAFe[EkeY:\qJPdk0QF"0co<O5s!H.
%6#1`+gF\I*]6e=1!oV)0>^GMd7,+9)E%L]\dI8H%9b-luq.sEY-]O%jV[Vah':%<1fTDeBlmiO+X*I617Qf60Bk$k7o"D<7ducsf
%e(JH)*`9GtWn$/X@hn;=_!8/.k<*LeHi'='X`eVETDj^2:"FTZPLT7,0umD;Z%HsUA2IUo*/-O+(d1NBl.BO[K4F9d[<\g4]BX5C
%N_+,*@fP.F?LL;ZNYU`o_tVK&]qOBX>jjjL_8*:_4%.@AZ^/"E3?48I'iYfNcG4&BWU5l'VI`T^FS5J*!aoqlCAYnS0C^S1(aGoj
%2N$+/0-i("N-#T_-+@']QF4%#l=T3l#fP4+_/h;F(ICu3lWZ)iNb]%;URkif<a<f)))EtHFqb*:g+0?Q9^cT"GbjE-L("DoY-,[r
%Mtc`5?a'!2?J@g_[DueSGQ5g%>-%2G_n1DH:*=0-l+`7j>NrbLjhVc#)0HeE<!mX@dsjOGAHlYVBrsOn>4;I@=]Ks+GQ43)d)Dp_
%C;'LGp\K%NK!e\?*fmc"AM'FE^<Z1FQ#H#3lMU-=(.E,S8,Ic7UWu[.\2l#sIiHqc^@gpX;N,p.r0#b^7_N#9aedN2.L3)`AQ5o`
%;AD_kJMHj`kooo;(eAfG@(LkO*`!l(*fgj\GPkEKdosdi[>IXnF,g[Tg!knU3dp3)h3YR0i:]ig\-l=Eh06WbBieL/CtMZCk_D4&
%NgFTHZh60JZt-dNWnN#'670H^q4W_VgSMf_L>t!La$%SsdqZnYSj1eN%$U,@W:<VipQ&_urA:54cYD67s"R4E*(\$mA?EArV8K2L
%338]aF4ABCR*M+()1:.bgoYt"Y@J-=@QKFZ'f+<e%$N?DQ;&1Vd*&c.4-(Zk)P9i\8e$_t^[bC3TF<R1+.,1(Hp9=aIPHt7ah*:$
%W8[GalqJN"9[-g!HhW^3#]!:\"P7>QaLl>5b&^TDm.^NL#4M!UjC^VM2gRZtpTrE1J$#@%'?*)J=?C4;M!1rm-#["PR_0X<*PORO
%'b>OUV4'#E"X:)[`2u[<?[k&P;VcT5Q[b15T?C^)6nu!1h;CD%amU#?$]B1egr-7##Hctdj6u"9+33j'7,We&[LP\>214f!/Cdu%
%Z;DP;fOr(]L42mG3,]OfGZOM4T/YT3e;)*1Xd@gb(.&'e^J#,@"X6]Bl+/nA[&Y1A%D=AJX=S8lU-eldQ=VZ/Hi*B6:;.N_B*Xqi
%JehK2rgs,M&]dl9Jia;a=F<1jl:e('qRM\glcX5@8kuZnS^-"2^3-lJe:MK7o4caYMqqI,)_"ubBcVf4;"l_m=!mgWJ.SdKg%p"L
%?Of>@MWnf@CNm;56!!:Qg,>Wkj,:NdcFDD<51S,*7li]k<Y_plim_"9(ZB?IFfUC%op+F#+Lt31PD8W:=@Yjq.l;(N*B3Z1CA6d^
%CRM9+M!FZp%]d`5"4lWt(\79mr.,<tF<+*TG"l'"g2p[L0?+u+[Z9"C^N-s_C_9MlWt%TO1H'AanknF9?0*QEM,p8-MVY&LHQMb4
%9A!MjFPYR2mdAWg=HPdM2="ti?$%[aVLI<(>>uiX=`I0D0.'$7l%JUCn%2fijbX5sfUTW7CjD.>7n@sN=[QfU7%Ne?bLjS\Vt)f&
%[*Eg&>(Kg,]DK@<2*MqMVCa0Q-PA&`gYN@dc:K0)rA,sPe@;Q0[c8aU8La!qeUOR$mI_$]7!a"JW(K^NPV;M_^X[)D\ZMoMb@I%@
%_"#l7N(Y/W4LVVN"!tnch$,@YDo:R[JY'AO49H&,5R6)u4X="HMXO$fglABV54:nD)UUqnE3%Ulm@r%_4Xnl`V-UV9K5@Br<86,D
%KQon#^?Ia*Z$^4"it73iGrc:(XELpS6JP='''mO^RYd]lOMna#L_X6/SWLe$nVFj+\d1m/gIa%.^si``X;d5Qf07EV.O;9:4CY@J
%TOp`(h0?kuOE?C4]]s`0$<epfoQ*5tfN7l>h6T7Ff\*Q9f8g[?rN#XKWa6_slmk7tpJ3nP=DlTZrNS]Qd/WTFL!$8!Z2W_&$N"!j
%*VQRq'pe^u]ffE[aQ-YaA"PR)'"*QuV?[W/LsjlbS\UW\+$AoLZs>U$*gTkG]QRD"i3K*_%spOp>O0,C[V)8)kJ>&K]%*h:K82=&
%[HdG$6O\u+NN9o@n\%,2=FDmO3Rl[ZK88"6I*(?CmN+Kt'm<qG/6d\jlG:C'ZVi@RVRHd@X-HV#o,J8^<Zd*mZ\(D)GZ_)2RFZ\6
%n8PQ$[DT`(i]UL1GZ]Bgc.S:Elh\Fbe?JSQ6`&%K4F$'2m'0nZ/=oZ'o"i6/eRU)*jjC0@%j"d3@5rGdo7Mg>Q*23OdaKZf4R==;
%^P<%)>qYgjfR!)%_Zp^Q\[7B!l0uO,W`*MEXn-fZ4Ijcl_(AtTA.q84d:u[b*Em)9H?o"aC.E@A:[>IRnA3$-,Mmk2g$7Q/mg^F%
%XFBQ@modNfg?p]E:191o*`h`posrJNh*-)I<4LuD\(piJoYJF[/hIjM3e-Y'24*KNe*@>^4R=qijJq_-@I9/7d\FLh4a:*-g*%uD
%[g*GsGV$Bg]!*@2m=U2E^:o5<\ps4R1B./<?h$IuDT:_aI5TZ[kGm-Yn?A+#$@<hTX^4)bT%;qSLXfXeY'S3BLRgS*kd#4^!UApc
%_s5h`a[11jk[>MpI"q.#3Y*944$V6DH@55/(<h3oYddWajb&=oX:BFFi*d!G+7@j*J^,<!XQIr4j.4'D6hU-3IDt&fLS=RH?9<h3
%f(4NL&DpLeg0s<dq[O]1/.9+*\STmrK88!bWL_dVGjl7oXo,Ro?>2PcGhCDIBD2oX<l].P'ee#%,4K>nZs!@]@7Ng%WuaC)p)(oK
%p%[HR[DuD%OR2\W_cC2^6.NtIk78V7UMKbb=M%eI.NU^R5(-\AWnuQaLTN$XXg]6LpVFaB6@N,Ie2e*]<mMM/:0;5^%j%%^'mRR#
%?-JYUl]s&`$[MqWhTRI3K3(/bEN#4'>H\=A3U^kk;6Do0@*>q<V;hi9ITZk?H?4=A=ds,(%qD\Yk2P2YW_s)(asao^X>)F,GP1"E
%`rWk=]ROj?SR*m44Nn"&EsH'47L+ZsVpW<$['qqII^f>p+IM#84n7gho[:\5m)-]Y_=mU8DtVA'kcNsI$f9U(0,rdEjPN+=-XAe,
%G)edmGd#.0S)4.FO]ZA)Ilb@**W.n3oKJ63rpG3enc*hUm^ED6O7VNbhNt]9\%OFjbsUrAZglfI3kdQ6I@WA9H['ea(jU@2r/s0)
%h@4Ber1/9tIXHFUoW9#!A:I=Pl1Nm#>V\&W@gWa4L4XO>Cuf@*jbHY#k6?E#9W\a/dHR-_YPZf%Mt^ElNJ[CF]-DCcB!.:'N(Y/D
%\GEkl89]f<Lh<&WP6#ofJVT^J;aYJA?LK<s:qf3=6XIfNIcUYF^S5r'".A_jc"QHW@V2Jl?!:U83eYAfhUgASmmpMW9UWI*Y:_$h
%\Mlb9XhFbEk,lD2gO4=j5$k8A<X`&X5;>7M:eu5Jck2GAX$<I&*^APqP-gRpMjsBQ+g5[!p7AC:Bck6oddH1D:T(!8`kSVRQ&g\A
%lM!^p?[n<f6j'3DZPPCbG>%r,8j5>J44'?55*7]]-f60I/70=?V1;O_,ML2KH<SBhHS++2m6!"=J,FOHYqe?3GAVG3F&QJrgWsZ5
%A&m>MP!4c"-Sd*0NPOX_?T'aJRYsBpb2edAamm@Vr\Z042Z+j;No[f=)risp=\Re<1-''3bKZnX2JHG>hO'a6rG]7i-2JV,J%/ih
%^,_\R]rAPU'Lhu[?&jq?_[k5VoRjo)1-G_(/54J&@_UTZ<WISQCU2j3r&n25+*KdCJX=,84XP:lj$g.)9MkCZd0`IKY;PN&j_bI[
%cBOoBVUjXNnj^6JE%o%T'$5bk1*7;Zjs`75GF'[fQ:^UBqHG4()dl\Fij3NS][Kije3cDD\`ZNtmYcQIAb&[h%HlXKDX',")f1N`
%guqHQD5u/$`@Uni9W:O#S#Vip.1<I`=!qM8A>O]Mf%r%Xb$J\]B4?7ek%6tc#FPq5HW(D]LFLM-*V)A_Li7;f42&:O0`:5%o(R8'
%Ie!BrmuM42"\Znr-eP-5/e2e8?L8.`M!jt#`:!>a2u!+XFe1BD>+<!Q[b$c:2(:nM`q3VN00V5B?_[Poa7We4T>D&DG^h!Mf$(!Q
%/)&IFpdd5!R"FR_9S'PPdM`OQ^%jK7`r:cJ"b3FoV*3HJQlMTF?XaAtVhRp,S37cj*CM<b33#"KN6(sEgqT7<q]cV6*^,=&Ldo(W
%VboI':S63=K@cMG!:g]oeW23uD6bmn>P$Uj+-dQ?*8RST'VKPVi/;=^Ba#gu7[7g8lYGeJn>WCLpW_dkKX.Dj-X>IW>=T9bp1@NQ
%(&UT$E$1$0`L*,fa-_.6@nDZL\_.9Y5'sO`9`<bPC<KK%Jd:mT%lU>upj?;kp=mH88O%#BJ,Qp&ku\/C"^fI891;q(HrZ=">j(t"
%BI4YdqQ8eifYD"LnhrZr[dZ2bB,@Z9-(CWr-g;$6(S?_#]Pfm`@MIn@mmLGf7H&2F54<?jcO(p:N2<7P2E/M3JM7F32?uVZY9.TU
%([hi?fq3ut7QRahXH%5c3hOO&l0ca3B;9)Iij5mQd26)ZrL($,_<L+WRrE?o$p+6JIg1%*.Y`H8X,9apg=/i0?e5&^.RqaU'oc(L
%oTtUAcQ;JC$.`DpSeF70*4fsfq\MW[8T;7\^FA=8bm@lr5)B\,C32>l04@s&/5pZJ2uLc^K8W&Ws&D%.0V&HH(\_^^S6g#iZ2?QR
%-[qql\+T>jG(FUWI"#Sjk59\[gH$%-^5ZGO#-.j\Drb??bkgnH(SZq.#%,E[V`X`K(/sftJ"q"udA"EqX84VT9`$K6]!2V'Fjoof
%5'9MG2d]TEL0ZMU_!@5U-Sk:lnA"nkV99Tt*gK<Hdbe8uqYn`H$AVD!?VT>r*A%)Oq9u%Gmb\L,kHoT6r[QgE/Y]Z=:Sg4&n`EQo
%@Z67o'FYbT*93_nT]jQsZW$j78"[o^l.V3(09$\p/$R<3HMM!s/%6U3Fi+TgrL#]%;Xn>3`Y^^?eSlEK17)(%W10-?q3bGj)'9?T
%L-Mhurn(>:[n@uFhsX%t]Pf/*-e3XE\g&Y6o,N1X\jn/!n/QkU\jr\jqDnCMFcT@_oQ0Z$lAjp6cgL[nduf=7hF]ai1UAOE=IE"'
%F's..m$Rd"d0td_DB%$iS5Oj%/4Tnu'uLef1DjmqTea(1(NAa._qUJUR/4,-'NXal!Zmn\C$(,TcX8d_I&8:U\mLb!6rZ+aREp7-
%4*5[R<]>c^&pf]V?NN>^XEBK(>IfL`Nh:Di#8Fn4H.(?h$a#Um!C>RfiR65Bf4n#V5$=.##@/BVcfAGAfl<T5T=`&.<#OGb'mR/9
%XR*8K=8a#\Nr'^)lH_ABQ$l]qWjeH"=uSoDLE"PI'R]>,:q04-F5c,r[om.0]FF>pkM(]VIAse&_(KW0ZI!h@@r/W+Y:DhLrUo:4
%=b$!KY-^F,LdZ1[pc966GeYoMT*g1tlbaHUlY+TP`btD"E\T]7?T^Nco!Xn2Q79/?ZjuXgRD%uh,ATX:3.cOqBt-,dcucSW<V9fR
%><1W-2(ZH+B3*;pMu7^5Xp3=[%jq[f(&I)TLWugM?Ub]CQPRfZ<0%]TC)_'ihKiCe:I2PO0<J95)+B$U5+RMUPVufqfb'O52Q[2u
%<Yl?NPB<-nWp2B=0rgV``oq@cRVW+:K84O,nET;.M>>Q28UkdWGSQ6EGA]Vp-R*c&6B<'BIq:,[r(F5@7VVafl2l+CXLj-ar62\9
%]eB@a0B(9(>#1&@V4Y#Ml%<a[C+oSQIdr+Pqlq,g*E^R=Q,`3gkZ.(Y<Nl>Q`tIYjrj6atMH8Z-o:5&$N<n7K^g293oGP1(*B:@\
%pqK7!]t;;Z<5%j4#@H]6T:M1VWLM"O>1UdeeBQC_\pq!Tp9YiJ2nSJj]'mQ`;;XVVFga9Z0)<HPrp$>(3V7[[iF2Gs^5l:^PL"(2
%ismP[Yl+J_U(m_uP?7+Nf+e^TY<sq'^ZW4YfLGT(VdPGUIRP3C4VEAug3\-j#TaMX4,DG4o$OUL+LTTZik%(78%<h<4SCWCQks5>
%ZYB."ekS_ga0_(W;fAj/rUl@i:L;=/AnYh,`ml,],6*$F+ZJgugl8nPp5\5tc;NuC?`3i/lh]Kp[DOVGBK"@;"nfdckkss(lYRhA
%>o9V#]Ot7dpMjR;KXS8<<Pq_a(M\`]^7TZbg*V)*R-osI.D%uM]7\?i;`E+O-cpbOgaKfuZcc-OS-O82dR)#S)O_PR@h4$hZ\u9E
%E[/>DJb142T't^[&)k(0;chNdT1l.)5s!!#82i9pl?5t3f7<eX:i5Ga(U.gc%V45aA#\Oh<7;\5ZXmX"oC&;6;G$7FFk@Pn2)NQ&
%\:02A^2O8mDdO.[;2i[c^#6i90B5nYKKA:5$Xqbd[2]YehS/Xs;%0t>0b4Y6hmGuH*=YFA?OE&Vat'&rrTrZVQ#!XHo"i$fh.r%[
%BHK<=>=r%B"KSX1k^21+b5ODep"Rcl2Rc289^e=P=cOKl7uX3o8\CgVcBCCcDm>b&5M4X4M<rPYc,!Vc6[eA3X(pn?hmBbqR?-$n
%O#\T!bY_).>0P$=Oh&jKQGg(&N5q;aQC'Xu[oq/-CY[KVg_O_](2R4^`[bo]Q>KmMVTuMRrOA:OZT[22jp)#-=l[E8A?`L(0Y!;&
%Mgr$."-_V\Nn"[*]R]qI`U`!rp.t``2'jgLTn0c-$,+roKfJrc8LO"\RR%V":2k)8r+UG"N[F27JM/5u@OUUAOXr:Pkm[kr%P1Ld
%;6!A"N7.;MnWe93d`eJAhFmbpFEQ,H[a]K5oX^<BhUl5u"hQFJAF3&="o9X%rG+;GQNWN/<8:G2GglfiXe!g7XO4Obs(+foE1$7*
%hL:d6h>[5qk*U8S&(S2sFcqEKRT\AAYj$ffp_SQqo>62@&K]]S%0TCrrV=OBq0KNQ&(F_UWdjW$B;P4)+HJ'I_1D:XH`:'[C[%*@
%);F:ea85ZFruu<m<mHAsk/B')h*5!M^92pQ'm28n.0.N,8h`1'kk14tS0X/.9FDtb3tjsdOaa$bI<uf?gphHI'Ag4IEO]#l;GIu@
%h#,uikKS'-f6R4cqP-u;l&Usd3L&TYJ-B]rroEgn>IdYm"lf\(De6#c'JJeAk6LNm-7^\CqJfn<5*hA2$ZjkK45o\]gIqe:L;P*N
%BB4-lZ]a&N'+j[jH;r<EK]g)HFu:,k=A/S6l%<(:jN.pXI.^#^WK(iNM]*SJeg"LlDCM==j14+?G%O6$_.NcemVc0ZY;>Y)8Ve7B
%5'4HsD4R<_'8YN,kh_FcB63b@F$s^oH^[i;+3aV-0bH%p]\d7t;"U]l%b[0G:tWY6Nr8hRoZF)n>C!T"p#4uNLS_1m`cd-32_4@8
%W-tp+@D?>LEhN+:SY>^(Q\Y!107NoB9p6V>5B$nfD`?2*]obir31<sO>Cno=jdq5'[X:&ED,QZ7,NC!mEb,.=jl9.BP!<Y:AM;XH
%\qf<QEk-uDPhdPsa+TW&fNU4C:S+HE6*f*4/_<5p6d%#O9oAJK3TmS!^K&9crVC%o015!1K2ksIb%,np@qkNX,<Nr3<4T!/[WD8a
%d9lPho@VPe]XB?rfp"TZ3lZoU5!oZ?\'J<NjdtkSqDnL((u(P;@dpJC!*IZ,VS:q>XSD*C0+K#a<&)KlY"TkClKhG^`b+Z:n!&c0
%$*@\1n)_5Xa.a_)jWSYY%E'5Jp1blJqW`)*j,]8ORZ4qRZ$q25,++F-8n4'@b.V$aA!9QtZ+&Y0bjTs[-hXG$fV]f\YHPo8iG'j$
%NO2NZ1-AuI0B[tQ>Ar%[p;[([T(X+mR!UhLWm05KfCuOrE>A/hq,<P1N<oQXYj,qas2t8XrqhO7ff3::Z8K%ro(Q\gJY0:#=%ouB
%0=:-"Sm\^PCgU?sPPo[I3f@)/?MaGD"?e^uFtmHRUUN0jT%P8G$_4971JW18FBPa>;"'mfr%rnVip]h4DiVJn`bQ:>"o,*<bGEph
%+)=?%$@C-qdn#K@@?1%2F7ucj/dZEN.sd1]=f+qV+>l9B^.j^9EWU.n/_!Cc*&qOOo\!3A02IW5fU'Y%?7"PGl:\t2j4mQ#Vr<#-
%VW!lrdk0*M_5:qB;:$J(ZmoiP=D=9W\]'NOO0=n\.sd8L^;o5]q_55g0!9*YkiLQfmYY0j2BGL65&W":b,FR0e9+jH)4MB_MdC_j
%k+p^sW,nNfb/f#a5hsKCZ1.hT+`8=f!PX()m87lAS$,5_gaF6_:^BTKoLn$$T_:_*^14F8g5(Qs*:aa/q2$#_W!j9[KpYGlLji&f
%6;B0BLBhF7qfk)D!=J5N:!9cM<Oo)u8geFMHo/RbOal@drlN\6MocJSDh9X'5CGO+<mCX4kiIro=d>AK8RKP#Z5P>)rt;K4Ilq@e
%Q;r%%AP;[bjQ=CQ*1`W.<fW@a0IQJP;`@4uCZ4d*=eM>p("Qht7a(0o'Ohu)5DlFhB&g;1MLg^<TXCcN?^b+WI.QlfB]M,q.E,YR
%j^@3%_.g/W*)B$#T1bIdH2(6s^.#H=2YD:1*34k:YKGiAjarbW=`mc[Bp;P)V%P_TX,B2,au9[A8jacJEqkWfR6@sI0+'ntPia5(
%f^$d$)6:7q1`W#%G56C!qf_I=;/`skUWlT/0250!06UrlS?bM!A*%=]ikni+Xho:#Ud7j*L_n):f=e<B[pGIsnL&MjK[h-9=k>QC
%rme5dT]Oq4[\mSA!n?Hi9LikPYWCG41/(2R0VXpeQXMq\3.3?Z'J.PUI(W[Aj,PFQ\eJQ@C)NnD2&KiP\la^OBFVt_gifq2e'T(-
%T75\(Me/99emS@,D$cab_fW6iUL7&&b:js=_8p)s>DDBU%AjZR8ip=5l"CM1]["fh@6.SEku5oaG-_V+d2IstDa4I*^;_p%q&54I
%ZRf73Bb<j3@i;/=24-9P[h[(?*SEH$k-gajR#]a*N9T\<)5a/dQr_5(rA%&:CG9KdXfH$#Nn.Uf7*sI>9LikP`Pn(Qb:js=_2)R3
%>__KV%7Zt=k[k^0`Ysfm<]%:EFM&#<i=)-3"5"/YTsX(,Ml=&]!qo1=Zu3@F3`pK$o1co@QX1G5<&+'s?$]Xq.4M.E\k=]70&:=W
%Fg:0$%rW+5N6a"1,)TP!HTLZL)]op3Ir5oep-l1?1)&\uQeJJqXd3Ke72IqTkd0\"eum6hkc5c6NY_UT4ptSDB^<+*<tOY5*>Nu<
%?"q!_/N%nkVG5Z[9+@MIGN`r#Q5VrFnce<g/Ro7.n(-R(f9i8sRsP$^.$;FBNB+(#GISE9%8J\?5S\[5YE$Z_I63O!#f5`^E&]h5
%MD0o'C!%G/Kqsu0Z8]9UFn9WSJUtnu(Xe3uD*Z[[n<h5Q]TYc3NWkV0mHVaBXTBB7QD-+:GlDbVBX?GITTGI"lZkD^h;)m,#>]W3
%X"r3u12>q%?'SRi9+irqV+(d>M]l&r%qj.h?VFW]Xh5K*jV%'F$S9%(`];(aam?k/dHK[X@K5J,o'U73c:DKXgMbC"B9b8j000fU
%.k(n%'G5HR=k#>I8"K*<<SP(Sm6ta7a(Rn1<;?*=lFCNI6[)kNU+nbj;HWmo'ch8bapgW8-R.g).Za-(jr_dt\+d8#ZWjg>@l'@M
%Ms(Me*3,o_KHf`5H7rO;""F/9Z!]7*IW__6"&daYZuJWk=-G6)gWoaU3@"sk)P?)3qn6kb:Q`r$as_kCND[8X8iU0V,IFPKL1d$:
%dlLW%$brfFI4%fDhoiFadt,WmLHFe.h4M;Rqpq;VmY.r0;>$NDG#<6"qUli*a*T6Le'11jq9da7\gtG;(P"s209>:U)@,[%eoQfc
%hKAjC9C3=iZSL@.[^.o]>BiDVn3tV#o$5S;al1q/RVt\(^,UJ*Xnh843S=op*S+D[j^64r/s`X4l94C74Vh-dnRT*g>VigdkcXQC
%77c.:lf<$d.V%:Y4I3SHMI(bq_IG%7L5@W7K7HGP0KOb(b[1<M(Km`VP`Hn^krLWJX+0@AbM]rqF`3VZq$lcZ1:MR$>]0Q37s-3.
%!A))W.W<40OJR;m^;!;n!=R%j'>@_@_?DBL>pVHjo)07jh&bT@jA0F`_Z^!JBAu5lK>0;=D^Xcar\2<@\6lti++3e"qU-IrR.Fp[
%dgejn<G$)ahG!LtY+nWtoVSTtWAXqs4FK6D7Uo/II(\ulR#dVLAF^aRIXXF'/,,UKj%u,%F;d*OjB\YZ8rS\JX:4082l1>O(^cb<
%k2$uiU<>%#Tj2/RW@mF6K?%6Uf8-4AoU]'A)#+KB\7`.WoW*7#^:8O[D.dF,F'tVCD&'oa]S!!GY4Er"%V?]XZD[B@pYF+Gnm.-F
%FpG5%^O42,(\dq>hQ21;h">dD]_ABmo6VC::."/^mitjD/+`!/1uH?.p/>&L/PjLL'T@[*T"s2i`oLJj*Dqb[.YE!orsJF+H88Vb
%NNKn@WF9pD*.7JV[i#6cYJt\eiE^u6qoC2CL0>U&N'5-)SH$*FAl`-]:7Ks?;)dTB4oUtAYjT]);R<YIHT8_XW["Lj-h#,>KS]<g
%1"u74j0AM"OEf6,?tFaf`j#8I/fL!&31A.SRS$ZE?;4o57a9qiF.;=Pq9PmE07L+H60YLfc.n.)C$r*!f4!r>UFUP:G$L!0+#;jF
%NS_f(&*3bZlhacGLJ`O:6tnI$ij=2Mn*dH\LURdQf/LJAKcHi9:G$J\rk\'H]=!EpX7o]qk@s&GipZ9bn#-0Lri*m8jiu%$?FdYW
%]=dF$1u:[D(4*A*,n^$?';bTjb-ucskJk]Yfs?r^hU,Te`nGBA<o1\AI3j.Dj35<cQ+noSCYY8u2'$X*IU(jEUN1_$?`mWs/H&kF
%GeN^r).RD!55o]=qIep=>-&Ld2ra(qQ2-:*a%Kds"T.HW_Yg3#?8U0m@A?3*KWW(m`l,as@l&$IWQ5;n[e._=;`cij3OZ/"DOGnH
%if1TJnr<QU?=#dA.:(eiJakrX+%f9=9PF%>/fJ"W`G&cT:A*s;F*Y&UH$qiRpB:,)p%(TcK&gjBjOC<_Ns=,p7e>5mX)YHZU4s-5
%2lVthUCB"qb]^e2S]L<qFtijtPP?K:qN]sVl<GK(3]NHs%PH)E&'K"/ZS>nG.*6@o*IN"C#X::97!ds(FKc]r=jcQYPC2(KiME_r
%2WZ2J/k5Hq#rtc$`0gJm=8];cX(42>0HcOj$cMsBh9%?`C[+Ys)3o<OV#$UomNXO5IjQ.d\"\:phbNE?B*IoH'ZgHrGMLtc]6bMm
%^#&c<B<_+DC^/@tW#k?Q`OK9K(tJ.@a\#d*3h%"Y^A^99YVrg+rG_0V/mbklll%Kij?gfBbJ^]FT*\8lbn:eW(!Ekals63bY:Y]<
%]jKI*S/m-LBFfN]OTIBba]#iuErL4XdWDdiZ\[Efb<">P>CDX8n\!-XVG-GC5P3G4LA:)e2`&_S8MHKL#,8fVcW%9:9XMJ1gk2*B
%gTNc*)ZVn>B8fP`QVGeA.kpe^rb]1H5SMW:Pc:_abaSRePhCidrJ4VJT:7V5kf2k@aa\3N[!*No?U%j3^g@pm`T[7a$GPsiJA4SG
%5+Hl`-%Na"oR<Ek<UMSl^IIk0l=iBcnCNKQQc8S8^gA=4T:emP!W4gLpU.Wg>6'/4k^Di=oG55L,Mp):(jt4\!.RH0^2l"qrEBCs
%!r+he^@*\)^IIk0Y-d$ephN:dpQaS^d9-I!NTbf$hUlTDIuWZ?j4UdIi-0gql0=X^rd#[)-iLCN3h"?DemDLD-=$7ofO*fti#hUC
%jYiQLg&GK1?+!B7s8!W3Fj&G8F8ia%L+T;$;uXAnBu4FOIsm1-c"u]\#?a<9rM=IYoh[btZ)'q_"Cr+^9lq;!iRdee"?j_U#O=R&
%r9WYq&7T!N54Qtc]sXfN+.5t`4o,CQeNuWHT.r@g4pe.__ZRQPO;b_SL>]<Mh2>'UI61U,N.1FR^;.91Q[u&,<e)Pi(4R9Ld9!ke
%EkRgC"])BN(kapJV4Hbgi9#5gZQ6qPUa::CU1qEYqSIo2V*V`7O)f53/t'l4UXRcNQ[ImcOG<sQs6Ak;]ugt[/mVc?r8'I2pXMXg
%^\iQZ?VgT$rgW'KIZX4-E@_a-V!\L!AlRm[pW*,SjI6g\;i;/^.lS8?2g<$_*rat[X_<KnG7HN4qPX45mSf8F<WB"ZaZC6j`D9uY
%dHX\'HJ8*HYCBFKF84X@s8"8GfTZ?6s#-YOD4/aKM(J[mW@dYl&+O/bs53cPs6K[E04+ZiTD2E6fLWkk)TP^)_eTHj*9M_MD;W,%
%'k]NYSuR;<I_#H!l5=0B2/Q"aq4hll[#ntF2"H6I?i1M3J`OVFNA,4HJp76T,5X[T:\($sERN&E9)b1$($EikcVpPb5r6YDZQsDm
%ELmb.DASgT^<j.tAkapSe,DJi.Gp2TJ]1T:iql;'$TTTlc^Rem7>qi^:!Y>Sk,2NAo=4:@QTJYJ^[DlY:d[<F%9_3$<o(]Tqkl?%
%5DbD?H$=_f^\d=jr78X\rT;^Cs80-<]8t%Q=t)$+)^k2F/,3i,9X?u`Cmm8gfFpD/NLIQtppqUe+sljtm?)b0BJbiW,bl3>ThL3T
%:1!-;6;_)V?d1HAL8c^O&EQHcNRVknM3KA!jWoG`XM.<$VAqmn&2K=h`hMi5;.I/obS"8^BH/sp8B@.;U+$.BQ6?$d?n[E-F"'p:
%fSIh82adP+PWf[7#Pa#:"G.nF]l3Hl#)UsU"!D-+^F8!c5e?o[D%_!@-3`hHTLIWXM.,<GToh?o9e&b(.S+\SWuu.A#t.JjQm^B`
%'84U]P%mKr(aP:&lc.K4Kq_eLZKB-a$@FuH!nd`FK?0>jAVs7O$goH%ArqkT7/c2$F5Z:h&iRW]n3kr=3"$e%qLcRVbt"Lu0[BnQ
%=\^0T;Op8`.gM>=W0uar@RcLD#+eAAL'`K'e;Y<*SsP:U.#[_oi=aD#bO2Ap#\4Do6gX]E7gk0=71#Gi)?d$=8<sgfK_e#7JT&'A
%IMb^nkGN#D`!M^J&6`XZP+-G3ML(MX[NRhl1/AUVaA*tCOe2s_+tQ?Va[%P.c\)>GSKs?:qPL*::Q5e36@Kc>-55M9=en:O"WorE
%<A*s,Q0HJ89>qu>'<PCOC"j=[UJ+:`ooDNbJWM*723_X?].YWr%AXQ0GnS4YCPK*m>$[X8b)mOo;IqME"sIkRM,[!pDBu8R%.6O+
%,LsbNj%I:_W]QDRMHm]*Cf*8\fKbH?d@p5h(>U[+`O?^?8Ol.F_#7;47H)Z'84t4CVI'ta:c)/tl69;_5b$P2[[QF:=rBU@Ak!9J
%5g]F&<)b+O\<qoSfFW(+8&F3'):Up;2FD3@7>9j&X=.MAKHtgcW_6AXY1hUQR2,@8e`T:qdfRu=Hq9,1N0R6MFPZ8#.]d!WD6g2A
%_R+;^?*ds021*]u+'H2&M6`\YJ]FbWOdF29\b&)g","k!s2b5U?N]j`d\d_s3+BNa]C4YTIIhQ%p.P>^oPjDOq?%s>H&pT<H[P*c
%]tAWRZM0iiKoNmKZX:=g2p,8b/LaP6'_^j`6Gm94iJ4r\l?QWP]]Ee#;Z?R]iFi2]hJrm"->BO9+0HY+7K&X%/X\67.^\e*1;@#c
%Fn$J0S]JHcGPA.k\'2=%olP?HeGg:!on+qi`W$5Pgd7fZV<cYL2T:pLLLKV)RHSH%hs=VH^4,oR?Zk%1#/%LgoD]e9%1h@(mPI[O
%BdqZfbqHPP7H]+ZK21h-Ej&rVr;6I#Wk?oMZ3jcbHi@ODlC2nY(Ot?@(04qH?OjF@Vgf'\?^XbnVSU1'[G%qC]=Iq?,Sg/%'Y8P#
%H`0q<e7gX!=5Q%l-1&"'rMPF_T3"c"m5rP:jR)\`J$s>aJ&T8%LX"b)D<pCqf)0MCH8RXOXi5!0f(ek1HLq$7iN9YW:[?3!dk?p_
%ki^1GajK=qV>5]>bOth+#;7%\d8mcc\2Z>@kE?;WM-nN?gR&m@\Xe0dNaJB3q<5u`i81Z>ZVTH1lT_"b&'*P^I7^l]I%,N;)L?Bb
%5C`]J3<-K"%*Zt5]j@3nGZj`ABfB(IBQ:5*s%:h_UT"C"Cc!Y0na#W5lEYp6m-/laqYJNfQoL_p>T^Bq:tRP8B+JXa_Iu&^7&DuV
%*@eIEiVsoJcTP6f#KH1l<5Y($2)OodIqdbMTC/oR=#5KhJ*1Dsk"_)g_rI6ZT-$jX1hNpUS@j='gH?F!5OC='IZ=BA+8r]iGkh!r
%B`02@Qh^UMnEfGmgRE%:Ni)D4T,Yfeb9K6LD\q"hh`pqoDjD0!?G@Et$'t.]gY(Uoa7#?qriE7U?;F:&#tP!k;nbDX?LRk3\c+")
%n(I:SS(Wk/JZF0Ji;N)td,=Vul*h1Id]$A?rR[f4rZ<+Q,Xf?b&)I3qN29][^[k5"s3QQX8kusI5PH"qU#H"j`h<1ofBiHMU\(`C
%9>=ft^ZPJ::[5.Ta^6:)lE@g\>G"AQ0e2_lfC?^:oiHTe2"(l:"FGJ?TD[A<MY;DUrKO1=]ak@o'Q#%An`@CZC])f`)uZnJfJlOR
%?Y[lZ^RuF!r%,0[WUK['Ze`^fi^?I_4nA8ePl)%#fNP6IIj`"o*dGn,j'QG7CW?P/Rieg,I\&[a/*U@=l!DV'N=Y1sY7H(72*MH)
%^%mtL='%c4LVlccPKWL3nAG"BkjZdRkI\hXl[O-Wh60mMK6#lZ^&RkOk/[:$ZC9WuH$Ds]DI+=,XDT,*+1E'[^X&L19rG1H^I.0C
%j+D9aJ,OQ]e_b[soB(/eG'CtGI!e"9J,Af_pVW9>nIMgQ/UdDC[,]F1]m..L^N]HeB&RG"bPcV:'ZFm9]Y6Sb(nD)%/nUtFI)lit
%merSH^:ld:HkAP!rbTeR2hjN"28)dAS#<I(qNj_D45TDdeZ[B>[I\YBp\W!,/'[DBa0V*CdHc&Ri:G@SX2XH(X5N050B)c\lIGg\
%S@m#$$\qeI%ukK<I2^7X`!\eQrXKFqDghX>[$&1,^)k!o5@5GdbU5S]k/j6je,/,&Rt:)_5JkFjnF"rmp7H$I)nJ7*`n'U.0@-HO
%hgaAY[$CW>GI;It23],"`9XU>hT53LJX+-HOb*JW02<UE5!BG5Y!!3]%%R;6AUaU#T:]bK,HnTE18=^X:AH0Rc,8!!V]IB[q9$bV
%h^?@H\-/#iO,ilTIT0N4p[6%]g=pm'rb2RcS7IK3_9'>D&*3FZdn>9LMYhn3g@"K(2L>es8[jYu[qU^=)oWhZrt="B)^Qf".4)SY
%p;W')BiDIF;qV$tljl+G8E-,u7T4:sl:>G9fn??844<BM82iUTh<^&A\gu4RSk)@u(>\@[FM;,0`GS+7HPIRh<-5]IdEsR82gZ5Z
%mSJ#75LJ$L6s"^K?0t=-[r]p8^-Uqo#$pR5eCcSOVPXn\7Jn^AGdetT_bM(f=+L=6R4KL%(!:X*/"od2AJJ@HCo9#1g8iT!Kk<"&
%)hec$k[A&9Yg?D+^0K+D$\Q;:2.\#50`27[ZtpF\j4lBjAN%C_,6]l%YXGXr@V3ilE!6X5>"H\c\d$`j^Q*TJ9m=FX(N"Y1H>r&.
%iXFjB61,Fe2NJS#]>A[R:71a&>*s)`ZZ4*Om7cd4N,L]Z"c&eiWGijgf/"ju?V7sNb6]Zp8<+AF\6,mQG#@\03>P@o_3Q%3\>Q^u
%qu)GfT5GEoh4-Xbr4[W.p%84NdQN")SEW[$R=amFT>=F'UVd$1mOL*"V.ZOfS;?Iu4B0A!Tt3Dq<V%J8fecXiJ3V3:Ffh_6Ispo\
%hgF;u"QuH*s17Rsla$P?dUh=&r`nt-d/X,.q0b,UiM$qagKno(J%5B&5A&K#%X2+uoV$oXiigUle*+18jDen]p=Wr$b.(69AD(f4
%@0f$DTbPA*2BX0sN]'j'hcq!*?eD2'8MR99BRn$B-F-gogm;Q=<V7T03F'PEn\[?:=YiZK2CYM:*\j%DTemc\K:K2U.!e3,bm2Du
%,b@k(.7T8s3fn0D_EsGE)($pA71\P_VF7\7M$]-!-YioWNd/EsM!6(j>/lY?QC\d<NHmu9Obdum8inBl9B#rWb0bhuSlZbC+dMO[
%67s\79NGT"[%u-/Qo7@,FCX;Qa3;CQ@HQ5:FClZ,R>"=4#W:*EPLn0OXM3tTU,,.E.>")OR&$HP7C'rfG(q9QAP!.FV-sLM\]Ug!
%%_jE99@X_(RrJ-bV$5s:,U]?@SKK$H84/OX=mH?g"WUst(m<+aX$o^G`%ogl)k,oG3r;4_ZK_o)1cK2\lA+J[Y_%*h@@Fl':G<n>
%d%lGZB,S*ON5_h2K==6iZfXFcY?^I!,WQaY4NX`Adh'YhPuWX)`\?2D2&(+^16B@4#/W2h40O<=(/("#YKag+/#.m\1>=9`5>urI
%1)c=W-K/^46=s$PXkk8kp$.V3X&TVI<jaVj/7p28]"rF$970/7I*p!qp_=Pe-Ali7`UkSV?Cia&iJ=R5)PF)uo:[>)9eVaV*jH@O
%,PJ5P%HYIZ-7p'H6fF/mX5em8JIU"($puaU;_Q_)EDCg+J`n&I7YALTmX%g4.&`?(W"fO<$Tt2qaX4io`<cjJ4S9^>k.^a%)2[=R
%H4lKU-l9IgNED:%X.qWhoJ:edruL;eg=)/UNcNfL_SV`S,2L#$+Z:$b#?kHXQB:*\<C0<X'%MbrQtEXtLm<(g!in^V\^72q<B&Tu
%7Y[2/UX;5d;bX.%Jh\iF'?.#O9)>uAOQa-;+3PPDb<dC$]HV0sFRLZFnFAo(&J>_>T$d*W$2YS^1EB;+L1&AjOU6)k.Ya(\Ro*=U
%@jhmm)emYc'(0H,d#)QZ%.1Kh.g9*UbS=RB)+G2FJMkD[\oif>Zlk[Sg6lKg>bm6cjQNI@%V4=`K`N%C7+7o.$p-+"?q%SM&iN3C
%A5IpeBkPm;M3F$WT'We/*ZuOoTM];5j]H&PjD[h<EJ>T!J!A(%\0@)15r#LF02PE,l<5k_)Nk6OO$p7@@]e'bi$fcdq'i-d<(WmI
%$-OOu.,t>";i:PW86P0RrPV$+mt_]gdL&?m.$04[f1[0$[#SRj]lBnoP-fT\.CoN.0atHKbB+FsXdC^X/Hl*mn/uoZb%;nF*jIEi
%@kjc(M#qrnHHjCU7dCogL6="a@NXYD.+Qe)D^[U?L8:<3G]D#NMm?qg*)+MZQhc1TI;\o685-`F-q,<sRLrVMc6_)R,f0h@Ok!c/
%dWI-h<4&8i?M%`!V^*HZXRc]3_0J;/lB.3.<>,`b2KP3N2%g)`OS"uuUQ*hZo<B\t1J#sF5qYjh*$O]>jr)*'7OHBrbScilKT$-_
%C!8Ar1^h7<fF9BcC^Wf9Gt<2%_pq1kR&>,\[u@,Z'=]0m1dp[q)WicD:K="-W[1>:fo.2Q,7[1hL/:-&Op(?O<\:kn(u)$%*c7lV
%e),27kSJ:,.r;4#74!F1NOP@#![=QXF5aVtTV]rq)g#QAp]spI(c#8IQ["=Cn7S!u`hEn#6Ha!E_H`mjk2U,dPRVXu%+(M8dS1mK
%I[8%(<YD1H<ce,cdI=GpkL$=maM]@'VAVt6"_.T)Tdb`MPDOm::jgO+f#HnjO_mN5,FU*HJ.\8$Zj%+:(8tlaAdaf\V@1Y(-3r%b
%d?Kk-RkV2f&^;/kCrE1ZPDf([HlThY\qt(r#OB,qdiC+(SuV(DLmqQINOdZAF."=3?is!OIi1uR]9p..\n>JLXT-;ajjgo/(5e0R
%Pu1Rl5\jCDRW29eDiV"7A#l<0,<T)KgQ?hP(*?('ItuFYY<m'Pj+5(7b<mI^/lKVAE\oQZkFlU/?RqTbGTh8Rnj%)B0H>rX(PGF-
%abt/?W_?_TAk]jL9LYm5J>.?1I4tJ/`X4G7oa+6BR6nn;ZjQT*f/TEV6`26!l>8:J6Sqa=La`d1;al8(YT^#f-.pk-9g[#eVE$Uf
%cguV*`,nL!ME3=&#]l+DRZF3YXYZcQ+p>9nKc3\pK/c[]5E(j@mHN^m\J3sjIS:H^d#a!&YCX"$I5.3+UEFe+U4<ii5Y[2;BFl_[
%(_V3@_&s['&$-+!dTQb$jjNY#6PI-b;D91mQbL4>#sc`]_(7F9i]:")=rKS`P%c/dBVL]fU2MeV@N+oe?CE4.70Z^pB*q4C_oL/a
%Q5K0P;u,L0\")O&7BK+_0Z9]TkXH!R1:Z&(0PRl-OQFp2JNTWF^b%00#Z,>,8tn<5B3[cWeYjaa2JW[i)TY8q(bW6l['BZ56/+/X
%DA)36J>T?s"<fXk6Hf5R75p\#4;$/2iBdZ\=!U(Q&/Wf)=;&"k8HX5>X=qK1ed3*+@XZZiokq*)_eAn&PM1?lBOL\Bj5k*QWg/.R
%o@6/-&3\_@e62l,Z7)_4ocXt0Qj^c[`la65.Zd+Q8S)Q\\)C7^%Mol>8B[+2H9%)h\X"aiUXaOg>]l@U]tW:^%k+QH#h6:Ej[o(k
%0f#GEAeo$A,XdhH\AUbARU"pmE_KZ]YojG8!F^P9UCSt-LbW^[a[f%>:nJRI%0YT*2.gP?#0e^]>)(2P1+&6?dZJ&C,T]DW/;LSX
%=We4\$VVOgbeetqCM@U!a[f#hOUh=,ZkN^,b(YHZ;d-@AjC+:W4CUqD9NW3*8!4IGGXr8F<fTc;Pm/IkTqS]FM5q.>3<WZ+Burn<
%^dK6]a]MaodYd*d>7+8iUoZ00OW02bV4huV)$,SLBdYHeg6,ut4<Q1/EV.(9#:LTd&L/_,,18YgWGIOKjbmtCP_obdZrFCha3kY8
%Q3OC?,\&ijLTrF5%bVqe"nMFj<JlX6%k]sINg>X"";H)FZ*__bCeN,QO9/(u4L2#FV4huV)$,SLd/_?5/P-`!PM0$ul9gI?OYkj6
%?B+W</CFB-jN2I(C)n9.PoW.gj:NdcR$@ep.<I1<aD!@169o.Hd?7a0-H%:]H[&LnLc^#Y-HnoY(e0O'ZilKoZ.6.MVPd>&"-Q'r
%o9IK$g5]"ib!gt/$PT*^D>H.8,!`gTc*Rr?!u!,L`[4TH$$1[MaN2bg<[>I/UWSOm-&pP6UQp[LSjAVd2URms1p\#g6pR"^RVT:+
%&Y!UD1(hbhW,fhR)j?3B)oKbENE.?IT4&`ZC![s`#%_=flo6f7O`bJ+UG8ikV.,*]N.A])2P]O98:7)R@VMoRP>%'rWM19@]$]5b
%Y!D,'0q.X"ie#>fS#0UX;]<2APG!.Y,9gMi+UqZtie*7)Pf>kafQE`]Ch2Vj#-/C<cGKWu3DG'%8I0_abA,;<8(Sq@Rsf>-+V/QD
%S!AiWAjccPQpd/:;6JUa+6^"4)XH$$'BTYK`A!5jh$D6jNTGs:7O"S*9!o+cg[gOf$V@u*5e5gN"t1F\#9[&<0dU/q@fqj\=O^A"
%YtB-BZ4^*;B-nI+,N42R5t;"J8<44e-!DiN8eSCM"+h0.dpT\BD[70We,X)Q88lBn+h_ANjU%pR.qD82jH<6W9@JP%IUW:5Kqu'6
%j6/s??>WukRRf4"\:>^dF2k^I04^3;ir6V_?gtr7O9^dH+;[KIZ&t9.hWi/JW.8]s0P2W-Ll4hCa91uW(L&6go2%WX/WubuE(:sQ
%%CYY,bMqABjtXLJ`$N:kTmDe'bs>T.Md]3,W[&&7$*_,P(L&6eo4AZ,NF8KK;28BGC1'XA%/]]_\DYC0J4LXZ^kbj$0JT:>F,X*+
%Ws;I/MUOd]AS<?uiDWP__7\K#O6EAXP2md,\Ng]&o!7*$1i)gQ+aq1e#[e]p!!&EPg6?YEB*;b?kiib*U`)X13@P#(Op1E,Ye\3)
%#Jn&VIq;e-aU!\ao:Q-NhD6a'LEH,T*?AYlBdt,p7R5sA1r+-&99KJLJ?Zi-dH:R,#q1ZpDAi=@YWSRW![,&,`Fm?P7R(M,0HMPO
%+D'24^aT:1;&[k;!>$+U+K\0=6]6BhT$*.e?1#e?2FEY,DVUcfO^SKeWJ.t^R)^0K5UMSi\jV^\DW5(Ma)X^4Op1E,Ye\3)#=1G9
%%OMEP`_bRt4kLD"`+K8Z2u8(0#6B>]VJ5ZIa]Ji.OlG@cCpX=,6aAru+0/!gEV2WE*]dIKaU!]loUl5$j>/B-ZQJd,G#_t>8k5$V
%OE_TOYT2)SA:ZkB>ue$k"PR@,5Sq`O1RaY&B,.o>jb0h-C=pT4_?E.[5e28)rG*5^!R2k;KRiVM1ujeJ&qMYeAP3.S'BTA$OccCX
%JbIUeH')XkKQc[$`XKYg6k"A,?%:"lNs-(2PGT6gP%bWM,c.o"fP4P9%-BiCA[pA2&Q/jlMi'u?$;iQJC_"ir6o9`g%!(AZ@WJ_f
%6o1Q_"LX5&,12!3CaQu@JV4[hq!eC-7?`R:jQK'(?$@"6Ri+qE_O.s=Wh7/:54?`NGD()kF$+si&HR57d\%8ngkF:75K=70lN5iZ
%cHN:SBJFOM,G_ImOEj2a"&B-qm)^?,Z2Hun\K-_:NX-1@+>BDnC#I;K+7tG"lj-]l,ST<4YV-h_Nc'BsNP?P^.@qb\r@eN05ls<F
%YfG(_.NJYb9HJEgRZ#dVWK7KM8UqhC32AT;"H,#!$\"=j1525gBGFr!EoD(*&%7:ok7R3KiKu)m!:_d?/4<7d!,</t7Y/!V`)-1l
%`[]IYPa*(p5A#L52A.'5'm+O0\Y-uGCa3s<e/W`RObYF%P[S)iYRig,!j#+D'%/keE-iVU%YBWaEY['ao?oJ36KFL_,b5Ad7lL[8
%bF468$^$2W+!hnhb=4<cAdToT["ZRE&"me#_?_8BP!m4K0h:;5W.O*/,b;@T3T^?fOc-?*K?.3M+pj\@0efsQi+1EELnuhe6/0=(
%_XaC+OT`op>YL&a8^sac%HIi"^'kf^-O5d7h@86*6rTHhYqHMZ"NYES&r[#=6#C"?;..M2&`oAf3$O,t8HmQ+-)h<4j>MAmb1VSU
%:sm_lP&L7#5f'b^'"tu]O><Ul,0)eMDBffc#NT@p.5XL/H'kg8/12\J"(d$G+=o3doW\ugdh55A5X`G]!?bsN-),+tA%X't!bj,)
%8Obu)@5Pc?85#*Lnpms[`6j>O3R]\U8MEQM8ob!WOQ;3;ZXe#$7IC7%B*B3*Obg^]om/5)&E9-3a^Aee:Z$6HD+)Z+6B[H;;)#?^
%+D',9Lo)nfJ_S6KdSr8jN,Z_QZj2maD+:fr*Y9*S3;V9`S=(?d;I^VB0\@"'b08cdRKa\GD.(6/0`$oB/-PJs2?_2H4%$;=*ZqFT
%0lclk&NS='Od(BPJjBK(b"PGre!MMgX,<aIF<h_)M20IYb98H/(<D]n<TWN++EDa\`hRBmTF$:f&\1_)FTfY(5d1e[jmk-"f.\BM
%RRa0-@]UjqOip<\aVb!^Jq_8p(Pn'0*8PF!c5N"2oTY"O(h_%m/.4d&"OiT*_enCbC##9_P%bWM"D5dVC_WU$&dIs#Te]khN>t@3
%'kK5.*7![XX[PXA#jN>5=iBBqBu;VK!br\%7%sjEpe6j=^%6mj/4<7DBJM<$*8MT&c?h@BktW'OpJprd^rX/Ia35,R\`fIj_h\TN
%RumoG0]k!hlDI`&lch/.L6IQ:j$uSAD@RlRh@S,NP<nh6r_SPk!'3N(Ua_W2gVa@'bU5^qpbThn]qQ?*!nJ(-KXh`^$\je=)aiZp
%YsMVIP9:35>r<b'$u$*3;^S[cF"WQm"U%2T*AHK/*;_,u_`BQpJsesN,IE=^Lce]sX98rla6H:T(pLMn>3&7N^uFM)@#lINmC#ig
%JFa&F#`ZT!3WnS_^<Q;U$l4rPV#qtHA4"*g5i&\FLk4?MkRl\&P",M\%9IspMBo-`@g%I*"[u&h=VB"&61u4)X(2Ri)YFFG[Phk(
%KWJ%O^`_s1Zf(BfVUeRJl:R`'d,aFqK;pe@pWZtdGh7fr(g*of5@b*aZTs%gLm"L^S<a2]2N0DN>,ek;Te2*(R@#<=@-b`[c%'Re
%hH<2i$!KY,ZjD8+P"47(`+hq01'RaM7!c?V(EcPD1/\J;g2Jd+L*]^7Ou/8U<(I$pqfYO<>RMODB;QaQ\-ABA9aY,umuiYf\L%A<
%49X9Q9oW(@<3%2-(a(MAPS=X.=i=!dCLh"r*Yh3jPb^&kY"PY.[A+^nCZToK9:q<1k_fdY-*"LJ[[R<Lb3=Yf#0PXSa#jPu+;7;D
%FL6ipW<(V*LX<kfCL)rlCN+-$JNP3-C;=uSPU""eXI#BCQ:Nb4$G78^>YAeKeNOLX.7ep+[8^otS-c!jF@K.0&eC`<Q:"i=/<GYJ
%f1[04!*j$3p(:]]5W'ZG_(fUgFq3Ps:j.A!fq@\b1Vko5c:FqNg&[/JcsZ7rB5%g`',\ib#2:t,2;kq96-pWV3Z<S^:4V+^nl\&S
%90TIi'Nd@j4@VtG7nr?qPH_bihjJ'Wf$n_>3b/8*;Zj76=.]n5B*58Ek16b?q\*@+ZGPChH,_K<>"\dH`meum+7^l*gCakRf>_W;
%Kt3gdJ1L`u53R4W8Y5JSDinGg&[4.%1s5K.E_N65mYGkBErNbS:!RjSmu3pTRWP7O+\Tsn_j6hnF/l2__onnl&qJ.DYkdF!'a\8N
%d\'nUr$[U:RO<WN"'1NZaH1F-b(bb`n.#fJaJgOq0Fqo["&)JWJdb9&"-f77BVtJL+cKp^?4su(D=AB?cI43#\]f27`!?WJfpn?/
%=>kP7k/5WG9pn\BMc@du0BZ)E$8BL=QuSCR#*MGhMa<aZe<#`l*2-BQ>_-4?+@\V(.PmNZ1ubhD!+oLT;`Wk/K?coc(e0O'"IPb*
%CadX<jlO7NeX,;9qPhfF1(I0F.H<NG],R5]%eplrBa"2jE&o^F!LZdR*5HR!$_&)9/7/Tqi.n9#C>5579d;?97R1.tT+R=7Acr8!
%d4e`2d+J#*TJYf\OA)%"<(R*/B23.Z)WMML&3Rrm56copVC`Xm"sUt#p)$7/JgfTg4<3*1T]CcmAoKNP1-j!:%s1PtNHJZm$$24Y
%L685M6"Z*S][0!iL):J@ep,4C#WQU!j96<@f%>hb_<s.b6;#<b1_DNj'AJEN8Xg>;$VMGT,/Vcbc)RE]+_mg"mO#B(2mPBI4We[O
%Oi-A'g.2U>'%/kI2mH(k(OQm#cr,3(gPZVVUXk".M2dpj-E4\89r7ASCfqFs-FO^%gt$7YZ4ZmZ[Rjiq9l.lQ)q;q4#pI@C5g&Ff
%CbIOl)G5lHdPfNALpSt-MldZOCadMK2R0MYE8)45%CVR*bMr4Ok)$=V,&7j][4<Jup*M])(mYkUS=P5.!T1gB0"+N*Zct\;(G_Ki
%ZiG'Rfe/#1M0mB]psRGD&8?>,(bnY(E&JqQp*M\V9.DW)3#eZN!,%KJRC.mr8n4@C?H@,p-3]43ou`$P,L0>ZbF[%"[U.Y&4D'?e
%R6Wgo3#bDf[>?JXi1&A\^0mG_R"s`uq'J!MLM^KV/Wg_icIRpPTE/j]1G*SK)Y9>U"_7]!OQ1."V:HtOBRo24*+p3n+:lSdnkEq)
%9=YYY1lQhq$oa82+7XIl;t>NW@Ug1]!sBT;.cer;-AgsP#_@+:;t>NW@KXlrS&-M\XUT+C16%A0+Jqo]U@:lnen2DmNHr_X2)9_>
%Q-Mq"[>>@[J`T9>@A<u1KH45i*.9H@9l+E^O;&hk%WI0\S(PsCi!)$b@##Yf?omA1)b?C)M%)?GbDA4D7dD#a9l+4sl@\:^FL4G6
%J-\9F["Q\8VBp+FA"LcE.SNe*N0IJ7fUr82'6-.+>$<]W1VS_5fM^Ac'k@fs2(]qMXuD:C"];i$c@KrN2mFfufq0T\5R8rP%^b$J
%`0QV$[>>?G$bhHl\O`"@g;IU"Yt]&cYXf*,S872H1M-WQKgTppJj=VR%Q/5tiHkO>fu/V7@8%l^jgLN!KS]u"V\U(Q,J`ANE<CCu
%)eHqsA(1RgQ+='-q+S>4)MtRjCp#@bAbIH/WY2S9Up,\M\O`"0g;J/6L5fNrRunHt0#qCY\/b>o#Ne!bI;9Lc(]f3\Ak'u29l00o
%=B]7/FE3,<9l+A$l:+<M=(#\bF_JY5hS^ajaD<AJLBoi2.@8_[-:U6+/Yil`eDA+jY6[aY/>V_/78/urg;LG_++uRUWgrWaS#"nR
%6'RT[p2OK(k-,<$(d(8MLk&;48Fi`+T0]n:f2)araUp/!.$+UC738m$2Hn9Zob@RE=fRgN&KPG>FUHbH3DtJL#)"-)87s>%;=p?c
%a<B0>"Nndt\Y'Xu"6DE\/3Rg"``eHP](,k560fB3`7b`0($:=FH41$P1H9#8d1q]^9Zo[=e935Dj9VE)$jTE9)j<jQbq0W#9(h!P
%J:3+7=V_SlK/CVY5XV%F9Secb'Lt!&DZm<Wc/Y_'.$J76$qO%m`PY]sJmhQ"\6]:eqG%S(I'U[Oi!W*\_(^Y!=3(B*%'qBTB'o\N
%mrN!59aNft-]e@L(_M=MXb2>?QsrH\EWO_lYmh[^M?.2'*-res#+/pT9i6jSpq77Y8g))L#0:4@"9u:E#dtEj#HXc_M$[pJ\/GW-
%I/ka*#3hr!f8r6sVUCmHUCk6tEZ3N)#aT<u;CqDkPLmZQXC[3^.M`R)aD!mMdfaV%k0UUE).4)nR%]n)`UAer:]`)!1-c<o+u$6D
%YTO[e(dKfc*C(#M"+tZ^]`9G`,Qj<^!@0I]^HaD3aROUe"J>lQ'.<tD5bSnp7gBDj0u\ZPj9"*<@N0!u'Edu[3?kM9+A'Nb7EL8@
%)mQ(>;@I,e*2upoNXdsd&l`tbJ<Usb#p>+qI?Tn7%&>msU-'>(&JLAR/>-QFBppin,imR;'U4e;PQe@#*gGP9Z1YB+&o0\(R+b&L
%Jhrh30<Fs\i_U,=JV\qRAeq]#'RfQb14U69(I@FY6=:97gMjC(Yi-2G/OHM;7>mP,=/&2qks<"=R<kD/NOrVNVObURYkC]'Ls3Pu
%5=0^X3_!ZL9cgV8RYe/-NJMg<"VUI3QoU#'$Q=Q4]4oJo9q=f7*+EC*XIBhopTU#)7GS-@*7dhoE]8+^P$^"boW^[npI0mKSq9^B
%Da\(JmZ%9dTfa7I&/.`Yd%j4j;'6DA8PD.g.7%)jNtE.qf_RS;-OgHn-Oh*OP6Nr58V7*4_(5f>&.]tp\48_uCZ1jA[W.@"F52CN
%5h=#m4]Dp/4n;c2)u#/)2XV.aE84rd*;;].K5-JMUa$]MW7L"=7p]K@E0!S2gk.U`D@?28)%?8D(*ncsH_>Ki-=Q9HW!.61:d#T^
%@BBd!aMC$d1/LGF^ce&0JEjCYO4A7N';WVXmZA71EDIM*\-LG%pAbXG%58ql<5^rjni7*PW(5e`mX[444[<H`=La-O6b"KQ?/-YH
%WTCW;%4p:u"pNe73Adg'#+0LONtdQ5*d@bq8r*kb#BL^o,7F7M&d\4c`JA!^*Y@)!&uHN((<iI"3b3b4#PWaRpjHu;*i9ds&6lXL
%);$tmmSO,*4\?cMHU(gF:7+4q?8.$(4Q(!G=L^j-_Jg%,BirCZg]JfN<eRu<YpJ2C>)"F@mK#<W.UebGDS[;2efY&g3k,DE(;Gn^
%gqsgm).F!J+9PgQ$hl?5!L1sN4^\[,.Ui#PE!qa9X8rNeN*P-?K,hXe/_n7f"Nh9[\-Ej13`rnI.0c$``]YHQ5p]2Z^b(ouZ>'T,
%Oc+QO0)RoAE">kUAV_qnK+(Yel58rODNBEsUgt8/Og?^]4cng9L[o+T6VL07.c;@._cjQ?aD^#Y89<QRGu/qtpTSZDpTWc^9'G1S
%SB2Hn@EjS3KlSSD6QC2'EcDUh5;@sSmU>KQ6GsZ-+V'eR2X]P87;+Pqgk2=kAEdCT6[@%g>I]G=80f/KT_oDUqZ?2Z4CmtBmW#Tj
%3.Z9P+GC<n_(KEj#k+WFF#>uG+XSNV'lX]WYa?D!$hs..)O%dIi>uOhk[WWomY_Xu`]`CBBKX/f&\or^7tV^hJnZ%qTLXPq@N5&\
%VZ^RfD;7KPCjd;Y,L<t?8:[L8T5I*%&PH2]?-$d/*;<hVK5$,H&2Lo%"\H7Gc\uZoNiu-FiuZDGZKBFQ1K4k%4bDnQ0GA*E"Z(.5
%h(N9$*;;].K5-JMV4G50KPY'<1#+"7%Eh@q13A]>*mA&g6k5M(2XY!*#Sa4b5TJ-3#*Z:b"4Vo_1o_]/&JPZ(!L2BM9a4c*b+Q11
%.3M+\eRRD\A$m;l"KAYI"Ab,\CLlGS^-sADMjMKb%3Z07iIo&W1:$c<GunI=gCOb@%/0`.V):A?Ke2"(LsFO*Z2s`o]/[2NNe&In
%4d\US)J!6=R<rY,XF>!ic1ecZXkT)%duE3,"6;-[!WuX3$hl?oJ<JWQ`IQSFPq^/W[pT\/d3/UUbhRPS5VDukL^bYl@OM?>0HpQ#
%>6i)0MN@i+;=XjCHU(gF:7+4q?8.$(4Q("GaRD5IS^-Vl@6dT*RM<TDF1`7m^1Hk=\;.I#:f@0_(m*4>&uGun(<iI\%5KWZbe4Gi
%.MfcXi^*sI&BXu5N/59bf"o3db[M.&\ci:sJO(U+?3"jDP(>L+J<J1]0JLT<qqOM=bY4Z<OMcjB;%+Eb/DS,W,DpX6$]&Xr#u_7O
%$g*8HR\?Nuk6o@bhrbc\@Z$ifO<_/J`mMWB4bB,j-eoT]f5W2CCC&%G0HrU\Bo[NgNs7J["Oh&5J<W.)]Z:tXT9"U]a$#[-#b0R-
%]WcD^pTWd)MLE/Gc=DJ\%>Du2.#3C3_uZ%Hbq;ik`$"6iMR=N4JN:Ng(_2iI2X]P8&]qc7"\"L!dMM=mTfd#DXkR*jJe;15/RQH?
%4i^W/a+tU\SHga\@:JP4iu[&OM55K#9MV>MJd.;*DAn_>C%>q66VK1nh%WDjF+"F>5q%M2e!R\8r7DrDEV-MU&,/MCPWJQIO>dfi
%S6WS3L%8nR6VL07.pUbZ*X2+"T-T02`gT1r0M_c;D4&uP34L>nE@V/`OkIhVYRuTC)[AK7dN&!h(5$=W#8#PE%?^#(,l+Yja#tco
%E=ZY)na3P+.YluS.!C6+U<&0_MBXPr.AGW;5V8)8TGlkkl.?G8P0ZKt\0jm*\:?=IKHDTGj?U73NdI]5L3m#1!X1%q&-oS&_'H,\
%!4?3p#c]93\;.I5;="9.BGi3C.>/dO%[>]T5-e?%@"Qn\_*'QRQK+PbZ3-.3^2mca$d]I5!#$Qp`LnGYr>+f5)MB+)5apXQ+>F$T
%NdFkgKR9HGNAcq/^i<-QpJ5L&&m<sJb!obK%;V&V8[=ToUnf")8AQ23JL&,rQii%;)=CoZ&FNta!@>&3Ma2*28g8'J7SRE\6VhgF
%^a.V,%8p)aHU)BqJJ:Hh+9r7E1>H@i-9A@T+RW+t0\cciC2h&^!VCs]Uuqbcl\&[T\46nCE=^-)=Haq2G(PiEn1BjU_EFu3J.gO4
%6m/Bn,tnuf/XSoC)J!6=D#4Dc.E=Ro/sJU.Ta["bKh`NRZ!54U#%fT?'%qh'?jmGnM6-*6$ml(2H[l,BBa>@uj1#>Q!0f`\!bHm%
%.!3IJO)6-NAmgJs-*h$75\u'FQstSM0Lo[($m_fSU1>8<JCm[".>BTCNmt'H7gC"-aID<4g`pH5$hm&0ELPi-89<QRGr2HC-70as
%9d>fA(aNa%NdDnnE=_.sq5p;4<Y"(0epK`>S;8;XaT>rj$LpBG6bs]#TT`?e7*."8K/8lIK%c9=^`4J?`c.!fJ.\5@2[TgZ"0@'J
%)a"bdHT0YX@ii#M<WE\4O@YdnHVj]tm(J=(-kFImESTSfBlF.BVEf_S(6asGF54[FBhY\,cZ'IM0ko35M.B-S?l+K:P%)'7jrsQ&
%BHO.A)P"Tk&KjM;W"4.u)NR;[hMpo`(f3Rn9UbG++=X^;&,@KJ*9NKY/=6\(:H@jJ-OI]t\i\g'']4fdlj<;N4Mm52D;?&IJlrMX
%+Wa$Bm2Hog3)De%n-D/r?(!N>4da3E8j"YACsWjZ4d90/U*^t8)hHd75s1l?*:fKS%A(D^.1LkIMYM\djt1*TqA-(d8WJ$LLDH"3
%=A%5%LY@ao]%R1"5e@je&m3mHJPf/)LnGa*!Rn#jirW7A0Ru&97Bfep+YZCdQ")dm/Sqp1Qj&m^M\JQ#_4ABCaT)MOpkFdE.6p6G
%"&(\*%`K<SXSX,QE(@?2lqpWAAoIuG+>*)%'scamOOF7D;Y8CuJK"(\.:j\\(kErb4.&C1).\7h>ThFY:qF_&_&_2g$rB6Q_&^an
%777?g%Mmi.M@i;!"],<>2IM1e#&j`ekkPZ*?kR[#1^2rlmm1bg!`KM<^`6NGA74_RE/,m=;bA*]*$DE(,YT9[/XSgb*:Pg2THoe'
%K!6Wu5YfRm.0=&_.JE:9-EdSsQkDeaU&`[C3=Qg6RK-U/*#d'E"&.^WNM\t[_Y51U.=ioN111SD+u6BFYi$"t(dq52*M<TR!s;!o
%CY&clV'6d6!t6U"cGLO1e0'P8_$HD@R$dpl0S^/rUDPsO=E'$E7MI-b5Re:ZJ.\Xq^_P'*=Z&Q<gpMti\_qfGgQ]Jf!uWd_C=S9<
%K+3$VS5.QF8KWZfL_7]cBocX-UcI5(4;uBS'26l@N@"u-e1"5T+lp+?'r3kFTfcL\@UeY5_&_*S6rC@Q8-<K[Kgc&idmg#Gb+[/j
%EI]<!&/W8erQ"tO0NA6k588]iJ<_i//1k\J_f[2e(+g^tY=4N!ddo%00_Hb')L')PN'068B<8e4%sXcFVAu``a?k1!iYs5Q4uV3T
%h3:IALW/<sl7QaX#k+WF3LM4T`\PI8e$N\]8_Cpine*NV`OfhX^8B1cKLI5J5.6fZ0"JE__2]NhfoNY0XAdnI2S[-UA?kMJRf\tD
%/FVi0]OZ/s27j>M/U5C)_ha]4?8@e^0.;`!03Jj&03JS+]k!>f?8CZ!TH)-JejV8G=l'm1H-(MEH-%DT]k#>!5il*S1)@\Z,`<%:
%ZE/3:--J4*?8A<0X>d:&0,^-r6GZ<\F`2QIZ>I+<$u+iM!steuCbM3A_sSY*>q]>]5PL?&V<c>uL*ZAR0o*;D/@N3%."T$AFi?H6
%P%E\C/'a<0Q]*q`Ll(4>ZP(ouA$P>GK3\%t[,iSi`TS%Ob=b;/QuouOO:/g!ls%_tJsVEVN/3>P-/4=!gU^k^-%e>PF>W`TR6L9@
%2"QmhCIhQ6Z4_gT>b,geR43`!-g2ko[nL,O94gd-`U]0X:4,UDi$DkCF(n`mH-*-iTHpt4%,sS[8\n'>*(Ilbnrdk/i;Tk2oo`ab
%e&0OuQd"e"4YLYtahWFiNgC0,*5>9$0:A47PTdHIA74?Z@!Tjf0qqcV15Lq972NUIbRmu86V5<k#.a7#eFJcj@OOTYH-+,MFfUP[
%)AX.%A3mN7A3&sp0,`3n9;Xi60!O"%P507;5Y<"L=l&5`]OXQS0:DAJ@2%BgB'$7T_ID+iL>$8N5'&BF2'70'g@CD`"!em?)60;G
%UteUTm70L=QBt8b/1kZkRHm<fgIk#`nHJ-NQV;\O\6E8p="lsVDgTSS5Eq?I]k#9<(>n\G*A-6mXLR17@h5@/S8BpIG>if*g@g\d
%$)Uu])1,IZ?D?O-o55J1YA&:(aMcI2B5Gu0ig22frS5WLdb4;^o!&j8c%ga#0<5ie;!(CZ-=>fLPb*F^:J=`P,ETU#Yu#-c7"6EX
%W>J``+('H"T7dPo!KbYA[ZUW?f+/.TO)5'-<aNPmmu.5E'Q0k^k<&6GQO`L%%FNCp$4XDri;9O?<7&)sUq+Y-@3fqES>=BT=f/:b
%3IHoT2]d%/Np\5`qVkpa)Vo[4,!dQQM;dLYB"Ve1PMA"F4;L[K+fPN`Je3_JW0G]U^j<!@7Khu5H:]oNeQBXm8MdRg!?o6?bW/B&
%6PCP_OZ&Io2et4;0Gg]t(cf/F8>Q!@@eJ/-7)3c1NaNG5@4ckL/&-[!H4)/kJna=#QM5'&VUXCr9mdc]Jj5'WRO=8T;2TeEPX`->
%O[tQ?V+*Y/DUchOC;ER5[l-soV^;_i%`eF^2-KD%&BFPsRqs*TM(r(@SoR=j6qFSnJ<oJUeJOpCqGb<<VNm-7Qj^i%7ZMA(.nc'<
%7Wp<*k5hnOB!!Uk&57>^)hQV_QjMK-pb7RVc"^hc4CFWK<Yh"Bo6al5-<RC/R8@YZj65X4Z8.Soh9,"K`/M/\]U=TKc<aPIetH=T
%^)^o)&HR8qU6u5u)'9N):8LhG3KjbjJ_8&bd>_<I*ak["L*p/tL%UC5:p$hj(fR<&oULIm;LBu!)E4KZbU;mB$T+qn+e0n.YVE"K
%Wu<]8#>1RTRg)n:W^UuV&L>:1"^7Wr$HT6`f1p^,;0Y@D`thD6[1aWc1q"8&+iU!p:<RcIV"EA4">'taSOBPJn[0$oMc;Ei*8TCi
%/$C%;a/uudeK23jdSt#;)M0ha0b]L:ie*JW2_NO!He`oZ2QnP]i[nt7MQhdZLQA4b"[!(=cQC0Rl$sfVd;M$j!BgRKZF"`;n>/e#
%j>CGm`G=0\;\17]ho`m<E1n+l?S9HPR6o1D[#3cg8_k]YQm?gfX_![R#$`ttm%.H;-'TprX+:r-,XH/",f0/^N))h^38k"`,Z-0l
%-+?P\.uea\H#o36(eQ(4`rlG/^)?7IRGDR5emIZ'+Cr-K""Ehielh+Z<l11Nr]8<9.V9id%1cZu$i:YTG*<fkbUmB#</S8aN'F6B
%"=X=5]0_ne]E-Wg!<V(4`bET3,<!(rU.&YTG\2j:JkSiIc,S:lL8CUI3%C28)&ne_^DSRr73#-g`G<JPK@c'E4cW%F@h$2uol,Ka
%E]/G6#0[^cmmGBjNC7qS)j8FqC=q]*Z_dp/,GSg/*'KN6_-?+[P6A%Yj!30;e1"qf@I@I>Ep.s1Op1HMr.^'1O#-R\+YnE6V4f^?
%;DpM_cl.;s-Sr!j4!6qF_'bk6Z3Hr6?@`VNPNIK.Z]N9%i1k>fi+(AQ&1qu.T=QP*%mD-*_+0mp]S=ZPI-dj@:9t14)EWR)NJiE"
%1GLcR_<5((Om<D"f\f]Vn\GJ$S$Be/`8O'd]OoAIGg.)Yj5@h554Imj)LRY-K9*<km/)l#B7l7N&qZq+)1:]N&2s;+bm,?P8an2D
%55<dl*K4M>5.CRqbDD.0O7JtAf&3kf$,MW@B*H4"_tbk(9ud'M^WiSM+N,gCO:`!I\6)CYo;*<DLl"W5Lqi`c<'Pq]pmnO>1\b'G
%-`<ql4m_Ja?o)2C%g[RP;5O?^!\nMIOQ%qqRYf-32RtWjJ\VL4AjVW2NN3j)5"-WE<(Y-d;39[o%Ak<Z+3NS#A&c?\lrVprg(_;f
%675`_8b0\f=[Mh1aI0BNa!+M$aTf^6$C*WEOQM1Vng"crCB7l[6&MICDm^1<g`GN-;O(e/4;l)t)CDmVcJXlk\XgPac]hXd08aSm
%'L`2LKNZO7+s'"*$\1g?.CTLg,Z-7\,#`jhR\*1@g_tcD![!"F]RXZB1]VlMABZ\:Mhp^SNZH7V@%:tJ%DdkHA43br%TMs#HjBe)
%%meFXe?GPSFM\H,*T5%oTTY<G6'0u_O=2U<6-A1EA&c?#`lK3V+9k$ff83Z\`r\qt%me>NZL:0+S..b"1kDID!J+*YA&'KB69r\W
%5\PrW!*LuX,N[JfKRa=ZLOpjD(<hF%kBmQh5nhmj6dH["JU-StqgG.#(*"0B234`!K3?FF+s&09#$=5gSo9K12Y9?7%QB\^dX:gu
%().^4O<2^*@u&l"9l7^T?\ah]3$88dPPH%H@58!'*+@J2!OgXB#)C`jNB5>(#<EFki585219tom]!.o9psF1-ksI6<EC,H0F]8]4
%SIUc4PXgM;&/.`9"MZ;B!H[0b8(;$.qaXLAM/u5D#YRj-IE9>0Ad5rfA.Spg`8I=WD#sFB75,@=`G<JPK1XIdm5<RR9)'<n`Y?3l
%%qVCb+o=IabaF;r#8J+Jm@N=A%a<-'6U.efCcIGhng&2PdP/KoGKW^EW81D5nUJ%BV;5;hah$A8bQ"f;\lAlJb,R"4_?n&\+?8:1
%^2+!b:r(PXqnrC"2^;gY,4!2`Ctl\iG+Z,%c"BO8`fkI3AS10R7*Prp.[hqAPBAsa.#E?*ki`ugUT#,?qC)n/P)f"4iXk-2'UWAi
%FDcgMH@(T<N2/flFGWADlYmoi&-Fut&;ro7D?KC3ohO6b`eF&k^Sr)[i%;ZQF#1baXT1?!."F[D$(8nV1W73P"9.CegR&:<4F3n%
%0(hmTCsB?UpeLACRHngb3I5:a.o"&(O.O2]9X@,U7O&e3T&BlJql!QLN2!cRcp#]3`DI=n0A8q1VDsIE&kf^/W,4dV*HN2hE=\ht
%1<38APsdeI]MDrMXj%8E;;8H%+n]P2MRl?&,(Tqi`DP,CUY+$gHo8-E7o:'?iV=(NA%Y!B7T%uo!j?.p.&uMCX.SB"l:NV`NhX)i
%`H<_O'SVMtDT`Y_;-+D+paA`ROD41>\ACFjJfX;TFE<cqp5\F-Y2^cdF<eQpTq0Gga8fB#FeN'CS$u64,F7Fd2LEe7k^)@NE+"Q<
%-#-c"G$HmprlXC"ZOJ3&<HGj\Uo\';S.V^P<dMTFq`:t3/OK]1f@j#6n.PkTaM:ug%A=b[bXQ0&BT=jTf%o(.qL0FTJa)Fb'mtYq
%VJ-oMGoMsiLtSZ$@HPHWUEr:0=i#uTA'^Dp9h%+'>\!HDR1TuJ?Bqb:bt?WQbsGO<PX1Tinn:\n1JL$G)I/KfVeI#[KsJiL):R$<
%gY(hFF^8]o;giW7!t5p?WgROA<B\6]db<=LS*,egf(BqS$+/a1%-tF+-qJ-q7\)l3m>d5b<3XkN*ApPmh)_enStuKM52&gbF!7gF
%e[-<?G.o-=lE1EB&+.K75nYZP5eM"ElFPSON^,/\8[4:k>&-U"[^tKMY^4h0(Lbce7:7>"EJ:L_$8^p]I;qaRWJBoob?d6uZ[@@n
%bVum2'cm"?c8q:T7D3VC(07LCRT:\LKnd/HNupi\GC"uemMi6Xn+j"g!d`KWfIoS0p'o_!(DE36_&RXkd=BP)rq%r$%`jN9^S#1U
%!d2tm4<2RW.]KJ,AgAU_>>p&<7LceK>'Y5pI&>-b^g/;=@$bX@!:q#*QoE/4=iQA7]4;$1e.RJR<)q;.g$/51Ia3M=5]5@NCW6N+
%bnI8hJ`9oNNBhK\7:OW\!9Pqre:=Pqq^!%dW.pZB>H6".<-EQrJCY=ZY6=BE;1N!J8[$6A?(HYo[B.$@FKcm9:a?&5#=5`+W"/2d
%Oq71B[DaED=B3_Pg$+'<5#N*5/R)kg68<p`Ffc?+(2Sd@f;U2L!Pe\$e3_]Z"=,(^W4&)3'$@.]Za6D-;sj@fjsN;2+LT_$4\[3/
%8O"Srfuo\W6&S'k*Ui]oQ@S[WVr_@0(pPXXK:T729DS(TaK)&,(A)a5fH=]a?(V_(>\94(=!\<bSXgE:NsD[b+da#.i8>/IBsa.t
%[W@4mV%*Ir'NTVbFcA.GT]d-=atZ%;=%I3g?)UIM_e-NDaD>LE#F7%E$3CE0-oeCild<0?Aeq2Es7L=59'O?:dj.$$S`qC]cc&@R
%@O*;WI-riA(mg?OkGf]pg"G$ZDV`[""bW[B@>$8Aj-6[\H93aPF]ao5[)\W@7Ck%WA&55QWZl5ROr^u@29KIJDH"u(o>j2'+K,RK
%#a3uNmn88>=VK.P_IR5U6;p\nkI/*.b#>o9l3i6O=W*#%/i(>u+B$Qg^ef5AQ3ps0V&ME;^fYGeA#<:'O<M24jL7c8L.5Bpr>aWK
%K#U7t,F5/ga;n*GSLRNE9!\VLbD^HZ[bI'(gcSt@S$Y+\J\8N*@""9(ot7%Adc1:2+'#:ClJ+5@gdf%<$)B/uZtPZaS=n8u2(k#f
%PDY+9.#&.@?&o#=IZbh@`=$uU,@o1'8V^E!a[i5C[4!_tj6m6Yoj#UH7h[kW_+uDF0e22d6q^o%iroSJ3=R->5XED-bn)Pl'<NNM
%%i6W*U'3.q_#d]6JE-pN!lB[iGmC!tc?1\*RfF9YE%.HsMHXmPA5K?7d/jY6ekiaX$RjpmcQ4QtF9iSJb\U6IMZFY;+BphhmM]WK
%YZs/I!<ST*NKImo/kp/TZ6"c<)Bc5k/p]'(cmOVUoQIVC7g&SjE<(@:OjP^KN4ZeS)0e(1>St71J.$r$U8Qt&@0!Dr9h<Z9!'i&)
%gjc7eF8elZ-qIBWI=fo8nS2X8%oqsrk'=!5gL_qbDYNn1mjXCQ?-M3X%`Rj"oJu[>($tkg0!tQ%3sIf9I>=s_3$B@LXXWc6%9#Wp
%Jm^IGr.NVpjlZ,t/Lu=MP!+7Dmlh3GnS8b#IM8..q:V%>_dA>/RhiaKUR8(/K`R@poXfo_b8Q!"4#m+nKG5#Vm-(45b=<Y*O<&a+
%$!r1O#"a-TN`<VqJXA#l3&*?Y--U2V&6X[J#')Lj9XBP0R][53TP"iGPECZU.^?AD%M7N/Cc]L`bJuWS/V8QPI,Aq]-U]hRV*SR`
%"Z;Nq"uUq-"Z8tCJf:LSe"/Wd[2*#&0X,qpV;%_"DEfXcpk6uu%Nu%u0OUR`*?m>G!TSt>2AFWML+9I8GC"f)T\qkAaKU&>=E.PE
%`pKs%>!=+@JLh6C""h*X$oGHp/1n;=1/f_R97-(,<<HN^0X,qpV;%_"9.[*/:CM3l=bW:E"up;]),c4a"t_5N)S7l>Tg4EO\<I+T
%>`f)_O->+E9>a'A:u+dc9`PT?J<WtE71H^Ci4te(9W(/aE7d:OnI;F%%r\tB6oSA5!ab;Ne[bcE3]UA]0L*-C-KS2p;8Y!(3!/-^
%Vj;(q`Aih!Um$_a[0VQ2q"2F,Cc4#R%^Ckn6s32E`>DN4`ak$ZBSh[WQm8tM_mC"ZPf)4S#!&nF>E$Ir(@/N*BX*#$XVig1KW[i"
%WT=>dfkjV9TYcRiDA_LAM]b<%'r4\:?O!@O3ln$8/i98^37V`3=#0cV/V_\s23e$^La"[2oha]]@i\h!@uPQ[2Rd(m_cim+3jA!T
%TYmTOcJaWpOPCu&i=4-+L_&^[\Yf]kR?UV^71H^;lbF9POL.([Fk!;!N#Ls-A-d:ebcG)M[*75W[?:Ni9b*CYX43*@jao36@gkau
%AE:"UlC8?36MGYVGZLa6bdFOmXr9cHK\TR&8uTYq^6@SU3N@%KZB8c:b/L]MPIGT4hI84)RZF7gEjWEH@PV]"Bo.L*f"n@e$N5o%
%lVK.aO71;``)5a452Q%iZ&K)]XFh`Q/iBm1mYW"J/SLh[f#&W1V]ZU.l)[98ZD'7FPaSY2>&GDI:jA44!'k\=%7M.nn[.kA0I9D,
%M0BeDQC3`'BQ7G0nAT3[C])qp$sB;OPEE8ob2cf1Ai-N^-$&Rda"g6EJY'L0@(EIB-C1XDUO^61@n?\\]HDaC5NYY5$PfB?*VCPL
%Q9.QKi?b_FMJ<\I6Z)rr%"q>1+g]np1u(1t18IaUNi]g,j$?&5Xfp28<,AbE]1LY'Q`D_]QP?H"&ZlRBTf'iX5b4>]-6[Q$MSMVI
%,Ef8(<<I"9.a-2H7OW!^UfgT_N>h;b<CKap"Zsu).^502QVMCt4j"ku:=fk(m?V@8@Y9sS?]u,h[j[)`K._uh=mJ*q=/B.B'5q8L
%T&MG\2*mOqXj3sO9+F#?cW8]2Gk&Mpf?9eP'9LpJS(J"1aB%>$6Y%>@PK7MBPK&IJ+uGM(;=@1Y<o_9q)7i@u0pr5?Bnc\F62%Z(
%//\F8Zb]'!q$ihST.[)"dCUElFVnnQ`.pakP;-Qn="egjTs`$RqnRAT!pQ-aa%.$[j%P53Y5&&ZZUHT)<g9t=/4MDZVD+u.J833P
%8R+>g0IMlJ!6Z6)_c91?-YH%6X^u=1(cXln\h_W[J>Lq.12<m?C%tehA//(!&qK7L:su,EX@#GEfQD`7AC1udYl[Ut"Oc#c%?`H^
%FQeg[q7s4D[[<!l.nWu/(*f4cQ2jnef@fJq10A01Ne-;\]Im?!MF@\_c.sKscu^Z<bm.@>/LIgBU2'LKN'uPMe0],r@e=EM"rfPG
%6rS,KE-f5:ciAobn@I,GjFEIFEkhlL_fC/]HJj*_!j<iSk,,qSNF\M`C:(Pg71D2:O]:KHC)4'X/,b!jB;s?grPlqj._":1\.1;e
%/[>jA71O"A4!o+1H>IKKgn9P\-C7W:9i8f&@jH'Vf/-]FT;OLYPKbJpFOKn;/u3QEB[NW\S9.M7dnGBs5M<-t;&H^[Kn>?P$=N;7
%?#'NHN8#Ad\P/[tVq&AY2;j_4YDUh=SPp4_?k(aBD0MktR\o5%%G5JP.5P0C[G3kqd]Rm9i^F6g]s_M9,l9BdKb*"+@>e9SRGuZ8
%doJpFl-dP8q!'67b9&O[A`gK&C)CZ<AE6Q2[TpVXh5s')3E"'FO+RNr4sgoUd!?6K.WW=nY[Q5c9b4X-4[PlKYQ>F\EA(9$MMTr_
%W8XTcOu9UW:"RBT_$95([@AXUZ)#a&$*oR@6F6;Xd@s47+%<K-kEV(=GR.nQU%PuK0!q@5[;E>-_<ITU^DH^cd(45ni;NMpp#'aa
%pAITA9\CUWQ`)"4HdaVgJ&.W5Nd#nQ,t5X8Nu*YaI;6199[iS@]n`H2m6Y#d#1^omp[mrW*iAlZ</?H&V0[tg.X&o0QpR!bc]4/i
%g@<sDqN00SmeH_VTg#_Mn<s/L54M44e.8.#iSa9>:Hidho\$tYpum2L*5"u-T7$CidEs=cY22<d8Wm.m+.^)dp#pl/\Fe_I]tYM*
%o(9Wli8n$s!u5tpQ_h'G)PO7XrC#MI@u$)0ItkL5p*%\mo'AOKT=n1o48._KV[cJ9Fna1hRs/c,\UNM[K,\@IW@+=r9"98V/4(G:
%A,g<aLKn$P>aFQL3M^q^NK7YV)(3H7!M^UT'XWYiK(/CS95sY`JpA+aZtu,k<)Vu!C[MWn"K_(7+@XnO*r<5?0R3;RfjSs`^4*`e
%S<?\AMfJ>BXU^S#T)\;6K,:/-iYVRnkJ"(ukmuXJJ*LE-s&aKA5Fj;hIlQ@pj10)$V^Z,q8=MA-L[++Dk&$9&r:h]!bsTM8rlo_Z
%*'ZV$kG]E$[k,o+<7-7,Vil6/U3%bUf0E8ud>jh?Zg?WgkL*?YW&P4a#3t7WMs\uiop$i?Jf/\f%&001bLCN@c.fo.C"<%:7*Cr5
%c2=)#'t<`qN9(lGqt(tFMf7M.4h,e3cBWa+VcHqM-68U=Hfr5]o;AeKrVl$=_Q>?MD[14:\9[E*_8fW[^HaC6\Sk9kJ%/D6IRlA'
%I8do/ai(JUkii(OOXa9e>le,9\1CNNj#Y;=.GEuD<aWF_6OZ\I6)-[Zb91IG:ChJBM@PeB5/W4sTr_t:*Z']jQ!&R5g?=<Toie#t
%putHg3n7G+]@*XY.*X(ph8_b.D,umD0mBMW<Hf>+X6*[F;GU6)lDb8h,WKdKEhU12r2=S(1ERLd7jee+c?(GA5$F6!Fk'&*Xa<6)
%,OTlcpsMO1DgJ5EgT&#*UoM6fPE3)/cm[7Gb/h4L6;*K(f+[d)D;".;)g<noEl"#-T9i0-iqrC1GU#-SH'GK*WHV%aTBjF$qWUg,
%VYk#-oo]r3EXL-8?N8!kH(`=J234`sAsW3:2$\9FW63*nCQbg3oOtM%03G0@dYKYL],R$O+K]P@n([&i1guDD>@gi<7`psI^2l`c
%@X+lq\!8$eh!7?YO4*^+,a_>ce'*B<Z3295KB=Q4DAh_dL-]mO.O%7&.U2pBc*])sm3lDCNt+29RDcD2PE")aCmcJnWZ51RcP"GA
%\[?VYWLg]4V0gA:\g*6Ek]8[#Or2\AN?96gm@d_:I88S`kTG*.`D?4"\W3YPj,a'WVt".E<!nf!!,+?j6Y0+[]=N+nUmFHu&Jm%I
%55!@/7sdlmEsjLVjZ_"*0Af6*"DPp/6MpWCk+?r%IeglJc&(!],8iCO*]A,uQ.]a6q!PP]>1:\;Wpa\(m73&VYPc4ZZJqKubk]XI
%k!o;dJa"e2\lbm>U@O=+o*VW)4)5S\/kQ:=c!oq&;h<,D^'H'#s!1+D:f&+4mi*,-W4_>cHG41.4su["dn@fc()l"O6;<2hls/jO
%HVBFqporNa2I$bJK(mi,dV)IVi^o1U/8fH)<\:2g_Lq].Rf!$7Mg]uK@fPLtH;;2"P7n0K:LAG6m+Ioc52+i+H;pMdlMep"s8't;
%j(lh&SpK\T'1`(qs66_bk^WWq[@0g"`WoRo3]MKLk(B.)DO')imbRfuK0_'BhcpYpgja;4cIJBpaS#]JXin&V,[8n33I1/Yb,l%q
%Dr,b)J)$7J`F!L'h)dTGn)j;4G=9ElZKgn6^<C?0^23&5;C6n*Hgf"-[k>BPWfbceabHTU4h>jP'VEN29^F>\_'jYXmXLf'RIZm"
%>S2GVmbM)oFHbM77h:W'%h?lHc_8QdA"=_`@a^[ep#q:``(BO]eo&^T6d(4U3BXlo]r\:%WQ/d-V5ZTKg"Bm,NMZQ!qXDdLqW+ie
%SYjXoe@p-FhJ.tZ[./KEZu*:3^&+'YoCnl;[-3!<f*WCd3WK$g(QY_a;L/96S\'(o%emg@Fgk!Sra&8\-,":?KmQn(h``O#?+bI]
%`WK[lX"`6BfBTj,1I#V<LI]r;,Fe>(fj&iBn*Z6,9cj>Am7_.WqVq+-??u%q1]H^2lW;tiq=*nLdl4Ge^@^+S2a;\/n'%[oI.d-f
%1LKk5>lMq.qu+W<^Nnf"jkSrNs)N"eqX""sq==2gfCSpf43npQ^A.'*h7`"CL%P?.1Z+O8c9H[U^!C$bp;@cfedl*!q9rPl53Q@&
%m?J2Xs7F4VLG+/Wo[?n0IXU3/-i+@7J,I0_C&HoS934<kqU:5_hu%S?m*t]<:E9rBIdM!oF\"QAn_hhm/Wop.#i34T?,qn.GOHVZ
%4WlEO2j`,\ro$<T?[R+so#(?he]`^tjN'P6]ga@UamCg0bAUROs0oK8!PRU8:I"dB>cmmO^XBeSs75,q([k[XnX7_CVgisgRpW%>
%k?n,WnE_s/55OQuh/aB>]_p6*-Z<>%o%L^RO.EuW`bmr2IsJ.YeR,h+q6b.d?RsgbHh4ACIQ0Jq\T@fM1I'^jn[2H<PIH>9T,p2,
%rR"jD5OWK]4879j0A_14?G(?.qVg)5LG,HNl_F!Lf706<H0X0TYB4,&\!L1255ilTr7*UtLX0;@q!ji_+.O;-4am1]h3W&OHbXq!
%.rqs\s5h8TMo1$RGB+qZGLCQAs+Kh4S&,l#dEMVr]hW7TeGfFL]%Q`1B^QQ2\+do=CHQq2_CPM4h0Sbjk:\R`i7$#4lE>QlT=T<Z
%r]:&%Rr=CT<"jaUQi?harH3"+iMEGYs75=*/,A:&?[TUt07EHkO,Ub7I<P!e`D55KF7+,Kot`G^pt=+l?2X2qoiI\Lr0M$E_#KRs
%Dss.g?SV6PopsRPP*biK^\_c7s+IQPRlo[0c@g[4ht(:2J)1"FO(YVfq!#CdYIsY^++?d'?2j*JMfiJio>Y#/^Uj.<[C^'Xs1J7*
%]slmiY"q8(4o<C$90^(1@s@LlCM.R^='rT2jcsb>kJ-ukh<0itn%J_SHL(MGNkKaWroit*IlQuT-[.2Uqru5_(LFjrm-'GT5<JIB
%s6fbChS+H<qrks;:]Gh)`!9(F4n\e9GLd:R=eC$-li*:_O.F"1rp2Qc>l!<Y(Vfk:r40];f"LNY\GH'TVfq7KS\9+'mK<#q^H[/?
%S*QEU^@9>@ipQ1i8*B#Y?N9l8?f$2-c:=L4roS[DHfis2o.*''o[HgO9,GnPFFAJE41[L9oAIT3fAi4C^Mr0$plEa-](FqDF'm^M
%lg#Y,IIi)<hquUiY5\(HjmSi?ihMDR5P+Qkc[Ap$3W&F"Vg_=shS&pfld$QbFT2(XDLHkIq>&m8l/Ol"]?>,?p;5u7V\d(]rP>c-
%hY@)i:D_l;j,97B^4,1gfA:fQQ+Lt39?/["n`:_Ys7NMnimG`_g\LL=5J6sCalgEgkN8\??@Vh%fAF;ir6!2IQY]Ef=FZotl.FMo
%0-=L\9#n*kr9i*6BA\1mqs+0EMl/c6iUl]h[53jAM=\J$EO.3g^A&_$aSqRJ:VT"G\(6-ec$QG\?i&+1^Zet#mbiKKX]g$fjp5TY
%d\3$1\p\O"VF9=MjH!Qsf3Ws)e@G/9LP#Kl?on)@i6/=9K<%e6^KmZ&\XQ^MD+*oJeD<,AS!Q296a't.Dh%Jp,MM`MC%$DH4`@7l
%]u\q)`bWnIZ-=f+\q>A,Y&4&>mW0#rpTj%m^'"3pDh*;_qk(oYqt&J/INJC2cXX_WH0j-<O8Vu=Z!YU8mL,H'INA%404Q('<QsoW
%&bEN9@35:lb[\D>H/'2iO8Je8Z/:R(hReojIl$YBhM_<o[j'GhA13YtO#>D;'L!JB0mQE-0DS<KD9?g98T-+i>A=!"G2!/.X^l?S
%g,?K9X5)<M[nV8)%JKL]D5Z*2]KP(lgPPZHo_em/^6)pOpp,)dg(%5S6#H)C[r7)X%\rnjg[1ZH*Otj(n(UuQ1K!M0:U\`tG&#_m
%KC,)j2O!+V3HNNr\t+<Ec-k@gI.)a'B3h`[q64.6ls5IT$^U1SB(+GdZUENRNnV8+g:&ilZ[UZDd+blNgp:m7esF"(X[ChHlfWU2
%reD"'GM</pJ#_FM,i:E7n!b/seI?d#?U<H4]sE-:E;Ik4S#:2\]Q4&7Sa.@;4h,M+C@mfMqtbaJRs'5/m,!_+qfglpjumq'B?/is
%fl-V3G2)uX]ljp#*ID(aqn,f#<snc<IaPpK0=mrH@'c-c^])Z2rMBPj9+UW\0%KXiG+[H;r?tn\>`,$1nTPCIT"0(>Q_.TGpu:BC
%&)Bj$q1HR\cG!$#s75LBgY\%K^2S%kcKj;q7DA[OcK0DZhK/Ih:+1B-Bqh9h*KH$]/GUMU!ZoL/=entd*sJ&0)lLaRNfR$VLsi,e
%VcInYE20pb\5>EqjGF[/ks^O`;gR99VUF"."[T`b?9A2bF5QLh!Yn(*R[<[%Jd;j@[7\Wd!UNpf@]d2Ph[ZbgXOTBB>@SBU`qF[n
%XCA<[U"V@.V2@Q5e?>4ePYss\1H%6-7Hl)MD"fccX?nD+#H>!;"_K0bQI]bnnThQq;N&UsW%R7H&Z:5[1I5_4$uH-f<-^o0!B7m/
%1d&@+c]%8a<e?'02jn:D5mieE/18%^eOaK.C0$ERHRT@r^IMDANGtmd(.=?%=V.*L[^V&rb>FAH]jVol6P?M%&IadE(>5@oYA0>#
%:lr'p-;8%p2o5o>KGQ9s(LFJi)WA5U:SeKG5)N>'36aqb!H&Y5O1?:XN:!0VdUW2($4kQ+EXsK*g)a.jikAa&X2<RH"`/kd*,)FJ
%12PBu>.7dQ*-]r;.'!p8/4.]l&6'>H]/[#PW.t37Yh"S,\?7sRpnq[aoA[&-l3/\L$5c_a%SGN4k[qB)Db$h]]$'@^#h*O4hl&G.
%)ne('nCLPW=iJRY@HrV3$MTt'lOM^=6D2jnFc6CQ,L/c\<o@HE]+\_R^gO]KCWqUT^;WC.#j6naVVLnmaV,L70U`c\EM^WP]t@%Z
%?<RFM#U=K-<I!GVQ9G7<3n?:iqUnho4kk&L083On2-E*+Omep2]$>jo!Gj;O<$.U$gQ1@3O*neV:GD8%Z.'EP)Sc%'<AF@46ftR4
%>GGL!K5NAYgX)Aae'.38]'^/IRV_CZoiO=G`eNJeihX8Da%rprC=/<L5Ip:;r8G)eJpGe`L'&1;qh\uV7p8IX5"p.#s1s%X^%%*m
%DX3[5\62Qk;R;jAA$[+8]%;_?m37$S5,(*dV%ghO)L.&\c%GX_nAAEao(ZN&*rf`r%]<ZD>=QFi#VJL/+5,gSC/Bd.!_/B(Jb&.k
%%%dE-g!.:SDA^F*KV8bS#&W&dr_5fk%I#rm?2!2_&>&i+#G_6R1CkgnFOYRacMCYX+@Bq;AXW@-Qbdg$=,%SVW&rF\3R^,"$<%A9
%X-Z4';@h-7V$HSsoLps"-g%,k&Xf+Nl9VK!EQd]Lo-iq?FZ:f@9*:.F;<7+sjj38@0+LcV`rcDdV<k,IUMDNLcRYOL:6/df4kaJO
%("ZkBXp@8a>k>K"FNcs2f0%9!AOb"6oN"tDP+hONE]*0<Sj=;;m0m1`BLqDh?MGj1qIab!Sif^H/D!BR#u$lS(G8?t/ISb^W:fi-
%[(''c/NUmkAY<O@3#H:BT_8!a4U3u"4h%)X#^6#oU9<NYg*27ALZ3]?1bSHCY=Y_6DNP%$@k$SG5PNE7*7.lCngisYeDu9SIV,,b
%UR\8;F-W:u;b>Enh79_O[m;+(kb;,s#c\QN:kP[=;.&IhiqDJFXZ`?2>:.ff5(>p)hI^BW96!WuC5RYDW@ldL.ZH1_P@L<HUE-iD
%O#`iBhsN_qI,Zp,;]/Si]fkUg`tOfQ)i]@1n\d2dr;V1/n`cBpT=V45VNZnhf8m*Ug\n%A:],&SrZ?>PjBo0]r:c^,q9M3(o&h#W
%l-;KebY&be94':^rUodHpV/l)moSD[qI%@rop>*=WP=a[YBS=B?gkZ&cM-Kp2Dt$Yl^sbSl`VgW^%B/&(Ou8[ijJArIsuXT@W1'^
%^G,B/CL<*#`@g"/GO#tCqWokBo<XdEI<,(OqWmbAXrZBj?^a[k<t>+VrJ?;*5.L.SXgb;Bp$g)phnRe!pS8W(T6(k1[k5iGj"/?f
%X7JRTOS'umD#*Z4^sr)PnJ<QZH1dlG^>;#^I(o($T6T.c)Y(sKp]!;S_sMa7Puh:>qG6<1s,)HQ^S?efk%X3;]?fs0c%#5ARt$o=
%^I.>uk](_H\9Vk7ji*#SHKpo&0;$qllVHkeeVME7h,cE4XL%7XgpB;HoDQFQm.nEfeKaaYB7Bj>daa]!q==+7^L"[%o^2UT*aJL>
%[?#6t3r<anc*@(XI/`\j00[!tm>^f0l+:;HT=sg<V3AN<T7$Y&[23_oq:/QUhHsUX?@;Y@[m*(Jh-Y&l4+@+g(Z"nb+'^DNX=pFY
%cTV6hXa-n\^:=2\J,4!5h>HWmce%X3Spp.bV72KIHWRD"nG;r>Y.])BV=2-EqW4&=kEl&NcbFkojcaV4de>sjHgfC0G<c)me*gOd
%qSI;4:>UHgc+>X3:Y"=nlFVgYI8R;L[Q48X0pfI7k?bandG_jT4!.i0'ka6?>mnhG*Y<cf&,a[Nk3n[cWe9ig?Or]srp8=9)Y#3"
%1WS*s`C0=tnfdrr\7,6\ZgX6a55+sOZQ!L6i_O?WJ!Bj#hhLA:nj@i`qQ$cQp\jrpBD$#XT@P^rJ%lK^hpF.D[/J?Y%h7n'faY8+
%nTu5;J*p#KgK4$V!Q=pFBdfDB\7$MoegBHVqJMXMq@`H40RGAm6/MjMGK2sq)LCjVp4q`K?K`/@qq?8kApDW0j?7FL2t*G!Dl]B%
%g!/:>m0iIXNVV^rqOSMlHf!%,YOD4ujKDbg<\=M=)aq:Anm&r\H"'m1WFRJ?-0RFk7;[<bZ_QNa_6ajLf'L+/E:'8Vjee:+4+*+#
%C#JNi$p<[,JR<9ofUo%2D'o\Z[OFX*oI.+ks37-P3npc!qtBr(G6YI%L\C-jg:%f2ZX%:OYDF<rc.bdN%ZEjL\/V=Id)p<_:=Bsd
%Z>Hdlg@W+Fs#?KP*dqhI[>iG?J"7Ic$p+%3KopPj_<gb;[Vm,8^AdnCrROX6hgU$"A*WH:ES@n8DGMF`79O5tD3N_]b5H2OEHgJ,
%k'jt`hMo!WctLIbmHF/mhV!;6*ko>Zn_Wea?c/'`eGFFKD;3s^hGM&_<4?7!q+-_KB!C+'"7MC)NLnq7Ks"mabTq<5.\-nn$bJ02
%:d$@VVo\o-@Hg"'lMSOqCSp!8>'&!rbor?a2_;<ql.7\HXE*rGO:QfhM4%f:lBe.VSOTOG/1G`jU5AVcQf;04U[B=0+'/k>Q[1P*
%7FrTb7VbdoGY5PtVsfihk+X`>NfGlUY-h5k@4KE4KsI3h#"aMFE1uS!>5ARpNMRVSOdN+E['KU^7NrO(dSU1TZ':A;d73tKo[5Zu
%`)+t9KgI/tY-i5KLWX=SR8&dhD[Y-Pd])FR#9sZkdCS/+c3'A^V'6YL;fgd]A\#rYq5(HeKrHTRLsdVl18'*SEF;Y_>1$d>k#!m6
%recgdfLhpm7]ToB=p>lY9aS1I#q4A>X[ai[!sEC.Z^d"?;8F0uM6A_6U=r!MUC[>iD,#Ge.aYo*(l:Rf9lu>klU<=RiD),YC*bR]
%6!+f^p8;"C3dY;'kcBIQ7<<Ba^hh8AH8Lo?h:hn9/ll1:M5XgAB^38?oNBm`YAGD>lHiO!]:ns?4`l(5Gd117HOahRUlTJbd3Vgi
%@2L4Bm2qGS(o1\,M#tYpW!9h_6Iubg8i][3X">;^W/D>#bX%+`b6G6JmDYJ(?."WDokKB<X(`t_@)ipHBa6Fd9iaV]N@/L:nrPah
%WXVdf\KF$c!Hp4lYsB_5(9=$]Q22bY.&5)tY-Q8kXBR&Uk*-pRKPju5Td"<L!+Z1[)0Z\(/<sap1.;2mgupK1BMWoApH_U>ak]'G
%D?B17@`9[X;R9(p_egbC4mhQ%iC=e[ZUrA!^h0XhH=P1YghWt];-<n)VC4.d,*dhIW(G"Ak#<Ep`gf60#YO<RC6)L(Yi?&*Ll54j
%iiK%d,uqY0cNMkJOF[P-ITWU35-LM6CO3:8-W^tG3F+Snad#=>dFV<TVS\L.YX7ueF*bW$aRIND87KX2QC)(n@]-5^9UHpXDBi;"
%>oH].J5X)/X-H*%?4%E=\)CjD-o)0C-9;pe>0Fi,/q)(hoqT'B*J,RaZYCYgP/p'/%[.X1oMpEV&#6LOXEX0\I%<Ak\JL=C3/YqQ
%X@.uC[Gr)LSI:ZYs%ArG,^4'pd1i!?Bo84t89dn#Ytm1IFK#'2PkM]4FK*QqC0bF+\]jnVQRn>[B@Z#+RZT_.[CNI9!0i^o*Qk=X
%)+ekh`YhR<;0,`1_ao$LR9/*5'JQtXN[mnVBiut:Pq$gN9;kbHRO4N`7?I\lehAu2odCQu%1'R?-Db=DU5#.6?:OWU.U:cLgC`ab
%&/c;[<k"9tFWaLejLa:l73U]aaFTdaI8$oo#.s/'RiWjXX%oGV2OTeuD2K6L692r&XL/HR=&-bLVNT%Tbp_\4dgSnF]HW5@U=!/i
%0[\CmaY;0tRHu_h;9glEL_S&iXJk*tPc*M%Y0EsJYr]r;0`%fD$pumOAuc7[XJW-R%S`BhWfP=:"EY>t9L]rI,@cl!js(YoA5ZoB
%SntnCA\&DTV$n2F8cbMSg&)5N>^Z/m;D(^Y/3<ijZ=.LIlVTFqbnt$$ae[Lblrn9nR;P^G,pbF0gCYrOdA7%+IAr`-IIW/1WLUm4
%](Ee(at2WaXXJ3T>Gu%c.:(m:HKqo"R%"(;2H"?HWT:*k<n)(%b"5)-W+EcSEXFKO'@q3P0aDH=>5?k[Q^UtF?W7U;<m-53jgZA6
%^Z6W0e[!q?;Ei1,U6_9FSr5C+I8upK(gB&=,fO<V,`tKf4MrEj;X-'-+pX(tm#Er-3l<5^A1T[44MrEj;JNWhC:FT3m#H]UCr!PD
%AoNX;a_#aSXC5a\MHFV5+,CX4?k%I&Vhj);7]31CfaLW<2XHAt&PKZ5,`3LX6@$gRJ3HOJ<p(5"ihC4gpQtP]P+'t4=`tB46q%UL
%[,ICr/YGV2+4&1Z.BppiZF'j5e8Sp?_=:<LZFRU(I<%DY*F42_HFgn3!^G=i,OPdMekb=b;M2/G=HN\C\,+b8lOms&TP(5?E?8L9
%V?6EFZcT#+Y=htp_i=JiZ+%`VXW4V"3%=]5*P3(nNIOR@f$Yhf3jqRjlc6(4!3J?'W,XHc!;&hZp"[3FK2!h,AuhYlRn#R(N>mT1
%4[PrHEDtJ/XjMl7UmE-Dcf%/V\nQ+KU)db/AroXW?3_2_0R08+0Not:#G>ZCLY=L&h<fBL9M2Ef4Una2Yn!$942*/gZ$L!N:]h3I
%]j>tPLiT\L6p$@>81!:KMNVt_\OjG$Z$K+dkS`KN?->qB$$[;4O`DqGW8ZkN%si.r$YAIIN#X?8jcG38oLO%4b%"L_(j'2%E^0[J
%I@b&8.TE/e"U;HlYgSm&nikDf(D%t<9`U$#LeT4mAt,NLRg27/#d%[YUiHb)P]Elj$;laK=_jE,)7*3VWQ!"T'J3pMQ9/Q`E^5]8
%TBG@E$oXN<;\;G-2iihu\_Bc7aXGVtDj30"[C9&@65aR2VO3)m(9,+eZ_#!+I9c+fXd](f'@]Qkout'EK1RCI=^r%4%5SNU=?/p&
%g+g0hXMu3lL8fGqeA>s&!n7q=n/>o<m!O.N8l"r=eSi,h-9KsMTkD\D!""c)>F#=+<DUf\@jH>f,$Dh9b!c+/!nft#>YgJuRSKqo
%+Bsp>eS#T:!`k;&,tc(\!jZ^*8N@10e$.9aaACd+#I9)hQ#rqUR["fq.$qZ^br7ms,B[K"8<la[eS#T:!`k;&,t+NKX9=X#L_sZ#
%c@Y^GX?8+EK=6rf4s?&R)5j65B,RQkXkAZ^&PMqA<7ScpUgsM,7V8$G\B_D+796`4js#q>\Z"e-=F!<Qf)eUnL^5OKC1L`Y$P*SA
%Uh8ROJW(Qa*eXqf:Ch5l`LcYn!q!:42)>)SAj/b:8L?=3!i@G^R!Cf)BF,V)L=2orOYGV*fFk'N80d)BNWj'0+DdG!l"ZH?AHmhD
%,a2E$P&$J21k^d*i0J@%Yu95t>_<X$T8$AYe2dl_,15O>6&`>f_BLj@Z*59D&(WQXUR2<O,?dQcqri<bp5Tb:19"g/JFtb34;,Lu
%!Ru&YOf6i(lM5K3??=4Y+fjM"/;\)UY=fU@5WtEfqDCsI`RSYH=_:LFDN[TeR)Y"eAf:oBCY8s0L5DT[bX>-9Y2<E=KP-[/7#IiZ
%e>$_#Cm`p:_d(,Z/2JD2_d"HbC:#F)R!BB6gUT3*m*8LGL`(RdDQ;B<-#:jFHmP(^gfLM%(3c%F5qhXUeV9I=<N8bNK<(dW3hrao
%;XQ$>Sq`S%5e-<23c_=I,F".f.Z-cU$d:^GaG?lH6@)V+8Y71<UM0jqa@,&kq/c`DR?Y$c4UnI*Z&d#hBD%-&'5*V]EOEMcVKn%g
%BQ#!R`?o#!Dgf/g%DM7<7>%]te5LLKhk5K<BsaJ"2f17jUss/0dkLAI5`L=h['(r^(kAm%\0'N6Ri\HF)c(8hJc\$hoO(S.T>;3Z
%+M$lIdfY$gLL/ZGR`smUR:RmS0Zg,\$0u;mm0s.GcZSJ'%%u6T<5>@9g3Hc5?/:@1^^`:d\5Y6OU<%nSgCCYT9QHgikfJ3jZ0*IL
%%ei,r<&V%VW8ZlIJ:YJ<Ut92t7!i!j!HpY'2:`THD+`0n%X1+H"Rg,F*KjaaAqu]-O0J@ear3\c4gDo<%k_;AMiPlurI-IjCDELG
%(V]-!X%P>t5aD3."d`B!UdU-;[>59TC&fPX;jrj#-5^5JX-T#aM2^6Cf0\%_*XYboK+/CG+_>!^FB[S6i%fqmLY5Uhaj.@[e:*.a
%+1*D10&BgK&sG'1=\7]6hS#SnLX)Pj#7KsJTLtqE?+)"lEeeu`>UEZD0#%!EZe>0*#H@gY7-c>.`t4C]GI[7\ADI*_Ug`:YIGGln
%,RkChD3'6&d%(H`e+P<%P\b%f4dlSPJ5n+*9D/Vmk65DP,*R$gXJb$RDS9ip5e;],RC9l'&kU2h+XjS44V'.k0DeG(VL^@-eP+SX
%4bgatAV_Ls74.+Y=AQiX*IAfnNGaJ"B#4EU<c8jf(j",FL1)Nu@2@M`J91gmAnIQ?1l>]4Ma\4sIUO[m?`K]PQb2rT^JF"Gq]Z$K
%3p;*(Rh&n/ngt2$e\e*aP!3=t7Y;$rO\s0*o!&K018tjd,l(icb2)on-#4?%Bc@D<L2K(<ZF2d0V<1TdQ3=LD<?ke+d]fg'X;b\J
%CFliYQ+QZnEXT>^gu(Gi(R[bFhb\jW.W!.V!^#2pi)6=eCM#_u?JL_EN'89d>-`no33NbL"1-(ES-S@oGe$JnK)jE'@9b7iNPK:'
%2]H/\g6Ml*dTm6T`fa0-JCQ]#-!G)M("B?)A5^^Il=jD#4"mf:OfVu-jU<pVe'Mq989T_*8>Ke2Ju[3DO9M^(3Pu!<1b:."42V1H
%;U0me1p#Jt\+Zp53P31-)kcR=YU6A3%'Uo04p7'Qgu#)W(3"K)+Tkaa?j:hq_?S_44_t,dN^u/@f$j,/=.[U\-QpHSip_?u3jmW.
%!gnLc%t[Hr2?hR)BqH(NUPT)[A<.[K?5_`,\QMQK&(]5!g?Zs1S!2C3F\H%<h_\0aCeh^P5_0qnA8nNa()ru]Ya'q=RtrX&[P;Hj
%ot3$_%a6,\E[".MJnJj/0+F1,7ot/8JG+f%4FO,GkeOf2+LpthQ2H"M.l(M>AJ/Ht*5Igm@rlLpT%RXk)b`"9B>Ss5Ae0+I.IrtJ
%kfO^*Vf"q)IOmMA"O=CV_3K5DADBUN17g?^FQFt&]IrEj;lmN:0fK,b/+6A272.W7U+9TtTjNF&:Na#iFQMgY):cdY6u_6nK)KfC
%dHd]tb[uY$4J=9$'j+,1Ag</jb.E=0001;HkfQ8p)C0IahQp7LGh>ihmY/9sU*V*h(<p0D(nb%ATL<Ne1\06&@nalZLmH+1](37W
%0>Wq:rW^*Lp.4_ZU"?k'mP9DPLrmt$BK"emf:F<Bm#>TDN1,fO=KobTb^RqPq*]Fu:^pMT1t5oc\^71E3#KJL[O-VcmkWS]Eq\#H
%!=O\(Ns,u5#$5l6I/AP#U,$V6<RPi#S9^oD(u&\pZe;P]26o%lgnhqb=#HELSq'f[?&=`KXFR;iA5^^)oe``g=!#I%``APc>\TjT
%X[)C:>tUElW^`1;(9hPL/"%[$A6DVJLiS,Ab#ts?L/m9T,M<J=bRAs5eQMV1`G.<KoHI0e^!)Q@Z@Gq"1X7RFLKQpfAt3(k%bu<X
%e$*TBGSlJ]j0?PYAfY^3\V;9L?#Z.qECBqC+"Io'isDZH&]Z^!E=#;oW=]mknqMU1E^NnL#ob4GRd4cheA4Vkk(^Lt*"1'?5Su2`
%e(#i]b7"Zg8LCi'-.anfgj,?,p"6`^6[_bmc>s#$lS',ZJ`+hce7ch<H8Ie]HXFQh#m#jJM-moA?B`.uFc/r9H*Elp=6%S9r>I$U
%@d^SQ>k1b5lIT9\P>Z%!oiN-t(GN!-=/.WcR6ge_8LEOe=Ad8CETrUi@:H1GcpgGED'Wrc\4_[rDL+,KKE5REB:+UEMId!FB:+TF
%b)(qKL0<Qf@tW(pr7$Ig_=uocRbd_C#+`U)@B%4oT;lOD2ocgn@'q.iE.,6qAp8[)6"b.b7*9eZSq^>,f#)Uj=Iht;LXq=%4DgIG
%g`L_hn^pj$-@Lb:N2@1`+qorKjjOeYA5^^)oe`b!c)Cq$f.h8?h1`"k(*.5qJlD,9KCsId2#,3<q\sk#80t3s7dHIfdfu"0b*fK*
%L7,[H8[#/q[pH>"h0NNql^BSm,^&G=OJ@?9olFC`\Wl!*,DtE"*-LQVb=*_hoqEdS,fhdbIX?^:A5[0Ml=lXQFmE$OJQpH&R5<M8
%cd$r<[pHV+i78ikOd^ui.@Q6C1:M]jm_-4)7Xe4D?HFk_en6AFW*>mgU5#/LosM[RGQGQcYtc<d*]L#A`NeUR70.DrGmn_mSjt52
%jM1ib4_(=We@ue_=X#&U>P>R`gLO2s[OGt$\X0Kh,]N>mPKG%V<6D!4q6Nm=_:)bVnu//Z'GW336ip_&/a_*A?^:2VcMfAZ(NB+=
%V7`b=^ICX$2g>$3T#'Hraq9ut(ajJ%Q#Ql'h\[_`qPU",dkeN4<]01:)r[lI^CniMq&A:oT)T]D29akM2]/'7X(1l&NUN\"^[dr2
%s#7ZUqYq5-Z/jmL$k1=,Vh?RoS(TjH8cT/!GkGe_?q!41.h)S3Rp3oQ@k/3uB+`33o'tj5[U?uaa;,kI7Q$V;ZA+3uY!cu+<^>4F
%1+BV5oe`a4$p]:PA.<$!Mq?54^Igl1!&^RFJ:mq_N9F.[LFZ>`-@r7,@\bNrEh/"tQ2T,C2oqfE@b&r3nh>Sg=V(eA$&N#KgN58d
%(dP!o$,Q[#*JkJ(7l)EAD"btaO>)4272cB7\]DVf3#?9G+9an;.h)SSYSPS>^k<)Ml;7)X7Y`)Vb]C,[+H2XX0%Jth-DY8["8I29
%HLI_#L*+ac#:V@KUaB3Z<(.6P%g/Vn0OWGXP3sOQWjO!D)BrU953Q---9.lG\f.DSR/p_Tae[LbjB?.:#2nKF\7OHU=>+(_G!^Pd
%JZ%Ac-7s@p0E=2A/iAN_WlNQrKE7=^,[g]#,.AV>?J0`B\&bA.21qmK[-&`D!$2K?IKAa[%)=KoeQhZBaQg6Bm*;'L,a\M0*_=Tg
%#+/pLibEHj>'%g+ZOC7B1!-5=9H,htYVs$`(kC4P5T$_#_>lJ-,n0t?]UU)Q?o([.0Ye\#G^>)uJBk0iL&l*Car1K2.5aI0^uhAm
%@=UNkC7'8`5hl)9@0"8]6d12Wi*!qtg4O#D"'?'L.<gbRO/K*GB6TUf#m497?8W.a:#6eq>@^Y".SW('@tQBDF1\GmXNi&TN2nH!
%c.c55H15fR7EC-sk09pK0qLj"M+fatPtsnXO@eQ<WnO\'8/T/)B*\SfenGu:ef@?"!4qSh&-f@]8('*,&f!D\6Pr(8l6p'@>Bs`g
%")'@4&-fA(8(KB0&G.g'4:G$oS$&K&hsP]`HLDbJl37b$e:+.-%c?]DPeOXd70(R!g\l#q0S$*i4:K#n9b7L_P9peB9L2IlCi:.U
%,uXV`^Mm<8g\l__iU+>\4++[/;DJ6_U1E%Xqf]`D4:GWYQgf0*JK;J\GH#E>qs\bNEeCjuFJ?!b]2*P`hsOE#g=q$Mm-sDV9CT!/
%f4!p?H+Qk['Ar4V"kq^Z:$hB:^.X9]P<8b2bQcql6`h7`\C]Ug`t@1r6^@M+H'dJkpTA)Tlr3M!?`O3l9^_DJ:n(k:jR3![Zp[CO
%ljGj5DtgfW_:sD*On.'DHEFrMGF?8c"MERZ`o,up4iFi,g)2c?.JW\XdX:s=BSh,l_cO3j]2/*MDtgl[rVPZt*PU?RR;@$1Dtgju
%q"DR%?$ibGGe:0$*PU>g)7=QA^OD$mi7i[UB\8tq4YP@0IXU=</FCEh9?F5]<MRYj\FkeTk15HRak_9gC'njl(h?NZZ0H%*\Q`EB
%1.^!#6/?j9RGJD@f(0pI6ZDAe`OnjcX"IDIaYC<uN(rHcMiu3<HHp74DS6lD\Qdqp4UioclYQuDhsQDf)5\3klZIM>\)+!K.D4J<
%2*SR\>ORc6](J7rKX^h\ZPhqln93^]1p#3/+(9&*hX8QhiigdQYd##40I6I0H'df972"$iqfZ>e'2UKq><b%S#r'Js7Tbc1g\j)e
%ffO-u$s4>&mMcmhiJrTY[Cf/WZ/?`f[r;#c:006^>MlTR^nf*.qH.bi1O&/qpr;7C/(TKbqc)/*mCiW`I(SiF')FOMSjp1qfhCAl
%IQ+fAY>!<F(Q0ValfXq=iT4sjICZ&"]<Cm:YL9Q8P)hq1^\1jfV"DpFl@JT_^>685EA`rlofA\<>;%<tmagQoW+G+/I=2?\KE:DU
%gO5ik0AM]Z$o=$VodT+po\@1:2`kZ>Mp/<dbbj=LgK\9,I2<VUbhT>PG)gIR@XWL5DbW+$mt5Mkp#%jCh,cb$[KaFTlSF7(qpn`Q
%]0>Z6KBm#br=nl\]\KXP_Ae,3YI1k!gO5W+m$0Y+8,cuSV<$1?WmTlEh"j=::>PcVU@PC_i7>q+Q!6A=>JE"??#rN=9NH<+%_`t>
%0JiC[g>sXKUt.@`FtU\=W[j3R#%pc*ogC`^i7&Klh'L<YFe?fm0c;^sPXI^OT;+Y54ll$9VQ1%[G]OS8="d3rUG(e[YC;p)ccHUP
%+!]jRbi$MVJ6c$p?j4;@%C!URJbFJ!&6q2n4%5spc"GI>@CHRnc9*bH=JT=m_]noN_oIM^!d=fG,Edc4R2]QIWt^P,#V:SZ7XX=;
%%n2e1:P\a;<$>sT=%ZETZ+7dqbZM]S"UZlRPk^d(=Y&_sc^'-XcrG.D8ZNh/Sq4LfZo$8?iWNEZ=uZ,6nq*@+22+5_94Y.Y^K=eu
%E"@q#]3aT2c`_BB)s=I%K%Om9#r,:76k7U+6Y6[^Aa0YkiSlO73VBCWL>=K2+\A?)OBQ9He9]@D(n)m#,Gpoma<irZ(!XQBA,B;N
%b)Cj18k;jn.@9#TM(=^1"uf;M[9g0'.[5Hq"!l,*P7_#!7q<9]0s&F^o7:-ODpn`u7n>APFMKXq*Pc7V=HD-JK3AH3B*1%VgMGfN
%S'M9_j0Jb:M/8mo#(qh"4?/_;ULT(j6nl?BhrHQ+Q4rTJ2/i->`4UErO(j[V`,bB6`[rp5;9PrZA/Jq.1I6a&M08+?R.]G@+[^C:
%>\4JBUe+smOB?-6e9]@C(n)`tZ\D@m\3q^FTXI<gBW5btok-%.K5#M,8(6[/\]h"+Ye"nPH%9g5C`=_2jdg#N]'@^;<cH+/&<f[h
%bH)pDM-^qJ@'ZK%QG,C6<]eEX&Z\3?KhOt+-.S^2*1X6q8!7'PVEnuFfgoX2BU5$ENCH&X@h"=%JIE8+lXlbDfQqOQOQ#O^L<-TC
%A3(tB$l'E@Asb:C%(QAU)(#cX&PH+oj:_D<Cnh>W"&g#Tg7S-pfLFEE0cBM97"qM2N@H4@b7nXednHEoRNX"6BKKfHO\'YZ@'22>
%a*D`!F<499"m-/5E*S,\+O_LU*#u#1CP_G=1DMYU=>h])<B73sbZ%LRfgPjRR5Y&l1,f-Z1.M:W)7TU-bOBW:8gHQ:r1igYoT/2o
%GP$qQNW,'`Lp8E*8!&f/7g3`,ULIR%Ns]:oOo@iMaT#T&++KlG;sPM?]:sdC=*(ElUqb;Ao"VM^.JQDpJbqr6GD_?=J#(W3c3mUA
%\Ml.G8AUsK"N@?2CA]<Y&]l56r?IY2V.e4?MDZa;"n@TO;)'Ws7oUZ"+)))\,F97#)>H^jJbqr:iohK7:C<P?Uabqs>[l,2LX`]O
%5?ar85GI^<s(E:t5?c(/J)h5F/'RseASV/g.dc.9l$)57LU?`89L;EH_*<N&^ct.t$B<Ft1;h(N6#u8G\.!^KVF-Nq`]l6E9LXj<
%&Mc1A;Y6#T8RrM5UP_P@M!Y<Ea9[U^JgAmWE>`)'\.VA/)uliT#l]quctq.]5B7XH2$O!cEWQ1GlS89aJGt\!T7&b6r?I[!klCW+
%XN0\661BrZr+r^U`]nJ]T+0.3MY3o3"Um!fNR9u=YsUYj(gkM!ELC.V$2l(c!";KI5LKSNE_0L8aCRgm-hNJZ0V^f81/qqGrfL>:
%SdR;Qn&Ar$:eI1H2ZAhBB,X\?O-$&<P+mG:3nC_Z_*9D_lQ=NE%/s*q#6.6CkT@@ZW.b6NOlc]Dd?:5R7'efJ8")pIaCUOc1AXM&
%$i!4oK?8k2i#c+h,TB32rfP<YpS0c+3Gn[=/Uc*0U47hRBU5IX+/t9T9D":,TgE8]O3Dq?>`dq21Igkp9SXmkNIRbTbqNS!ItS5C
%QnZlO1*)KMoT-59.PqA0aP*8r0%`YD]eLCEImf!fVN$)$mE63>kT=4P2+(:6O%`&S')a&B.h!>kJ#)[d3\E*fQuh:Cm/<:]8PU6)
%8;DIlOeR=.F+p*HU4;5r,+Id<V3N^<!WOR5J*P`pI?IS/c#BYbVU7VK)4p8$M544f4ia7@jj2^N5>9Pi+1[?`+0PKlI,$q9?ut!s
%0e_DV;ZOGp7t7:`jF=B$O$Ct4[Ct_#+F,$E5GHI\eH.3<k\p*Sr9nC+4<GCCrs7mb&LhjD9se*VH%Ci/pVnKp.2^I:8A:Y*4,Ut7
%IC)I'$`Gj;_Bm]J][S=[R!9DNCp*E('$!.b.H?+G.<"\HEJZu^h"U\[#4<R1M:385p$qla/T\]aL&R3-W6MCd0F7XiJT7"uPrEOM
%9+0V7UFC;G>U!s3f`jZ@n(nY)/8ToV&5uTY*F;a\VU.=Y$+%,kM"X?r#[&U@_lZ(6[.l1C9`5lr@E1l<88?scfV>=C!jc,e6$@"!
%bF%Oq,;P+);+4FQMlLb;pdJf.3%W-ISJmjRV1pL_oP,2k!>M^$1&E79jJ\rcN1#`.oKY%e(L\=rT*Ja/T37e'(>.Efj"`e+q!L;H
%6\fFPB:&b#mFeB;jd0B_?l:bkF[RS(-\;B<TH(/rdIBQ:'c9lnUN)].b6Y<3JPH_P]kC;$kb+W[^qaEF\;V<O3[0pS'-T_sEkI%F
%X;>dY)6-3e134ii9s0uOGLS\(@+It'aA=I.R5L4,_^5.I1^Pd_n;.d+S-$D:>ge$Z]"atRFGa=8e5BZpP$Iss</8>54*6,XpZ#s+
%]crdtj70,ia9B4#X@%\^]P#:M-eTWJ\Rifl`90u<RTqdQltH3q#-/if"m\u:E>^RHl=d[qY6Z!qPiK_DB"dsiaA@:'QXQN,F@^H.
%go7("bs#>7h[:=I5$Ni%):(>fQfo/m.of,DR!L".!l\Zc<iTJcab\QD3]%/Fe=gi:NjV-o"^@s0i\G+.hOi9(;Xl#?XtV8ZbB%bH
%:k&Z2$M.t:L7KAc+fTU*DiTeJVEj;Fblm/91W3kKFOh%l7%\-br]3KA8`#6$+#6Qr>Sga9e*%IU$r;&L7+1l08"dCQ-rke::.j"!
%'=j&=CJ#eCi"Jha4X*mfGX?/6r.*9RD9k`JhlFr\cYKgH*(:Yb#G7pp=a_LmNBWL)SIMsh",#MF6/<t6V/G^W<XUu?:iYXG\3tIb
%>f.c]VW\\-J\-LO:I@F=\IimB$fr9.Mr57CWBCMU-&t1:1uU0f.D>j]Ap=U('POL,!_"Dq4qUeNqa?l>T?&<*X`F/m+9V@pVUV2b
%U@JM\BU\GGdhL[>.4[OR,gT*b_Wl`s2>6'+cZ8<)p!8(@`[jpmYtl'%qkHr?X;%,?=XQ"/g_D*3/re&YbG-O4Kl;DC'%9O*>-=7n
%4#=fc`(nhpR7*[GU<t?g`h?1=er-kd%+V%k).%!d&kP_[i"K,f^aCo72&kIeVO3=p3er>^O:1hO=GPSm!UtriqJ<LRk"Lu^pak>e
%&_:C!3FG+EaDB0d"ggIUbLdL_J56mF;#LY::]Lh-R<6)<De4eZI9%L.:,/.H9=AK#A5mLW12'cB5-VOC-8TBcNSkJhTgencAEZiL
%\Ra9L[t5%=UN)\^P`dEK6VD0bBi++Q(LUpBR*6I@WSnJ<,+8WRT;Y"<qEtu#\%sH?2#9Tm_]Fm'YiO7-7!*uEqF't@/bFlVNBWKJ
%,ct]ATEMfU:P<lS:cP"Vooj2'fpkbl)=_rNLF:i/8Qu+j60foO30[X>aCT0=)Sme9l;7BaAEZiLNb$_![t5$$T.Ii^,h$2Dp*>f)
%2u@ERd3h88Zd0C)I3R,P\O<%q>H'tQqF&m9`EU/ZWZI/ALrZ8O4Lm:4OgZsm0ZSf9fLjDO3?C7;*Ka"eM.!J?BF77iF<48&AW#r)
%_Ep^t*`X@4I-W!gO7TM>joNZDk6a/dA?seW!'X8M/(B=k.>FHNqF!\R/hIb37"[nueQ3XXSW?HV0#NmD/)dkt"$TS5pf3.8)#NND
%Bc;CDQSJA+8`UP4U/Bd`\5+rC^PJM+**.NK>Sd9t5*>lY\ift>9of#.LQVR(a1=Z)!R0fVhrkaLhq;Oe4tm7+&_*?o>3b71BXP(^
%1;pXc=bqpQ+pB20(<KX9_NA$[VEepMZ[b(m,@!R[((Gg`n;0Vkd'uk>,u3brF[u]Cd]gnMXPpRJ1)#L1X1To!Zp8'[*@'kW+)n"_
%kuZ+p;s4n*K\FWW!e]DENLe%M"=[AKpr?VP17EqaG$6_V:6A1[TiDhHC4s+.+_s<Y5.Y2\\6YOi\&]i=B\!_T7)'"q$)Eld5@TA*
%c[t6-YAkHRHV=YlOe+pVSZ4C0,o^BnVRVRf01mFXkSk[8J^cmV8'HGP=cfET2(lf4%F`-bjQI.\:h^ilI)uO@W[09-`j:]H-$i&%
%0\^D?XiimGYk?Zr"(R^H1(Y=m$s8;2"m5"c`"eA^/dNL8;Tq<@Ll>Ii8g9bg*Pp*sO:2T\PN^)]ILD)ek1dC>YN<\`HHdBfhPkcN
%I"tRS&'Y94(ph.lb]q\N\O>ll)%*1jWD@!SMr0*pe[KOd3L#[POeG.m3n7Wh9.n:^/TI19PZ#CFH:MK.4*UlPlW3fG,#-_]l@+Yg
%d5uB:;+lI_E,rnK5GL!,LnSN2l/72.)SIA^8QsHA,BAXt&_:BrZ)!]#qBT*+ai4p?rDS+`P7c\BF\!/2d%OYBWkmsjEkse993fJq
%Y<!RSd5s[L!i^;ubS\lVnQV+6$o8+2YjZ'_3/J%aWn,EY@BfEf$Sn6#_@RS@SomFRd6#3G.Zh(mogu4gMVj#f<.,^L&`6*$8.o.+
%6IN_MK=*td"^@s0i\H.pAC_@'KQVFN<BR@`qp_^Jl2!SL=6jd0=8UnNT!]9`eXD&mX6C,2Ycb,fM<f"sbB@1YIqJkMYc`]hi!Qp'
%>uqiKijtRB:>kGQ:#W\;,o.pH>ZY\V^90(Z>Z^Y-Y,aF6lY;b_ZZ07[=hq.TF1\TP'$#-;8]/,C;n/uRM*\2tf@?=@YH)AT^i_M7
%Lp*j:L$NK?:n(m!%2lr=CNI+j/lm[K2&YfIC/*Zug*O&OJp"J5i9TYhjl*e>-9\lYD:u(m9u;k/FZ!]\\#[cCFgYCbGF>;;Y"!GT
%.p@hrC==?JH*aY3lV,81f@@sh9NgAdg6G&abd$qo#G'^dBm5]aRmjb(C\O6n\B%.VFu*<ZMepicaa(56Y.!=;d$M8`7_WKV&f95u
%,BAX!Ch0J@MMl;W?>hktgI8QoaF.bO/@(D36ZJ6*k%cluG*2/IApmcl7uhcUfXt?tb;eGsQ_h45L7uVj5YH*ZD*!!f]3Ssj@,W#i
%\B'Ep`[t?Q,273-0"^g$<kE9dhQ43::qO(c`Uu-P[Hl.:>]6*l\MXJ^Yhh8^R`i!BDnF43$EW2!f@tT\1>\Oeid.(@Ea3Nu)V<^r
%1MSAsH5gd1<bR?Um<T!mXLC'HlYVt[>339NL0X5V[!B"7f(-;.a\lA^@ia8<B.:!m<JMpac$EU;h_Zm(]o@/JQ7R$hXZ@@QEP7>?
%'hWJZD:\#qASJd5Fr@j`/;<aT13=qG\'96DA_F5q?,hiDole5LmgYaFlYUKIG5#*rlYUI7G)KL\lYY1Gaa(5LeeVj9QFPek<bdpO
%EP63M,+!^6AXQ5kRL>M21p=JK?u5&=Fl^%0_c!A1j2En?#G/B'4_\)sqRi,nc=Nm,-:*OkP*J.0)fAe*A3'3a[FDC7aX2`,O%NRk
%#h9i[@=)9O_eHTnjF!o`OWR3C%).eGY[7$2d20oG5?3A4^)*Si$P&8B:u=6T1J1@h\u8.#\3\iQ;,4[6*kBJIF+ZQMh'S=`ZV=<7
%NVOrZPqOr2o"B@i8kW?R"%nW&'#sSSobqb<*@T(Y5^2Hg1J6aB,O2Q+i0V8!2V)qZTLE`GpUpF8Ej/*2b\#8One/F;PX6CbVo92?
%(cKRb*84=ka8,:Yh`6tmXaNY>W@FJo>\`9Dk_^()Hh.6tpI_S9bF9m&/\?)h2OTe.&Od-fXl5jA2#;O3hV<&%/Do8.n%0'f7&Jh_
%:I0N\4&@GCPl]I41695JaFM5oi!1+dJd"%(BnD#+#p=@A-E.\5WHq`[9c_^'::_V"0muqTAZTD<lK">*e.i73lr'$sCc,e&A'GJK
%Qp)u[bui#nWgHl39n6'\0'-&#;8]N8j8.<K51X`PMWOt?XP_^<;MVGqHJQ)1[a1"84dI.+?&mPeNQ8as>0kWD?@KC*/5dqT;>%</
%]S?*#1Dsr[5,4l1>\A`d5nU5-qi209E1L2uC@^iWBFU#iRlk:)da8sK4_4WB)R_<`5RiWG-Db=DU5#/hY^V(5JJqRjQQ!:cbKO/-
%qJDB5C=p6O1M[HGW!C`Ye?FC)A<Ik>&'M%X_tmAq'l)Ab/@0(#pSb"Oeb%h[+m$-Ce&ASs&!Q;oqQL$p&%g?P="8thXLVa]VQ43:
%+/[e(6Q]>OoO4(aZR;s8\]O4WHrLhE3.b6K5IB,Rre2*#!^:Hb[-CPAh>,o]&$<]=5TH9[$S.r`nh7*.Kus+D'f!h+e8!O_0P^lp
%H5UWWB[t:WER</"K5D`^987l)EN*c`./,]7BjNc4alU=2Ab%1M2sRQ86-H(Jk/j'6fAm*0RVpUn;eXR#Z.I\sK;P-QAr9_a$e$pj
%B:#%Q#!5j@fc>7_"nW;:gd+jk5jis>8(-%O?"UN<lrZj?ZO<DMJNM]siqqEq"#]cN2Y`/hVK_OK*0Ws;"^9H=ljblLaA0$&ctNC@
%)HP]qB">"Oc-.ao)7p!1F[RjeT2r<0h6^@pGUHMW[G([KlWYttkZrY=A'c/\]iP_j%prW$RYFh.^m`FR4^'ElRA;cnZB!!PG"fEb
%cCfIeSb7ObTf_Wifu&0fRp7<+7<#%h;]0n$egoNhLUAXo)sSsf^W"J-;&Qc?F>Q[#:SbTAR\!&O8;*R*G>)C?e26keQ^R3C'^U[F
%&+i9$73_BB!ed/DC$^[/1Y[%$fFoDMk_X8JLd>P;M=m_Wk_YbJSnKn$0&+15#kr]`P[[En;XB65g@dq$Z.h1@-cXn/[.RHVp;C\d
%oL-)nqZnm_IcN8:hAV#0;0.;[.+Yq`'RQROYp[+Vd^uE]-UKH4'B-Y>K>u7OlWkpc'/bb4d:KUi3<D>UDDEpp`La#PTi`XUgCm:N
%m7a3$`qrZ@jd$\2H>7P:0eDnZ=<k!=1lXZGAL9L3M[MYl#C7ROenK],8Bhlr]V_q]\r>;q8g9n['B'(p6%&OYg4)8Vg3Xph2"j>$
%8TqhSl:?)c;a[PbAc.'`4e2rY?.7F>?,hiLnF=#5JlQ#n7H;g]Xb2n>R]i7b-sB,]R6cl`-X=&o50t+b5#Y>G:S*QCYqN\IREmo<
%S(JP9Pcd;4HJ%ln0!&&1NLeI.ZCXEQmi'Kt!^s6k9S8qPeQh$sY$#3hDLC!^E/D8J8fOC\p</6J3).f\R\m4)jYE#?%Dgo"q*8ko
%*V5s`d[#4GNLIlDkVBIb%`.!-q*8kOZP*=]fGc1UN4#9O4ucbR17;ZC#s.:0E2paI3I]8YSr8-UW+kUX/n67:n5GA;m"Dh).;^%r
%[LRVYR]kOXR^QOub7&^&0)1N,g:35RT;s+3Tf6^)H_\b04_ZiADhMAg2o>A%J:d)H:!n$PVQJnB10K[NT\B`"2[lFe*RGbum"a]^
%k<n#;Pu11C8&HYH`_kk:k`$mH4A=*@#FTM;QOIl*e#eEM1[.@_;)6g26s/-b0!;q/&2e=`)CP!5R`=4J1:(jf'IAl;m#A5N:EeD(
%B73&>iFtN-]mA7r9IBR1[a%+@$G5L%UA',6JbJ&2T@Ypn7[Gji=\%PYgUtguK/0Y;=s;S7Ce&>aK<lW>JPFL7AB/9V8<<#njG:8`
%(f[tFQjV[-XP(B9BJ[V=b^*,!g$F!XVL<ZQM&&Q)WgUSRO[uNJLBshb)b+(EcjctKAC,2[504a3F^lo.mPGl]?SfZ4b^@tRfu0!Y
%p0oKsq^ATH%l2u+(bsqo^Y3R(Oib&dP]TG/G"EUjq^>0km^(DJ?n\B[@PV]2k\.I__:X#h&sX)d,>eKY8>PJ]LeVk7E[?q:dV))o
%MG/efLgFuZ8>PJ]JmIA,j@UVg3"j%[#(oenM0+N)I=F7o7j=-g/+0gMjLc@eA-[^%=Q2lIBcMt7`f.s#kb/rRlmp0Kk&?p[,P>t(
%Vg(03p7hCbR8(]0MM8rnYZ2C1GW8JXRp&#!p2HVHR/Pu_?JL]Y?U1)>j/qZZo<5*h38VN$3<(%(MW:i'OQ=%lDfmS"X&tgOa"?'9
%en*)%0]'hJE-oX[>46IDV=k_F>A^#Kdne`gen#'AO;,]=bm.Ssb]1;G(2DMRg[Wj+b^:CK+W#NC0Q4s8fgk'Gq@ptS9nudS.?:m;
%6^.+R]Tmn%Y$m1I/aUGr99qQoWfDglp="r0+m4:,KQ>Gk4uV,tPZ%*pj(=8NQ9Ib5*:IQs)fj9Z6kTJTRO0d-`?nP?=XG\+P4Q9+
%=C!!hW.WL-`qhR'P>*HJRPPPa=u@FX,6'e:YQODt8,'qO0W`/Qo8m08fb]R%+fE%D/KlE-DV_6%19#.fG;Yi?-+O"eSnI&_K&1dN
%BrRNaD]*Kh&?l&'GFmR\aFh$W*E=p[<<7,.a%=>+$MC-gN,_I4S@N[+"]@,4.TM[(9[2'X>&oc<[ur=LE?1fC$#O);l?K?oAZ4^#
%%Jj/_N,B.r,28MsSSG(ilJp^!7lM8(91^a`Gbat[C5A^/b]>pb60!SB4$LS[7hM!OlSo!X'T``II$CB97OMe_jp.c=G&bb!+jNg2
%4$M!,$W3*rX'J<7ChH7!3.J,9a.u`Ak_-0>*1aYXRBTaHS^!OUYfSJ[Xm&a!lTd2,-IX3IW0qooRme[/8s-*-L=U7g5/C[UU=V%C
%(a;,(!$s7gPE'2[EUUhfGXI=Wg`S^RQND>YW$'e):!6@GlG<&>oSuZ4Un1"e''?2>YhIbb&1J+H&o!_NAh8J_Eo$.CY#`TS-$%49
%_^q":VJ%[a[R:I7],=V,D0M57E(d!1@kqMs.;:dKeRbZeZp<.q26m4)CV.trqRWUpW_:B:jB\X`X#/1t!)OE35J[m"=]hLC\KFVS
%`+@S%<mYg=fg,oc`LNVgC0HAN\/Lta\I:h[s'5h8;kO5t;p.35F8;jDZTL`iC4cIka's<XZImh2$!N(.VfY<f&cmEN<U',W/T*nQ
%Ub`K@cE%-X;3q?-*JtunT1k/d36_glV-2k7CpPVuXEJb,H&,E/;=jY>/g(Gb2H7f)BW.4s=Y)H5N2e"4V.q_'Or%"rMd0kRjV:qc
%m$pILHqI>Im8-:lB\,)l,7CpeSE;7r'd?qDm.fds/H]!jXEK1J#'t3J%aFV#nW=,\'(UL"a_UAtrG%Ec-jeE88aYl["SHc5<C=,?
%$;b#UW3+"U7]b-Sj_t7A9l'DS?'bRmX+FH-W"uEgaU;la/TM`;fp"m*6?UjRksj272/f)^8-VnXD506jSL6VXJTA3P??I])<+k$%
%035(gUG;(8H`*kZ\VtF6=!`FJcAk_?/,'6!O>jc;X*niP\_#+6%646B?fdSRqPNNj!#r..depDSqJ5\e]V#:<?h^m[P#)UMP_U:5
%[=VmD4V/1U$5=+ded<*L#\sSF\u92sX;)GuBu77@1nm"H<+FLh9Fbil%AuA:LTTH+*^3B7laT](jFDnmAO4!>6]FY#;F4P>"Ueiq
%i@UQD%(_r_\Nq#GW_3B7:nEjS7;\Wn8"DZb%3.R<a^lf)</?]l)*<9>fKnm3f#e`5QC2L'>b%Fc4PSK7Jb3VA,i51Wg>oP]@+@-u
%]&'I8+`='P7bY*/jfR;H;@+Qk)B)N5]2sL]GU^8aV*Ik/OEF)3JeJ$X04['iU$3,OE1mS\9V-rk,`_W+O*?>G"<i2c#1#Q_(mP(E
%2Uf#9*[*4'kd\nTRNO](WJAOt7BttuEF;*H+YI19*-EqMRZpK./j[M-"!k$YW,5irOT\-#5[r(q?kngG_h/UJ;B"3o_$RES?`5"s
%3)L7_CsM$s&=RQpUhiIi;S"_)O%bY;ndV8Fq=9Ni2&f+pGQK.ro$&'k*b%%Z49SO)JKDF_=S]F115$sP`opih8gk7&&h_/^##M,2
%ka!/g.V>?pMX)/@g25#-!";MNPaZHH)K%8`JbA;q</Lo-[+[&`!L;tZ$("hslpT617VG@R2Ya2%Au.W\<>(aif.kog;QH'gedEp)
%PM7r*5@D6KN-h*c,d^cZ5QX!Ma!4i(nCCM1$sr5b*9%Raq*7U;Kk#m`$%NToOIEha5_oL5JtN7_duk@K-#1C-,K(k+lD>GN&dj;j
%KM,m[i*h;Gj98D;=tO5f%m\Cd6pMI%^k>@KdAj-V[^/%G\:Xci_o,A5QYKLl?n)etPGp/l=g>1P9`nhAe4s($1oF`DYa]0$Zh8E;
%e1cfcQpB:X1"8NE7R^fA8D&MK/gVR&l-V=!2N7!m%RA4a`-m`N>@^WHZg)7LKt'faRscV%7L70SNSG)i3"`EK:IN+a8YDK"*icW1
%E?;FL%oUV2&$^f66`_MQM:!1\TcE*T`PXJmp/lD@7OSem\.f0S>`Yb1e8U@:(=478O6>UL'NemDC:!2>Gf9q_TPKp^Bd"B>U(J<>
%CB5??RU`U*)X&(dB"Aa(@X.u[\&bAr=DTRm(o=2c22^-#>LNXN)Hu[nc3#EuKG]\ANFJjOn[(<8L='9Pq#IeK>%>Rb"Mc]#80r$R
%XJb"l,;l0<PE.l7<\.3[op1!\Z.cTNNCc\Q`q3@OC=b/=("]2QQ@/V9g3&<Ib/^^i@Q//kc9=]:h:ZG5C8Q]#N6(@lO3t@CND'*6
%_g6_(0tO^;51N?YU-rUcI#P44A5YVe/.fR1kt5n>1hOO<,L#'LEAQ-q%6!>WSe+Od.)tmEg)@;+dKhWg6ek?e05/QI*$UL`XN@f?
%L0'>fi8io8:E:L`dCI5j2D>5YfZ'cMYaG!g:C`E,"9N=m-:@tM&X[*,3A.0ebT83V_lZ68T,:U4l+$Eu]?u@LTc7\5*k?9i_8ZIP
%1t^f_jp$AUD5X$rHsP(B4^p+eUaB;nYb$SPN87lg7uZ0$a)7h%0A45l#)('W94dG7<=bn5-6;,i$<j5OHX>Rc_'5."Rmg,rbMtOg
%k+RF`rFc5%$IRqCnA[J[p1\:M77ZX:G#(^1LDLLS;_L<;/WuEYjIlo4\oZbn/0695T%qGr4uR$CrV]C9&fGsCLV[QC(<L"^`eAX6
%oB\t/U0$$(0*Lk2a5D1dFeK:EFIiM+f6!@W"*ejk30BBu:m'F=6>AA.#ok!!_dSD'd1&B6PGo^^AW\O`:+iJMlEu_>Q66YVlU!Dm
%QotfmYA(^Xe".Qq$P=gbNtO$>e3:X;:eTa*_40.7W+OZ#JiAXR3gb4'hCQ&Z%/'j8^*M#)$/UWK;n3V"Ba'A.aDNqEnhk(/6^u\.
%bY8'DhM=lQj]":S20<YTPMhF4W&<k-e-?$0pU.Tt<M!_(<,0,8Z^U/WMj9h]>0Me=;&I>ge[Q[&43J(JfPPXXV]q!:DB?Gf=M(SC
%gs[Z7==)F"V-`_lPmh)gCmE4BK=@.XKX>qP`2M.9QGiqpb1?_aPOfM<kJ;H_?66ba;NU._Z1Z&"pi96,]@')Fn,=$4.th>iY"3-!
%>P2*%nrfmblY$$nR8r]4@9s"+m)H*88cb!QVrabK)i4_B?,OV)2"Ri9:*_,9&>NI6H@I849i`[D8(0^>Y\L%N;'M;Bcuk7?b'C4_
%L6i*^pj,5\41f?o0f"r9jt?gDO5`j!SsLeF[p\m/'p.^*g#Ir(OPD+'UKBD'eL20U$jaI:-KRp':W(CD2_!<qed8;+8R?e5AJTR=
%C"B6Ffr%sbRR+n4X&RNtWf48[[6+9PUZ=2U4tNL1Z]`*i,;p2s))*U%`kr*O5:0`)bT''Nc3k%RKQY"bQoSW>Jf[Y`:k9Gm-_P&@
%kRcpb5]k'u1+DD&H5^*2Yt6NQ_o,6[bpUs,1](-B[pG"6kk7Y#2G4-X^oEg*Ab#!2d*d&p9PTR+f(/Bf%@:A_(3(9J]'?(N-hZIp
%>mJuY5p6mnOUT&B>7$5;BVco1'ZeiR&aNt3NN\&8%sV]EH])d)8NDu02V0KS?4sU':(R#eI+5.gP'V,AXQG\,3#SGDm#IL``)jU?
%*_Sm!!`nX+[4E@@ik1q5h'/&'*`Z"Z94KkD4<*,0Vk%Sb4Nf65,;T/'@s$lZYNoH9V]F@K;iK*-XIABW(69!j[,^["ZcJr4#O?)K
%H-A`^\M\$;Zk[3FG\TUj]m!h#c5Bn/QKkRKMPADmW\nG)3n\%RrKeJ'AHpC>K**AscD6Z+2Q>Fhk;@0Y;3(1Z60Yn:WlK%H<E),V
%'37t`N'Ye&=[aK';[@'!.E:uMM$PXfW>nr9)d^96As7%Kf%07+[o/*4fV5.PZ4oaTm[l*)1A[_4U]qb>=O1C@MoB-YN_q;1/_#eB
%bY%qmf[uW[Umq\UBm=@1VRK<nXkb^GU_NgthG$F1@2/%`(498YGI(8W2St=[n.l;^!N9*_2PaX5@RG$n8i_f^%3olc%o3-ms/l<F
%@\Tm"G4;sgVmWSWX7T'2T=$<uE/FVISQMpT*?V;EK:K^All5;XW$RJClRb+u%Ctq-6[cD@VoSB#0T"sK/eAtc33$GCouWeBN>@U,
%5OUHe9Ysf76c]&YnV%4'rp2fWT=t9c'.6SJmJDs*rqF7Fb=(=M]D%>G5.Pb-m_MPZ]Q3o5m%(1Is%C.JE:VG0]D);B^rb("l@YF1
%,o1uW18WtR%=Q>EfBYCd?40ITf$_GV49TUo-V=PDbb![HiPTk3NlR`=imbfd\*i+`G4X#(44c,jH#SBe3q_PI>SWU/55E-EnGEY!
%QTogbQMK-7:37nf?`&IDJe*.b\5?sKV47uV"KYq6-_NW8(PJ^d=G#kB&PQaQ<ANSsE=J)o=2l5t%KRe,Fj%lM4M2J`V]V>b-Y0[`
%5()tD-_<DJ2LYJJSZ@NIrdJtXq!eDJGN$^;UQ=kL\U!N)hNL`?^OP?pNXi5I\T@M]Pm9fDPs69o^NXe7cosM#J)ftS#bd%?J`iVO
%kPVqf54O+'M1('e~>
%AI9_PrivateDataEnd
