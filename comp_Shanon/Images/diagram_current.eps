%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: diagram_current.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Shanon McIntyre
%%CreationDate: 5/4/2009
%%BoundingBox: 0 0 359 223
%%HiResBoundingBox: 0 0 358.9024 222.4991
%%CropBox: 0 0 358.9024 222.4991
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 80 8%%BeginData: 19785 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45777177717771777177717771777171717771774D77717171777171
%71777177717771714D77717171777171717771774D777171717771717177
%7177717771714D77717171777177717771774D7771717177717171777177
%717771714D77717771777177717771777177FD17FF4D5352524B5251524C
%5252535276525352595276527752535277525352765253527D5276527D52
%535276525352595276527752535177525352765253527752765259525352
%76525352595276527752534B7752535276525352775276525952524B5352
%524B5251534DFD17FF7752A0999F759F769F75A8AFAFA1AFA9AFA9CAA8AF
%A9AFA9C9A8AFA9AFA7CAA9AFA9AFA7AFA9AFA9AFA1AFA9AFA9CFA7AFA9AF
%A9C9A8AFA9AFA8CAA9AFA9AFA7AFA9AFA9AFA1AFA9AFA9FFA7AFA9AFA9C9
%A8AFA9AFA8CAA9AFA9AFA8CA847D999F76A0999F999F5277CBFD16FF4C76
%74997499749F98757DAFA9A984AFA9AF84AFA9AF84AF84AF84AFA9AF84AF
%A9AF84AFA9AF84AFA9A984AFA9AF84AF85AF84AF84AF84AFA9AF84AFA9AF
%84AFA9AF84AF85A984AFA9AF84AF85AF84AF84AF84AFA9AF84AFA9AF84AF
%A9A97699759F74997499745271FD17FF77529F999F999F999F75A8AFAFA9
%AFAFAFA9AFA9AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFA9AFA9AFAFAFA9AFAF
%AFA9AFA9AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFA9AFA9AFAFAFA9AFAFAFA9
%AFA9AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFA9AFA97D999F999F999F999F52
%77FD17FF4D76989F7599749F99757DAFA9AF85AFA9AF84AFA9AF85AFA8AF
%85AFA9AF84AFA9AF85AFA9AF85AFA9AF85AFA9AF84AFA9AF85AFA8AF85AF
%A9AF84AFA9AF85AFA9AF85AFA9AF84AFA9AF84AFA9AF85AFA8AF85AFA9AF
%84AFA9AF85AFA9AF7699759F749F7599745271FD17FF7752A0999F999F76
%9F75A8A9AFA7AFA9AFA9A8A8AFA9AFA9CAA9AFA9AFA8A8A9AFA9AFA1AFA9
%AFA9AFA7AFA9AFA9A8A7AFA9AFA9CAA8AFA9AFA8A8A9AFA9AFA1AFA9AFA9
%AFA1AFA9AFA9A8A1AFA9AFA9CAA8AFA9AFA8A8A9AFA9AFA8CAA97D759F76
%A0999F999F5277FD17FF4C52759F759F757675757DAF84A184A984AFA1A7
%84AF84A9A0A984A984A7A1A984AF84A184AF84A984A184A984AFA1A184AF
%84A9A0A884A984A8A1A984AF84A184AF84A984A1A8A984AFA8A184AF84A9
%A0A884A984A8A1A984AF84A1A1A97699757C7599759F75534DFD17FF7776
%9F999F999F999F75A8A9AFA9AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFA9AFA9
%AFAFAFA9AFAFAFA9AFA9AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFA9AFA9AFAF
%AFA9AFAFAFA9AFA9AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFA9AFA9AFAFAFA9
%AFA97D999F999F999F999F5277FD17FF4C769999749F759F74757DAF84AF
%A9AF85AFA9AF85AFA9AF84AFA9AF85AFA8AF85AFA9AF84AFA9AF84AFA9AF
%85AFA9AF85AFA9AF84AFA9AF85AFA8AF85AFA9AF84AFA9AF85AFA9AF85AF
%A9AF85AFA9AF84AFA9AF85AFA8AF85AFA9AF85AF7699749F7599749F7452
%4DFD17FF77529F999F999F999F75A8A9AFA9AFAFAFA9AFA9AFA9AFA9AFA9
%AFAFAFA9AFA9AFA9AFA9AFA9AFAFAFA9AFAFAFA9AFA9AFA9AFA9AFA9AFAF
%AFA9AFA9AFA9AFA9AFA9AFAFAFA9AFAFAFA9AFA9AFA9AFA9AFA9AFAFAFA9
%AFA9AFA9AFA9AFA87D999F759F999F999F5277CBFD16FF4C767499749974
%9F74757DAFA9A984AFA9AF84AF85AF84AF84AF84AF85AF84AFA9AF84AFA9
%AF84AFA9A984AFA9AF84AF85AF84AF84AF84AFA9AF84AFA9AF84AFA9AF84
%AF85A984AFA9AF84AF85AF84AFA8AF84AFA9AF84AFA9AF84AFA9A9529974
%9974997499745271FD17FF77527C999F999F52A075A8AFA8A0AFA9AFA9CA
%A1AFA9AFA9C3A8AFA9AFA1CAA9AFA9AFA0A8A9AFA9AFA0AFA9AFA9CAA1AF
%A9AFA9C3A8AFA9AFA7C9A9AFA9AFA0A8A9AFA9AFA0AFA9AFA9CAA1AFA9AF
%A9C3A8AFA9AFA7C9A9AFA9AFA1C9A87D999F52A0999F99A05377FD17FF4D
%76749F759974A075757DAFA8A885AFA9AFA8AFA9AF84AFA8AF84AFA9A9A8
%AFA9AF85A8A8AF84AFA8A884AFA9AFA8A9A9AF84AFA8AF84AFA9A9A8AFA9
%AF85A9A8AF84AFA9A984AFA9AFA8A9A9AF84AFA8AF84AFA9A9A8AFA9AF84
%A9A8A9769F759F759F7599745271FD17FF77529F999F999F759F75A8A9AF
%A9AFA9AFA9AFA9AFAFAFA9AFA9AFA9AFA9AFA9AFAFAFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFAFAFA9AFA9AFA9AFA9AFA9AFAFAFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFAFAFA9AFA9AFA9AFA9AFA9AFAFAFA9AFA97C759F999F999F999F
%5277FD17FF4C7698997499749F74757DAF84AFA9AF84AFA9A984AFA9AF84
%AFA9AF84AF84AF84AFA9A984AFA9AF84AFA9AF84AFA9A984AFA9AF84AFA9
%AF84AF84AF84AFA9A984AFA9AF84AFA9AF84AFA9A984AFA9AF84AFA9AF84
%AF84AF84AFA9A984AF7699749F7599749974524DFD17FF77529F999F999F
%759F75A8A9AFA9AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFA9AFA9AFAFAFA9AF
%AFAFA9AFA9AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAF
%A9AFA9AFA9AFAFAFA8AFAFAFA9AFA9AFA9AFA9AFA9AFAFAFA9AFA97D999F
%999F999F999F5277FD17FF4C53529F759F7576759F7DAFA8C3A8AF84AFA1
%A184AFA8A9A0A9A8AF84A1A1AF84AFA8A1A8AFA8AFA8C3A8AF84AFA1A184
%AFA8AFA0A8A8AF84A8A0AF84AFA8A1A7AFA8AFA8C3A8AF84AFA7A184AFA8
%AFA0A8A8AF84A8A0AF84AFA8A1A1A97699757D759F759F75534DFD17FF77
%529F999F999F759F75A8AFAFA8AFA9AFA9AFA8AFA9AFA9A9A9AFA9AFA8AF
%A9AFA9AFA8AFA9AFA9AFA8AFA9AFA9AFA8AFA9AFA9AFA9AFA9AFA8AFA9AF
%A9AFA8AFA9AFA9AFA8AFA9AFA9AFA8AFA9AFA9AFA9AFA9AFA8AFA9AFA9AF
%A8AFA87D999F759F999F999F5277CBFD16FF4C7674997499749F74757DAF
%A9A984AFA9AF84AFA9AF84AF84AF84AFA9AF84AFA9AF84AFA9AF84AFA9A9
%84AFA9AF84AFA9AF84AF84AF84AFA9AF84AFA9AF84AFA9AF84AFA9A984AF
%A9AF84AFA9AF84AF84AF84AFA9AF84AFA9AF84AFA9A97699749974997499
%745271FD17FF77529F999F999F999F75A8AFAFA9AFAFAFA9AFA9AFA9AFAF
%AFA9AFAFAFA9AFAFAFA9AFA9AFA9AFAFAFA9AFAFAFA9AFA9AFA9AFAFAFA9
%AFAFAFA9AFAFAFA9AFA9AFA9AFAFAFA9AFAFAFA9AFA9AFA9AFAFAFA9AFAF
%AFA9AFAFAFA9AFA9AFA97D999F999F999F999F5277FD17FF4D76989F7599
%749F99757DAFA9AF85AFA9AF84AFA9AF85AFA8AF85AFA9AF84AFA9AF85AF
%A9AF85AFA9AF85AFA9AF84AFA9AF85AFA8AF85AFA9AF84AFA9AF85AFA9AF
%85AFA9AF84AFA9AF84AFA9AF85AFA8AF85AFA9AF84AFA9AF85AFA9AF7699
%759F749F7599745271FD17FF77527C999F999F76A075A8A9AFA1AFA9AFA9
%A8A1AFA9AFA9CAA8AFA9AFA8A8A9AFA9AFA1AFA9AFA9AFA1AFA9AFA9A9A1
%AFA9AFA9CAA8AFA9AFA8A8A9AFA9AFA1AFA9AFA9AFA1AFA9AFA9A9A1AFA9
%AFA9CAA8AFA9AFA8A8A9AFA9AFA8CAA97D759F76A0999F999F5277FD17FF
%4C52759F759F757675757DAF84A1A8A984AFA1A784AF84A9A0A884A984A8
%A1A984AF84A1A8AF84A984A1A8A984AFA8A184AF84A9A0A884A984A8A1A9
%84AF84A1A8AF84A984A1A8A984AFA8A184AF84A9A1A884A984A8A1A984AF
%84A8A1A97699747C7599759F75534DFD17FF77769F999F999F999F75A8A9
%AFA9AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFA9AFA9AFAFAFA9AFAFAFA9AFA9
%AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFA9AFA9AFAFAFA9AFAFAFA9AFA9AFA9
%AFAFAFA9AFAFAFA9AFA9AFA9AFA9AFA9AFAFAFA9AFA97D999F999F999F99
%9F5277FD17FF4C769999749F759F74757DAF84AFA9AF85AFA9AF85AFA9AF
%84AFA9AF85AFA8AF85AFA9AF84AFA9AF84AFA9AF85AFA9AF85AFA9AF84AF
%A9AF85AFA8AF85AFA9AF84AFA9AF85AFA9AF85AFA9AF85AFA9AF84AFA9AF
%85AFA8AF85AFA9AF85AF7699749F7599749F74524DFD17FF77519F999F99
%9F999F75A8A9AFA9AFAFAFA9AFA9AFA9AFA9AFA9AFAFAFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFAFAFA9AFA9AFA9AFA9AFA9AFAFAFA9AFA9AFA9AFA9AFA9
%AFAFAFA9AFA9AFA9AFA9AFA9AFA9AFA9AFAFAFA9AFA9AFA9AFA9AFA97D99
%9F999F999F999F5277CBFD16FF4C52759F7599747C75757DAFA8A784AFA9
%AFA1A885AF84AFA1A984AF85A8A1AFA9AF84A8A8AF84AFA8A784AFA9AFA8
%A885AF84AFA1A984AF85A8A1AFA9AF84A7A8AF84AFA8A184AFA9AFA8A8A9
%AF84AFA1A884AF85A8A1AFA9AF84A8A8A976997476759F759974534DFD17
%FF7752A0999F999F76A075A8AFAFA1AFAFAFA9CAA7AFA8A884A7A8AFA9AF
%A1CAA9AFA9AFA1A9A9AFA9AFA1AFA9AFA9CAA1AFA9AFA9C9A8AFA9AFA8CA
%A9AFA9AFA1A8A9AFA9AFA1AFA9AFA9FFA1AFA9AFAFC9A8AFA9AFA8CAA8A8
%84AFA7CAA87D999F76A0999F99A05277FD17FF4D76989F7599749F99757D
%845984847D7DAF85847D8453847D7D59AFA9AF84AFA9AF85AFA9AF85AFA9
%AF85AFA9AF84AFA9AF85AFA8AF85AFA9AF84AFA9AF85AFA9AF85AFA9AF85
%AFA9AF84AFA97E53A9847D7EAFA97E598453847E7D7DAF7699759F749F75
%99745271FD17FF77529F999F999F759F75A8527E597D7E7D84AF52527D7E
%597D7D7D7EAFA9AFA9AFAFAFA9AFAFAFA9AFA9AFA9AFAFAFA9AFAFAFA9AF
%A9AFA9AFA9AFA9AFAFAFA9AFAFAFA9AFA9AFA9AFAFAFA9AF527E527D847D
%A9AF5252FD067D847D759F999F999F999F5277FD17FF4C7698997499749F
%74757D59847D52845284857D5253597D527E538484AF84AF84AFA9A984AF
%A9AF84AFA9AF84AFA9A984AFA9AF84AFA9AF84AF84AF84AFA9A984AFA9AF
%84AFA9AF84AFA9AF84598452528452A9847D5252537D597D52847699749F
%7599749974524DFD17FF77529F999F999F759F75A884AF84AF5984AFAF7D
%8484A9847D5284A9AFA9AFA9AFAFAFA8AFAFAFA9AFA8AFA9AFAFAFA8AFAF
%AFA9AFA9AFA9AFA9AFA9AFAFAFA8AFAFAFA9AFA8AFA9AFAFAFA8AF84AF84
%A859A8A9AF7D7D84A9847D52A8A97D999F999F999F999F5277FD17FF4C53
%769F759F7577759F7DAFA8C3A9AFA9AFA1A185AFA9AF76A8A9AF84A1A1AF
%84AFA8A0A8AFA8AFA8C3A8AF84AFA1A184AFA8AF9AA8A8AF84A8A0AF84AF
%A8A1A7AFA8AFA8C3A8AF84AFA7A184AFA9AFA0A8A9AF84A8A1AFA9AF7EA1
%A1A97699757D769F759F75534DFD17FF77529F999F999F999F75A8AFAFA8
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA8AFA9AFA9AFA8AFA9
%AFA9AFA8AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA8AFA9AFA9
%AFA8AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA87D999F759F999F999F52
%77CBFD16FF4C7674997499749F74757DAFA9A984AFA9AF84AFA9AF84AF84
%AF84AFA9AF84AFA9AF84AFA9AF84AFA9A984AFA9AF84AFA9AF84AF84AF84
%AFA9AF84AFA9AF84AFA9AF84AFA9A984AFA9AF84AFA9AF84AF84AF84AFA9
%AF84AFA9AF84AFA9A97699749974997499745271FD17FF77529F999F999F
%999F75A8AFAFA9AFAFAFA9AFA9AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFA9AF
%A9AFAFAFA9AFAFAFA9AFA9AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFA9AFA9AF
%AFAFA9AFAFAFA9AFA9AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFA9AFA97D999F
%999F999F999F5277CBFD16FF4D76749F7599749F75757DAFA9A985AFA9AF
%A8AFA9AF85AFA8AF85AFA9A9A8AFA9AF85AFA9AF85AFA9A985AFA9AFA8AF
%A9AF85AFA8AF85AFA9AFA8AFA9AF85A9A8AF85AFA9A884AFA9AFA8AFA9AF
%85AFA8AF85AFA9AFA8AFA9AF85AFA8AF7699999F759F7599745271FD17FF
%77527C999F999F52A075A8A9A8A0AFA9AFA9A7A1AFA9AFA9C3A8AFA9AFA1
%A7A9AFA9AFA0A8A9AFA9AFA0AFA9AFA9A8A1AFA9AFA9C3A8AFA9AFA7C3A9
%AFA9AFA0A8A9AFA9AFA0AFA9AFA9A8A0AFA9AFA9C3A8AFA9AFA7C3A9AFA9
%AFA1C9A87D759F527C999F999F5377FD17FF4C767499749F759F74757DAF
%84A9A9AF84AFA8A984AFA9AF84AFA9AF84AFA8AF84AFA9A984AFA9AF84AF
%A9AF84AFA8A984AFA9AF84AFA9AF84AFA8AF84AFA9A984AFA9AF84AFA8AF
%84AFA8A984AFA9AF84AFA9AF84AFA8AF84AFA9A984AF7699749F7599749F
%75524DFD17FF77529F999F999F999F75A8A9AFA9AFA9AFAFAFA9AFAFAFA9
%AFA9AFA9AFA9AFA9AFAFAFA9AFAFAFA9AFA9AFA9AFAFAFA9AFAFAFA9AFA9
%AFA9AFA9AFA9AFAFAFA9AFAFAFA9AFA9AFA9AFAFAFA9AFAFAFA9AFA9AFA9
%AFA9AFA9AFAFAFA9AFA97D999F999F999F999F5277FD17FF4C769999749F
%759F74757DAF84AFA9AF85AFA9AF85AFA9AF84AFA9AF85AFA8AF85AFA9AF
%84AFA9AF84AFA9AF85AFA9AF85AFA9AF84AFA9AF85AFA8AF85AFA9AF84AF
%A9AF85AFA9AF85AFA9AF85AFA9AF84AFA9AF85AFA8AF85AFA9AF85AF7699
%749F7599749F74524DFD17FF77519F999F999F999F75A8A9AFA9AFAFAFA9
%AFA9AFA9AFA9AFA9AFAFAFA9AFA9AFA9AFA9AFA9AFA9AFA9AFAFAFA9AFA9
%AFA9AFA9AFA9AFAFAFA9AFA9AFA9AFA9AFA9AFAFAFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFAFAFA9AFA9AFA9AFA9AFA97D999F999F999F999F5277CBFD16
%FF4C52759F7599747C75757DAFA8A184AFA9AFA1A785AF84AFA1A984AF85
%A7A1AFA9AF84A7A8AF84AFA8A184AFA9AFA1A785AF84AFA1A884AF85A8A1
%AFA9AF84A1A8AF84AFA8A184AFA9AFA8A7A9AF84AFA1A884AF85A8A1AFA9
%AF84A8A1A976997476759F759975534DFD17FF7752A0999F999F76A075A8
%AFAFA1AFA9AFA9CAA8AFA9AFA9CAA8AFA9AFA7CAA9AFA9AFA1AFA9AFA9AF
%A1AFA9AFA9A8A7AFA9AFA9CAA8AFA9AFA8CAA9AFA9AFA1A9A9AFA9AFA1AF
%A9AFA9AFA7AFA9AFA9A8A8AFA9AFA8CAA9AFA9AFA8A8A87D999F76A0999F
%99A05277FD17FF4D76989F7599749F99757DAFA9AF85AFA9AF84AFA9AF85
%AFA8AF85AFA9AF84AFA9AF85AFA9AF85AFA9AF85AFA9AF84AFA9AF85AFA8
%AF85AFA9AF84AFA9AF85AFA9AF85AFA9AF85AFA9AF84AFA9AF85AFA8AF85
%AFA9AF84AFA9AF84AFA9AF7699759F749F7599745271FD17FF77529F999F
%999F759F75A8A9AFA9AFA9AFAFAFA9AFAFAFA9AFA9AFA9AFA9AFA9AFAFAF
%A9AFAFAFA9AFA9AFA9AFAFAFA9AFAFAFA9AFA9AFA9AFA9AFA9AFAFAFA9AF
%AFAFA9AFA9AFA9AFAFAFA9AFAFAFA9AFA9AFA9AFA9AFA9AFAFAFA9AFA97C
%759F999F999F999F5277FD17FF4C7698997499749974757DAF84AF85AF84
%AFA9A984AFA9AF84AFA9AF84AF84AF84AF85A984AFA9AF84AF85AF84AF85
%A984AFA9AF84AFA9AF84AF84AF84AF85A984AFA9AF84AFA9AF84AFA9A984
%AFA9AF84AFA9AF84AF84AF84AF85A984AF7699749F7499749974524DFD17
%FF77527C99A0999F52A075A8A9AFA1AFA9AFA9CAA1AFA9AFA9C9A8AFA9AF
%A1A8A9AFA9AFA0AFA9AFA9AFA1AFA9AFA9A8A1AFA9AFA9C3A8AFA9AFA7C9
%A9AFA9AFA1CAA9AFA9AFA1AFA9AFA9A8A1AFA9AFA9C3A8AFA9AFA8C9A9AF
%A9AFA1CAA87D999F76A099A099A05378FD17FF4C767599759F997C75997D
%AFA8A8A9AF84AFA8A884AFA9AFA1AFA9AF84A8A8AF84AFA9A8A8AFA9AFA8
%A8A9AF84AFA8A884AFA9AFA1AFA9AF84A9A8AF84AFA9A8A8AFA9AFA8A8A9
%AF84AFA8A884AFA9AFA1AFA9AF84AFA8AF84AFA9A8A8AF769974A0759975
%9F75524DFD17FF77519F999F999F999F75A8A9AFA9AFAFAFA9AFA9AFA9AF
%A9AFA9AFAFAFA9AFA9AFA9AFA9AFA9AFA9AFA9AFAFAFA9AFA9AFA9AFA9AF
%A9AFAFAFA9AFA9AFA9AFA9AFA9AFAFAFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%AFAFA9AFA9AFA9AFA9AFA97D999F999F999F999F5277CBFD16FF4C76749F
%7499749F74757DAFA9A984AFA9AF84AFA9AF84AF84AF84AFA9AF84AFA9AF
%84AFA9AF84AFA9A984AFA9AF84AFA9AF84AF84AF84AFA9AF84AFA9AF84AF
%A9AF84AFA9A984AFA9AF84AFA9AF84AF84AF84AFA9AF84AFA9AF84AFA9A9
%7699749974997499745271FD17FF77529F999F999F999F75A8AFAFA9AFAF
%AFA9AFA9AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFA9AFA9AFAFAFA9AFAFAFA9
%AFA9AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFA9AFA9AFAFAFA9AFAFAFA9AFA9
%AFA9AFAFAFA9AFAFAFA9AFAFAFA9AFA9AFA97D999F999F999F999F5277CB
%FD16FF4D52759F7599747C75757DAFA8A884AFA9AFA8A8A9AF84AFA8A984
%AFA9A8A8AFA9AF84A8A8AF84AFA8A885AFA9AFA8A8A9AF84AFA7A984AFA9
%A8A1AFA9AF84A8A8AF84AFA8A884AFA9AFA8A8A9AF84AFA7A984AFA9A8A1
%AFA9AF84A8A8A9769F9976759F7599755271FD17FF77527C999F999F52A0
%75A8A9AFA1AFA9AFA9A8A1AFA9AFA9C3A8AFA9AFA1A8A9AFA9AFA0AFA9AF
%A9AFA1AFA9AFA9A8A1AFA9AFA9C3A8AFA9AFA8C9A9AFA9AFA0A8A9AFA9AF
%A1AFA9AFA9A8A1AFA9AFA9C9A8AFA9AFA8C9A9AFA9AFA1CAA87D759F767C
%999F999F5277FD17FF4C7698997499749F74757DAF84AF85AF84AF85A984
%AFA9AF84AFA9AF84AF84AF84AF85A984AFA9AF84AF85AF84AF85A984AF85
%AF84AF85AF84AF84AF84AF85AF84AF84A984AFA9AF84AF84A984AFA9AF84
%AFA9AF84AF84AF84AF85AF84AF7699749F7499749974524DFD17FF77529F
%999F999F999F75A8A9AFA9AFA9AFAFAFA9AFAFAFA9AFA9AFA9AFA9AFA9AF
%AFAFA9AFAFAFA9AFA9AFA9AFAFAFA9AF84FD047DA8A8AFAFAFA9AFAFAF84
%AF848484AF84AFA9AF7D84A9AFA8AFA9A9A9AFA9AFA9A87DA9A9AFA8AFA9
%7D999F999F999F999F5277FD17FF4C769999749F759F74757DAF84AFA9AF
%85AFA9AF85AFA9AF84AFA9AF85AFA8AF85AFA9AF84AFA9AF84AFA9AF85AF
%847D517574997599757C7DA8A9AF85AF7E525984597D525359AF857D84A9
%52597D7D527DA9A952FD057D525984AF7699749F7599749F74524DFD17FF
%7752A0999F999F769F75A8A9AFA8AFA9AFA9A8A8AFA9AFA9A8A8AFA9AFA8
%A8A9AFA9AFA8AFA9AFA9AFA7AFA9AF7D7C759F999F999F759F99995284A9
%AFA9A8527D7D7D597DA17DA9A953AFA87D845953A852AFA97D527D7D7E59
%AF7DA8A97D999F75A0999F999F5277CBFD16FF4C52759F7599757C75757D
%AFA8A184AF84A9A1A784A984AFA0A884AF84A1A1AF84A984A1A8A984AFA8
%A1847E5275757B7599759F7B9F759F999F517C7DAF8476527D537D525252
%AF7D7DA8A15284527D4B7D84A95252527D7D7D2E7CA1A9769F7576759F75
%9975534DFD17FF77529F999F999F999F75A8AFAFA9AFAFAFA9AFA9AFA9AF
%AFAFA9AFAFAFA9AFAFAFA9AFA9AFA9AFAFAF7D7D759F999F999F999F999F
%999F999F999F997C76A9A8AFA9AFA97D7EAFAFAFA9AFA9AFA9AFAFA9A9AF
%AFAF84AFA9AF7D84A9AFA97D999F999F999F999F5277CBFD16FF4D76749F
%7599749F99757DAFA9AF85AFA9AF84AFA9AF85AFA8AF85AFA9AF84AFA9AF
%85AFA9AF84845275749F7599759F7599749F7599749F7599759F9999517D
%84A985AFA9AF85AFA9AF84AFA9AF85AFA9AF85AFA9AF84AFA9AF85AFA9AF
%7699759F759F7599745271FD17FF77529F999F999F759F75A8A9AFA9AFA9
%AFAFAFA9AFAFAFA9AFA9AFA9AFA9AFA9AFA9AF84A87D7C759F999F999F99
%9F759F999F999F999F999F999F999F999F757C767D7EAFA9AFA9AFA9AFA9
%AFAFAFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA87C759F999F999F999F5277FD
%17FF4C76749974997499747559A984AF85AF84AFA9AF84AF85AF84AF85AF
%84AFA8A984847C7C75997599749F74997499759974997499759F7499749F
%75997499749974997475517D7D7E7EA984A984AF85AFA8AF85AF84AF84A9
%84A87D7D7C7D5199749F7599749974524DFD17FF77527C99A0999F57A075
%7C767D83A884A984A8A1AFA8AFA8C3A8A984A88383767C759F7B9F999F99
%A07B9F99A099A07BA0999F997C9F9F99A07B7C99A0999F7BA0999F999F7B
%9F757C767C58A17D837D837D847DA17C7D767C76A07BA0997C999F58A099
%A0999F5878FD17FF4C767599759F757B759F7599749F7576517C757C767C
%767C757C7576759F7599749F759F759F7599759F7599759F759F749F7599
%759F7599759F7599759F759F759F7599749F7599749F759F749975997599
%7599749F7599749F999F759F7599747C7599759F75524DFD17FF77519F99
%9F999F999F757C999F999F999F999F9999759F999F999F999F999F999F99
%9F999F999F999F999F999F999F999F999F999F999F999F999F999F999F99
%9F999F999F999F999F999F999F999F999F999F999F999F999F999F999F75
%7C999F999F999F999F5277CBFD16FF4D7674997499749F75757599759974
%997499749F7499749975997499749975997499749F759974997599749974
%99749F7499749975997499749975997499749F7599749974997499749974
%9F7499749975997499749975997499749F75995199749974997499745271
%FD17FF77529F999F999F999F75A0999F999F999F999F999F999F999F999F
%999F99A0999F999F999F999F999F999F999F999F999F999F999F999F999F
%99A0999F999F999F999F999F999F999F999F999F999F999F999F999F99A0
%999F999F999F757C999F999F999F999F5277FD17FF70587B9F759F757C75
%75759F757B759F7599757B999F759F7B9F759F757B759F759F757C759F75
%9F757B759F7599757B759F759F7B9F759F757B759F759F757B759F759F75
%7B759F7599757B759F759F7B9F759F757B759F759F757B7599759F757C75
%9F759F755971FD17FF77529F999F999F7B9F757C999F7B9F999F999F759F
%999F75A0999F999F7B9F999F999F7B9F999F999F7B9F999F999F759F999F
%75A0999F999F759F999F999F759F999F999F7B9F999F999F759F999F75A0
%999F999F759F999F999F759F997C999F7B9F999F999F5277FD17FF4C7698
%997499749974757599749F74997499759974997499759F74997499759974
%99749974997499749F74997499759974997499759F7499749F7599749974
%9974997499749F75997499759974997499759F7499749F75997499749974
%997599749F7599749974524DFD17FF77529F999F999F999F757C999F999F
%999F999F999F999F99A0999F999F999F999F999F999F999F999F999F999F
%999F999F999F99A0999F999F999F999F999F999F999F999F999F999F999F
%999F999F99A0999F999F999F999F999F999F997C999F999F999F999F5277
%FD17FF4C769999749F7599747B7599759F7599749F759F749F7599759F75
%99749F7599749F759F759F7599759F7599749F759F749F7599759F759974
%9F7599749F7599759F7599749F7599749F7599749F7599759F7599749F75
%99749F759F749F7599749F7599749F74524DFD17FF77529F999F999F7B9F
%757C999F759F999F999F7B9F999F999F759F999F75A0999F999F7B9F999F
%999F759F999F999F7B9F999F999F759F999F75A0999F999F7B9F999F999F
%759F999F999F7B9F999F999F759F999F75A0999F999F7B9F757C999F759F
%999F999F5277CBFD16FF4C52579F759975587575759F757B759F7599757B
%7599759F7B9F759F757B759F7599757B7599759F757B759F7599757B7599
%759F7B9F759F757B759F7599757B7599759F757B759F7599757B7599759F
%7B9F759F757B759F7599757B7599519F7558759F759975584DFD17FF7752
%9F999F999F999F75A0999F999F999F999F999F999F999F999F999F999F99
%9F999F999F999F999F999F999F999F999F999F999F999F999F999F999F99
%9F999F999F999F999F999F999F999F999F999F999F999F999F999F999F99
%9F997C999F999F999F999F5277CBFD16FF4D5251765175517651514B7651
%765176517551765175517651765176517651765175517651755176517651
%765175517651755176517651765175517651755176517551765176517651
%7551765175517651765176517651765175517651754B7651765176517551
%5271FD17FF714D774C774C774C774C774C774C774C774C774C774C774C77
%4C774C774C774C774C774C774C774C774C774C774C774C774C774C774C77
%4C774C774C774C774C774C774C774C774C774C774C774C774C774C774C77
%4C774C774C774C774C774C774C774C774C774C77FD17FF7EA27EA27DA27E
%A27DA27EA27DA27EA27DA27EA27DA27EA27DA27EA27DA27EA27DA27EA27D
%A27EA27DA27EA27DA27EA27DA27EA27DA27EA27DA27EA27DA27EA27DA27E
%A27DA27EA27DA27EA27DA27EA27DA27EA27DA27EA27DA27EA27DA27EA27D
%A27EA27DA27EA27EFD16FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:17:08        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic CMYK</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2009-05-04T20:52:43-06:00</xap:CreateDate>
         <xap:ModifyDate>2009-05-04T20:52:43-06:00</xap:ModifyDate>
         <xap:MetadataDate>2009-05-04T20:52:43-06:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>160</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAoAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AINP0xr0SOZjGqNxoAD2B&#xA;7/PJdrdsS00+GIs/ZX63fRhlnkNSqA8t72Rn+HCdluWLH7IKqBX32OavF7S5DICQ9N71zZ5dPlES&#xA;Yz9VbWNk48qfl/Hrmpy2cmoSQLHAZuSxoxJDqtN6fzZsezu1cmovpTr+0M+XT16rvyDJ4/yNiaWV&#xA;X1eRY1IETLGhZhxBPJSBx39zmxjly2bIro4M+1ZcMaJ4uuwrypub8jIVCGLV5Wq6h+UaLRSaEinK&#xA;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&#xA;syzMdx3Yq7FXYq7FX//Z</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:A91235281E39DE11A326939BE220D0A7</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:AA1235281E39DE11A326939BE220D0A7</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:A71235281E39DE11A326939BE220D0A7</stRef:instanceID>
            <stRef:documentID>uuid:DF6F55BC1939DE11A326939BE220D0A7</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>4.000000</stDim:w>
            <stDim:h>3.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ArialMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 3.00</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>ARIAL.TTF</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>100.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>CMYK Red</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>CMYK Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>CMYK Green</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>CMYK Cyan</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>CMYK Blue</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>CMYK Magenta</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=15 M=100 Y=90 K=10</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>14.999998</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>90.000004</xapG:yellow>
                           <xapG:black>10.000002</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=90 Y=85 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>90.000004</xapG:magenta>
                           <xapG:yellow>84.999996</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=80 Y=95 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>80.000001</xapG:magenta>
                           <xapG:yellow>94.999999</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=50 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=35 Y=85 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>35.000002</xapG:magenta>
                           <xapG:yellow>84.999996</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=5 M=0 Y=90 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>5.000001</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>90.000004</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=20 M=0 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>19.999999</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=0 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=0 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=85 M=10 Y=100 K=10</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>84.999996</xapG:cyan>
                           <xapG:magenta>10.000002</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>10.000002</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=90 M=30 Y=95 K=30</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>90.000004</xapG:cyan>
                           <xapG:magenta>30.000001</xapG:magenta>
                           <xapG:yellow>94.999999</xapG:yellow>
                           <xapG:black>30.000001</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=0 Y=75 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=80 M=10 Y=45 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>80.000001</xapG:cyan>
                           <xapG:magenta>10.000002</xapG:magenta>
                           <xapG:yellow>44.999999</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=70 M=15 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>69.999999</xapG:cyan>
                           <xapG:magenta>14.999998</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=85 M=50 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>84.999996</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=95 Y=5 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>94.999999</xapG:magenta>
                           <xapG:yellow>5.000001</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=100 Y=25 K=25</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>25.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=100 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=100 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=35 M=100 Y=35 K=10</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>35.000002</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>35.000002</xapG:yellow>
                           <xapG:black>10.000002</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=10 M=100 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>10.000002</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=95 Y=20 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>94.999999</xapG:magenta>
                           <xapG:yellow>19.999999</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=25 Y=40 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>39.999998</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=40 M=45 Y=50 K=5</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.999998</xapG:cyan>
                           <xapG:magenta>44.999999</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>5.000001</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=50 Y=60 K=25</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>60.000002</xapG:yellow>
                           <xapG:black>25.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=55 M=60 Y=65 K=40</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>55.000001</xapG:cyan>
                           <xapG:magenta>60.000002</xapG:magenta>
                           <xapG:yellow>64.999998</xapG:yellow>
                           <xapG:black>39.999998</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=40 Y=65 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>39.999998</xapG:magenta>
                           <xapG:yellow>64.999998</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=30 M=50 Y=75 K=10</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>30.000001</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>10.000002</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=35 M=60 Y=80 K=25</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>35.000002</xapG:cyan>
                           <xapG:magenta>60.000002</xapG:magenta>
                           <xapG:yellow>80.000001</xapG:yellow>
                           <xapG:black>25.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=40 M=65 Y=90 K=35</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.999998</xapG:cyan>
                           <xapG:magenta>64.999998</xapG:magenta>
                           <xapG:yellow>90.000004</xapG:yellow>
                           <xapG:black>35.000002</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=40 M=70 Y=100 K=50</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.999998</xapG:cyan>
                           <xapG:magenta>69.999999</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>50.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=70 Y=80 K=70</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>69.999999</xapG:magenta>
                           <xapG:yellow>80.000001</xapG:yellow>
                           <xapG:black>69.999999</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Grayscale</xapG:groupName>
                  <xapG:groupType>1</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=90</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>229</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=80</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>203</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=70</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>178</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=60</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>152</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=50</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>127</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=40</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>101</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=30</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>76</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=20</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>50</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=10</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>25</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=5</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>12</xapG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -222.499 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 222.499 li
358.902 222.499 li
358.902 0 li
cp
clp
[1 0 0 1 0 0 ]ct
290.809 3.27686 mo
290.809 219.276 li
290.809 219.276 280.929 219.276 264.838 219.276 cv
264.838 177.537 li
264.838 3.99707 li
264.838 3.27686 li
290.809 3.27686 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.215686 .580392 1 .062745 cmyk
f
264.838 177.537 mo
264.838 219.276 li
249.168 219.276 227.628 219.276 203.559 219.276 cv
200.988 219.276 198.389 219.276 195.769 219.276 cv
180.049 219.646 163.049 219.646 146.809 219.276 cv
144.039 219.276 141.269 219.276 138.508 219.276 cv
95.6685 219.276 53.8081 219.276 28.1685 219.276 cv
28.1685 218.667 li
28.1685 179.217 li
62.2783 188.627 100.208 182.617 129.378 163.537 cv
132.048 162.146 134.749 160.927 137.528 160.047 cv
140.308 159.177 143.168 158.646 146.168 158.646 cv
155.168 159.146 163.168 164.396 171.398 169.146 cv
174.139 170.737 176.908 172.267 179.748 173.577 cv
207.168 183.646 236.168 182.646 264.498 177.537 cv
264.838 177.537 li
cp
f
264.838 3.99707 mo
264.838 177.537 li
264.498 177.537 li
236.168 182.646 207.168 183.646 179.748 173.577 cv
176.908 172.267 174.139 170.737 171.398 169.146 cv
163.168 164.396 155.168 159.146 146.168 158.646 cv
143.168 158.646 140.308 159.177 137.528 160.047 cv
134.749 160.927 132.048 162.146 129.378 163.537 cv
100.208 182.617 62.2783 188.627 28.1685 179.217 cv
28.1685 3.33691 li
28.1685 3.27686 li
264.838 3.27686 li
264.838 3.99707 li
cp
.2 0 0 0 cmyk
f
28.1685 179.217 mo
28.1685 218.667 li
28.1685 219.276 li
12.4282 219.276 2.80811 219.276 2.80811 219.276 cv
2.80811 3.27686 li
28.1685 3.27686 li
28.1685 3.33691 li
28.1685 179.217 li
cp
.215686 .580392 1 .062745 cmyk
f
3 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
28.1685 3.27686 mo
2.80811 3.27686 li
2.80811 219.276 li
2.80811 219.276 12.4282 219.276 28.1685 219.276 cv
53.8081 219.276 95.6685 219.276 138.508 219.276 cv
141.269 219.276 144.039 219.276 146.809 219.276 cv
163.049 219.646 180.049 219.646 195.769 219.276 cv
198.389 219.276 200.988 219.276 203.559 219.276 cv
227.628 219.276 249.168 219.276 264.838 219.276 cv
280.929 219.276 290.809 219.276 290.809 219.276 cv
290.809 3.27686 li
264.838 3.27686 li
28.1685 3.27686 li
cp
0 0 0 1 cmyk
@
1 lw
28.1685 3.33691 mo
28.1685 179.217 li
28.1685 218.667 li
@
1 lc
1 lj
264.838 3.99707 mo
264.838 177.537 li
264.838 219.276 li
264.838 219.337 li
@
0 lc
0 lj
28.0186 179.177 mo
28.0684 179.187 28.1182 179.207 28.1685 179.217 cv
62.2783 188.627 100.208 182.617 129.378 163.537 cv
132.048 162.146 134.749 160.927 137.528 160.047 cv
140.308 159.177 143.168 158.646 146.168 158.646 cv
155.168 159.146 163.168 164.396 171.398 169.146 cv
174.139 170.737 176.908 172.267 179.748 173.577 cv
207.168 183.646 236.168 182.646 264.498 177.537 cv
@
.5 lw
5.25 20.084 mo
290.166 20.084 li
0 0 0 .4 cmyk
@
5.58301 35.417 mo
290.25 35.417 li
@
5.5835 49.417 mo
290.334 49.417 li
@
5.58301 64.75 mo
290.5 64.75 li
@
6.25 78.751 mo
290.416 78.751 li
@
6.58301 94.085 mo
290.416 94.085 li
@
6.5835 108.084 mo
290.166 108.084 li
@
6.58301 123.417 mo
290.5 123.417 li
@
6.25 136.751 mo
290.25 136.751 li
@
6.58301 152.085 mo
290.334 152.085 li
@
6.5835 166.083 mo
290.166 166.083 li
@
6.58301 181.417 mo
290.166 181.417 li
@
5.9165 195.751 mo
290.084 195.751 li
@
5.91602 211.083 mo
290.334 211.083 li
@
37.5835 5.25 mo
37.5835 220.415 li
@
53.5835 5.375 mo
53.5835 220.415 li
@
68.916 5.625 mo
68.916 220.415 li
@
84.25 4.41699 mo
84.25 221.083 li
@
99.916 5.625 mo
99.916 220.749 li
@
116.25 4.41602 mo
116.25 221.083 li
@
132.25 4.41699 mo
132.25 221.083 li
@
147.583 4.41699 mo
147.583 221.083 li
@
162.916 5.08398 mo
162.916 221.751 li
@
178.584 4.75 mo
178.584 221.415 li
@
194.918 5.08203 mo
194.918 221.749 li
@
210.918 5.08301 mo
210.918 221.749 li
@
226.25 5.08301 mo
226.25 221.749 li
@
241.584 5.75 mo
241.584 217.874 li
@
257.916 5.5 mo
257.916 217.874 li
@
274.25 5.16602 mo
274.25 217.874 li
@
290.25 5.33301 mo
290.438 218.062 li
@
21.75 4.91602 mo
21.75 221.581 li
@
7.0835 5.5 mo
7.0835 6.14453 6.52393 6.66699 5.8335 6.66699 cv
5.14307 6.66699 4.5835 6.14453 4.5835 5.5 cv
4.5835 4.85547 5.14307 4.33398 5.8335 4.33398 cv
6.52393 4.33398 7.0835 4.85547 7.0835 5.5 cv
cp
1 .5 0 0 cmyk
f
22.8335 5.61523 mo
22.8335 6.25977 22.2739 6.78125 21.5835 6.78125 cv
20.8931 6.78125 20.3335 6.25977 20.3335 5.61523 cv
20.3335 4.9707 20.8931 4.44824 21.5835 4.44824 cv
22.2739 4.44824 22.8335 4.9707 22.8335 5.61523 cv
cp
f
38.8335 5.75 mo
38.8335 6.39453 38.2739 6.91602 37.5835 6.91602 cv
36.8931 6.91602 36.3335 6.39453 36.3335 5.75 cv
36.3335 5.10547 36.8931 4.58301 37.5835 4.58301 cv
38.2739 4.58301 38.8335 5.10547 38.8335 5.75 cv
cp
0 1 1 0 cmyk
f
54.667 5.58301 mo
54.667 6.22754 54.1074 6.75 53.417 6.75 cv
52.7266 6.75 52.167 6.22754 52.167 5.58301 cv
52.167 4.93945 52.7266 4.41602 53.417 4.41602 cv
54.1074 4.41602 54.667 4.93945 54.667 5.58301 cv
cp
f
70.167 5.75 mo
70.167 6.39453 69.6074 6.91602 68.917 6.91602 cv
68.2266 6.91602 67.667 6.39453 67.667 5.75 cv
67.667 5.10547 68.2266 4.58301 68.917 4.58301 cv
69.6074 4.58301 70.167 5.10547 70.167 5.75 cv
cp
f
85.167 5.61523 mo
85.167 6.25977 84.6074 6.78223 83.917 6.78223 cv
83.2266 6.78223 82.667 6.25977 82.667 5.61523 cv
82.667 4.9707 83.2266 4.44922 83.917 4.44922 cv
84.6074 4.44922 85.167 4.9707 85.167 5.61523 cv
cp
f
101.167 5.69824 mo
101.167 6.34277 100.607 6.86523 99.917 6.86523 cv
99.2266 6.86523 98.667 6.34277 98.667 5.69824 cv
98.667 5.05469 99.2266 4.53125 99.917 4.53125 cv
100.607 4.53125 101.167 5.05469 101.167 5.69824 cv
cp
f
117.416 5.69824 mo
117.416 6.34277 116.857 6.86523 116.166 6.86523 cv
115.477 6.86523 114.916 6.34277 114.916 5.69824 cv
114.916 5.05469 115.477 4.53125 116.166 4.53125 cv
116.857 4.53125 117.416 5.05469 117.416 5.69824 cv
cp
f
133.5 5.69727 mo
133.5 6.3418 132.94 6.86523 132.25 6.86523 cv
131.56 6.86523 131 6.3418 131 5.69727 cv
131 5.05371 131.56 4.53125 132.25 4.53125 cv
132.94 4.53125 133.5 5.05371 133.5 5.69727 cv
cp
f
148.834 5.69824 mo
148.834 6.34277 148.273 6.86523 147.584 6.86523 cv
146.893 6.86523 146.334 6.34277 146.334 5.69824 cv
146.334 5.05469 146.893 4.53125 147.584 4.53125 cv
148.273 4.53125 148.834 5.05469 148.834 5.69824 cv
cp
f
164.334 5.61523 mo
164.334 6.25977 163.773 6.78223 163.084 6.78223 cv
162.393 6.78223 161.834 6.25977 161.834 5.61523 cv
161.834 4.9707 162.393 4.44922 163.084 4.44922 cv
163.773 4.44922 164.334 4.9707 164.334 5.61523 cv
cp
f
179.834 5.61523 mo
179.834 6.25977 179.273 6.78223 178.584 6.78223 cv
177.893 6.78223 177.334 6.25977 177.334 5.61523 cv
177.334 4.9707 177.893 4.44922 178.584 4.44922 cv
179.273 4.44922 179.834 4.9707 179.834 5.61523 cv
cp
f
196.084 5.53125 mo
196.084 6.17578 195.523 6.69922 194.834 6.69922 cv
194.143 6.69922 193.584 6.17578 193.584 5.53125 cv
193.584 4.8877 194.143 4.36523 194.834 4.36523 cv
195.523 4.36523 196.084 4.8877 196.084 5.53125 cv
cp
f
212.25 5.61523 mo
212.25 6.25977 211.691 6.78223 211 6.78223 cv
210.311 6.78223 209.75 6.25977 209.75 5.61523 cv
209.75 4.9707 210.311 4.44922 211 4.44922 cv
211.691 4.44922 212.25 4.9707 212.25 5.61523 cv
cp
f
227.418 5.61523 mo
227.418 6.25977 226.857 6.78223 226.168 6.78223 cv
225.477 6.78223 224.918 6.25977 224.918 5.61523 cv
224.918 4.9707 225.477 4.44922 226.168 4.44922 cv
226.857 4.44922 227.418 4.9707 227.418 5.61523 cv
cp
f
242.834 5.53125 mo
242.834 6.17578 242.273 6.69922 241.584 6.69922 cv
240.893 6.69922 240.334 6.17578 240.334 5.53125 cv
240.334 4.8877 240.893 4.36523 241.584 4.36523 cv
242.273 4.36523 242.834 4.8877 242.834 5.53125 cv
cp
f
259.168 5.69824 mo
259.168 6.34277 258.607 6.86523 257.918 6.86523 cv
257.227 6.86523 256.668 6.34277 256.668 5.69824 cv
256.668 5.05469 257.227 4.53125 257.918 4.53125 cv
258.607 4.53125 259.168 5.05469 259.168 5.69824 cv
cp
f
275.5 5.61426 mo
275.5 6.25879 274.941 6.78125 274.25 6.78125 cv
273.561 6.78125 273 6.25879 273 5.61426 cv
273 4.9707 273.561 4.44727 274.25 4.44727 cv
274.941 4.44727 275.5 4.9707 275.5 5.61426 cv
cp
1 .5 0 0 cmyk
f
291.418 5.53125 mo
291.418 6.17578 290.857 6.69824 290.168 6.69824 cv
289.477 6.69824 288.918 6.17578 288.918 5.53125 cv
288.918 4.88672 289.477 4.36523 290.168 4.36523 cv
290.857 4.36523 291.418 4.88672 291.418 5.53125 cv
cp
f
22.7085 19.916 mo
22.7085 20.5605 22.1489 21.084 21.4585 21.084 cv
20.7681 21.084 20.2085 20.5605 20.2085 19.916 cv
20.2085 19.2725 20.7681 18.75 21.4585 18.75 cv
22.1489 18.75 22.7085 19.2725 22.7085 19.916 cv
cp
f
38.7085 20.0508 mo
38.7085 20.6953 38.1489 21.2188 37.4585 21.2188 cv
36.7681 21.2188 36.2085 20.6953 36.2085 20.0508 cv
36.2085 19.4072 36.7681 18.8848 37.4585 18.8848 cv
38.1489 18.8848 38.7085 19.4072 38.7085 20.0508 cv
cp
0 1 1 0 cmyk
f
54.542 19.8848 mo
54.542 20.5293 53.9824 21.0518 53.292 21.0518 cv
52.6016 21.0518 52.042 20.5293 52.042 19.8848 cv
52.042 19.2402 52.6016 18.7188 53.292 18.7188 cv
53.9824 18.7188 54.542 19.2402 54.542 19.8848 cv
cp
f
70.042 20.0508 mo
70.042 20.6953 69.4824 21.2188 68.792 21.2188 cv
68.1016 21.2188 67.542 20.6953 67.542 20.0508 cv
67.542 19.4072 68.1016 18.8848 68.792 18.8848 cv
69.4824 18.8848 70.042 19.4072 70.042 20.0508 cv
cp
f
85.042 19.917 mo
85.042 20.5615 84.4824 21.084 83.792 21.084 cv
83.1016 21.084 82.542 20.5615 82.542 19.917 cv
82.542 19.2734 83.1016 18.75 83.792 18.75 cv
84.4824 18.75 85.042 19.2734 85.042 19.917 cv
cp
f
101.042 20 mo
101.042 20.6445 100.482 21.167 99.792 21.167 cv
99.1016 21.167 98.542 20.6445 98.542 20 cv
98.542 19.3555 99.1016 18.834 99.792 18.834 cv
100.482 18.834 101.042 19.3555 101.042 20 cv
cp
f
117.291 20 mo
117.291 20.6445 116.732 21.167 116.041 21.167 cv
115.352 21.167 114.791 20.6445 114.791 20 cv
114.791 19.3555 115.352 18.834 116.041 18.834 cv
116.732 18.834 117.291 19.3555 117.291 20 cv
cp
f
133.375 20 mo
133.375 20.6445 132.815 21.166 132.125 21.166 cv
131.435 21.166 130.875 20.6445 130.875 20 cv
130.875 19.3555 131.435 18.833 132.125 18.833 cv
132.815 18.833 133.375 19.3555 133.375 20 cv
cp
f
148.709 20 mo
148.709 20.6445 148.148 21.167 147.459 21.167 cv
146.768 21.167 146.209 20.6445 146.209 20 cv
146.209 19.3555 146.768 18.834 147.459 18.834 cv
148.148 18.834 148.709 19.3555 148.709 20 cv
cp
f
164.209 19.917 mo
164.209 20.5615 163.648 21.084 162.959 21.084 cv
162.268 21.084 161.709 20.5615 161.709 19.917 cv
161.709 19.2734 162.268 18.75 162.959 18.75 cv
163.648 18.75 164.209 19.2734 164.209 19.917 cv
cp
f
179.709 19.917 mo
179.709 20.5615 179.148 21.084 178.459 21.084 cv
177.768 21.084 177.209 20.5615 177.209 19.917 cv
177.209 19.2734 177.768 18.75 178.459 18.75 cv
179.148 18.75 179.709 19.2734 179.709 19.917 cv
cp
f
195.959 19.834 mo
195.959 20.4785 195.398 21 194.709 21 cv
194.018 21 193.459 20.4785 193.459 19.834 cv
193.459 19.1895 194.018 18.667 194.709 18.667 cv
195.398 18.667 195.959 19.1895 195.959 19.834 cv
cp
f
212.125 19.917 mo
212.125 20.5615 211.566 21.084 210.875 21.084 cv
210.186 21.084 209.625 20.5615 209.625 19.917 cv
209.625 19.2734 210.186 18.75 210.875 18.75 cv
211.566 18.75 212.125 19.2734 212.125 19.917 cv
cp
f
227.293 19.917 mo
227.293 20.5615 226.732 21.084 226.043 21.084 cv
225.352 21.084 224.793 20.5615 224.793 19.917 cv
224.793 19.2734 225.352 18.75 226.043 18.75 cv
226.732 18.75 227.293 19.2734 227.293 19.917 cv
cp
f
242.709 19.834 mo
242.709 20.4785 242.148 21 241.459 21 cv
240.768 21 240.209 20.4785 240.209 19.834 cv
240.209 19.1895 240.768 18.667 241.459 18.667 cv
242.148 18.667 242.709 19.1895 242.709 19.834 cv
cp
f
259.043 20 mo
259.043 20.6445 258.482 21.167 257.793 21.167 cv
257.102 21.167 256.543 20.6445 256.543 20 cv
256.543 19.3555 257.102 18.834 257.793 18.834 cv
258.482 18.834 259.043 19.3555 259.043 20 cv
cp
f
275.375 19.916 mo
275.375 20.5605 274.816 21.083 274.125 21.083 cv
273.436 21.083 272.875 20.5605 272.875 19.916 cv
272.875 19.2715 273.436 18.75 274.125 18.75 cv
274.816 18.75 275.375 19.2715 275.375 19.916 cv
cp
1 .5 0 0 cmyk
f
22.8335 35.249 mo
22.8335 35.8936 22.2739 36.417 21.5835 36.417 cv
20.8931 36.417 20.3335 35.8936 20.3335 35.249 cv
20.3335 34.6055 20.8931 34.083 21.5835 34.083 cv
22.2739 34.083 22.8335 34.6055 22.8335 35.249 cv
cp
f
38.8335 35.3838 mo
38.8335 36.0283 38.2739 36.5518 37.5835 36.5518 cv
36.8931 36.5518 36.3335 36.0283 36.3335 35.3838 cv
36.3335 34.7402 36.8931 34.2178 37.5835 34.2178 cv
38.2739 34.2178 38.8335 34.7402 38.8335 35.3838 cv
cp
0 1 1 0 cmyk
f
54.667 35.2178 mo
54.667 35.8623 54.1074 36.3848 53.417 36.3848 cv
52.7266 36.3848 52.167 35.8623 52.167 35.2178 cv
52.167 34.5732 52.7266 34.0518 53.417 34.0518 cv
54.1074 34.0518 54.667 34.5732 54.667 35.2178 cv
cp
f
70.167 35.3838 mo
70.167 36.0283 69.6074 36.5518 68.917 36.5518 cv
68.2266 36.5518 67.667 36.0283 67.667 35.3838 cv
67.667 34.7402 68.2266 34.2178 68.917 34.2178 cv
69.6074 34.2178 70.167 34.7402 70.167 35.3838 cv
cp
f
85.167 35.25 mo
85.167 35.8945 84.6074 36.417 83.917 36.417 cv
83.2266 36.417 82.667 35.8945 82.667 35.25 cv
82.667 34.6064 83.2266 34.083 83.917 34.083 cv
84.6074 34.083 85.167 34.6064 85.167 35.25 cv
cp
f
101.167 35.333 mo
101.167 35.9775 100.607 36.5 99.917 36.5 cv
99.2266 36.5 98.667 35.9775 98.667 35.333 cv
98.667 34.6885 99.2266 34.167 99.917 34.167 cv
100.607 34.167 101.167 34.6885 101.167 35.333 cv
cp
f
117.416 35.333 mo
117.416 35.9775 116.857 36.5 116.166 36.5 cv
115.477 36.5 114.916 35.9775 114.916 35.333 cv
114.916 34.6885 115.477 34.167 116.166 34.167 cv
116.857 34.167 117.416 34.6885 117.416 35.333 cv
cp
f
133.5 35.333 mo
133.5 35.9775 132.94 36.499 132.25 36.499 cv
131.56 36.499 131 35.9775 131 35.333 cv
131 34.6885 131.56 34.166 132.25 34.166 cv
132.94 34.166 133.5 34.6885 133.5 35.333 cv
cp
f
148.834 35.333 mo
148.834 35.9775 148.273 36.5 147.584 36.5 cv
146.893 36.5 146.334 35.9775 146.334 35.333 cv
146.334 34.6885 146.893 34.167 147.584 34.167 cv
148.273 34.167 148.834 34.6885 148.834 35.333 cv
cp
f
164.334 35.25 mo
164.334 35.8945 163.773 36.417 163.084 36.417 cv
162.393 36.417 161.834 35.8945 161.834 35.25 cv
161.834 34.6064 162.393 34.083 163.084 34.083 cv
163.773 34.083 164.334 34.6064 164.334 35.25 cv
cp
f
179.834 35.25 mo
179.834 35.8945 179.273 36.417 178.584 36.417 cv
177.893 36.417 177.334 35.8945 177.334 35.25 cv
177.334 34.6064 177.893 34.083 178.584 34.083 cv
179.273 34.083 179.834 34.6064 179.834 35.25 cv
cp
f
196.084 35.167 mo
196.084 35.8115 195.523 36.333 194.834 36.333 cv
194.143 36.333 193.584 35.8115 193.584 35.167 cv
193.584 34.5225 194.143 34 194.834 34 cv
195.523 34 196.084 34.5225 196.084 35.167 cv
cp
f
212.25 35.25 mo
212.25 35.8945 211.691 36.417 211 36.417 cv
210.311 36.417 209.75 35.8945 209.75 35.25 cv
209.75 34.6064 210.311 34.083 211 34.083 cv
211.691 34.083 212.25 34.6064 212.25 35.25 cv
cp
f
227.418 35.25 mo
227.418 35.8945 226.857 36.417 226.168 36.417 cv
225.477 36.417 224.918 35.8945 224.918 35.25 cv
224.918 34.6064 225.477 34.083 226.168 34.083 cv
226.857 34.083 227.418 34.6064 227.418 35.25 cv
cp
f
242.834 35.167 mo
242.834 35.8115 242.273 36.333 241.584 36.333 cv
240.893 36.333 240.334 35.8115 240.334 35.167 cv
240.334 34.5225 240.893 34 241.584 34 cv
242.273 34 242.834 34.5225 242.834 35.167 cv
cp
f
259.168 35.333 mo
259.168 35.9775 258.607 36.5 257.918 36.5 cv
257.227 36.5 256.668 35.9775 256.668 35.333 cv
256.668 34.6885 257.227 34.167 257.918 34.167 cv
258.607 34.167 259.168 34.6885 259.168 35.333 cv
cp
f
275.5 35.249 mo
275.5 35.8936 274.941 36.416 274.25 36.416 cv
273.561 36.416 273 35.8936 273 35.249 cv
273 34.6045 273.561 34.083 274.25 34.083 cv
274.941 34.083 275.5 34.6045 275.5 35.249 cv
cp
1 .5 0 0 cmyk
f
22.8335 49.166 mo
22.8335 49.8105 22.2739 50.334 21.5835 50.334 cv
20.8931 50.334 20.3335 49.8105 20.3335 49.166 cv
20.3335 48.5225 20.8931 48 21.5835 48 cv
22.2739 48 22.8335 48.5225 22.8335 49.166 cv
cp
f
38.8335 49.3008 mo
38.8335 49.9453 38.2739 50.4688 37.5835 50.4688 cv
36.8931 50.4688 36.3335 49.9453 36.3335 49.3008 cv
36.3335 48.6572 36.8931 48.1348 37.5835 48.1348 cv
38.2739 48.1348 38.8335 48.6572 38.8335 49.3008 cv
cp
0 1 1 0 cmyk
f
54.667 49.1348 mo
54.667 49.7793 54.1074 50.3018 53.417 50.3018 cv
52.7266 50.3018 52.167 49.7793 52.167 49.1348 cv
52.167 48.4902 52.7266 47.9688 53.417 47.9688 cv
54.1074 47.9688 54.667 48.4902 54.667 49.1348 cv
cp
f
70.167 49.3008 mo
70.167 49.9453 69.6074 50.4688 68.917 50.4688 cv
68.2266 50.4688 67.667 49.9453 67.667 49.3008 cv
67.667 48.6572 68.2266 48.1348 68.917 48.1348 cv
69.6074 48.1348 70.167 48.6572 70.167 49.3008 cv
cp
f
85.167 49.167 mo
85.167 49.8115 84.6074 50.334 83.917 50.334 cv
83.2266 50.334 82.667 49.8115 82.667 49.167 cv
82.667 48.5234 83.2266 48 83.917 48 cv
84.6074 48 85.167 48.5234 85.167 49.167 cv
cp
f
101.167 49.25 mo
101.167 49.8945 100.607 50.417 99.917 50.417 cv
99.2266 50.417 98.667 49.8945 98.667 49.25 cv
98.667 48.6055 99.2266 48.084 99.917 48.084 cv
100.607 48.084 101.167 48.6055 101.167 49.25 cv
cp
f
117.416 49.25 mo
117.416 49.8945 116.857 50.417 116.166 50.417 cv
115.477 50.417 114.916 49.8945 114.916 49.25 cv
114.916 48.6055 115.477 48.084 116.166 48.084 cv
116.857 48.084 117.416 48.6055 117.416 49.25 cv
cp
f
133.5 49.25 mo
133.5 49.8945 132.94 50.416 132.25 50.416 cv
131.56 50.416 131 49.8945 131 49.25 cv
131 48.6055 131.56 48.083 132.25 48.083 cv
132.94 48.083 133.5 48.6055 133.5 49.25 cv
cp
f
148.834 49.25 mo
148.834 49.8945 148.273 50.417 147.584 50.417 cv
146.893 50.417 146.334 49.8945 146.334 49.25 cv
146.334 48.6055 146.893 48.084 147.584 48.084 cv
148.273 48.084 148.834 48.6055 148.834 49.25 cv
cp
f
164.334 49.167 mo
164.334 49.8115 163.773 50.334 163.084 50.334 cv
162.393 50.334 161.834 49.8115 161.834 49.167 cv
161.834 48.5234 162.393 48 163.084 48 cv
163.773 48 164.334 48.5234 164.334 49.167 cv
cp
f
179.834 49.167 mo
179.834 49.8115 179.273 50.334 178.584 50.334 cv
177.893 50.334 177.334 49.8115 177.334 49.167 cv
177.334 48.5234 177.893 48 178.584 48 cv
179.273 48 179.834 48.5234 179.834 49.167 cv
cp
f
196.084 49.084 mo
196.084 49.7285 195.523 50.25 194.834 50.25 cv
194.143 50.25 193.584 49.7285 193.584 49.084 cv
193.584 48.4395 194.143 47.917 194.834 47.917 cv
195.523 47.917 196.084 48.4395 196.084 49.084 cv
cp
f
212.25 49.167 mo
212.25 49.8115 211.691 50.334 211 50.334 cv
210.311 50.334 209.75 49.8115 209.75 49.167 cv
209.75 48.5234 210.311 48 211 48 cv
211.691 48 212.25 48.5234 212.25 49.167 cv
cp
f
227.418 49.167 mo
227.418 49.8115 226.857 50.334 226.168 50.334 cv
225.477 50.334 224.918 49.8115 224.918 49.167 cv
224.918 48.5234 225.477 48 226.168 48 cv
226.857 48 227.418 48.5234 227.418 49.167 cv
cp
f
242.834 49.084 mo
242.834 49.7285 242.273 50.25 241.584 50.25 cv
240.893 50.25 240.334 49.7285 240.334 49.084 cv
240.334 48.4395 240.893 47.917 241.584 47.917 cv
242.273 47.917 242.834 48.4395 242.834 49.084 cv
cp
f
259.168 49.25 mo
259.168 49.8945 258.607 50.417 257.918 50.417 cv
257.227 50.417 256.668 49.8945 256.668 49.25 cv
256.668 48.6055 257.227 48.084 257.918 48.084 cv
258.607 48.084 259.168 48.6055 259.168 49.25 cv
cp
f
275.5 49.166 mo
275.5 49.8105 274.941 50.333 274.25 50.333 cv
273.561 50.333 273 49.8105 273 49.166 cv
273 48.5215 273.561 48 274.25 48 cv
274.941 48 275.5 48.5215 275.5 49.166 cv
cp
1 .5 0 0 cmyk
f
23 64.666 mo
23 65.3105 22.4404 65.834 21.75 65.834 cv
21.0596 65.834 20.5 65.3105 20.5 64.666 cv
20.5 64.0225 21.0596 63.5 21.75 63.5 cv
22.4404 63.5 23 64.0225 23 64.666 cv
cp
f
39 64.8008 mo
39 65.4453 38.4404 65.9688 37.75 65.9688 cv
37.0596 65.9688 36.5 65.4453 36.5 64.8008 cv
36.5 64.1572 37.0596 63.6348 37.75 63.6348 cv
38.4404 63.6348 39 64.1572 39 64.8008 cv
cp
0 1 1 0 cmyk
f
54.8335 64.6348 mo
54.8335 65.2793 54.2739 65.8018 53.5835 65.8018 cv
52.8931 65.8018 52.3335 65.2793 52.3335 64.6348 cv
52.3335 63.9902 52.8931 63.4688 53.5835 63.4688 cv
54.2739 63.4688 54.8335 63.9902 54.8335 64.6348 cv
cp
f
70.334 64.8008 mo
70.334 65.4453 69.7734 65.9688 69.084 65.9688 cv
68.3926 65.9688 67.834 65.4453 67.834 64.8008 cv
67.834 64.1572 68.3926 63.6348 69.084 63.6348 cv
69.7734 63.6348 70.334 64.1572 70.334 64.8008 cv
cp
f
85.334 64.667 mo
85.334 65.3115 84.7734 65.834 84.084 65.834 cv
83.3926 65.834 82.834 65.3115 82.834 64.667 cv
82.834 64.0234 83.3926 63.5 84.084 63.5 cv
84.7734 63.5 85.334 64.0234 85.334 64.667 cv
cp
f
101.334 64.75 mo
101.334 65.3945 100.773 65.917 100.084 65.917 cv
99.3926 65.917 98.834 65.3945 98.834 64.75 cv
98.834 64.1055 99.3926 63.584 100.084 63.584 cv
100.773 63.584 101.334 64.1055 101.334 64.75 cv
cp
f
117.583 64.75 mo
117.583 65.3945 117.023 65.917 116.333 65.917 cv
115.643 65.917 115.083 65.3945 115.083 64.75 cv
115.083 64.1055 115.643 63.584 116.333 63.584 cv
117.023 63.584 117.583 64.1055 117.583 64.75 cv
cp
f
133.666 64.75 mo
133.666 65.3945 133.107 65.916 132.416 65.916 cv
131.727 65.916 131.166 65.3945 131.166 64.75 cv
131.166 64.1055 131.727 63.583 132.416 63.583 cv
133.107 63.583 133.666 64.1055 133.666 64.75 cv
cp
f
149 64.75 mo
149 65.3945 148.44 65.917 147.75 65.917 cv
147.06 65.917 146.5 65.3945 146.5 64.75 cv
146.5 64.1055 147.06 63.584 147.75 63.584 cv
148.44 63.584 149 64.1055 149 64.75 cv
cp
f
164.5 64.667 mo
164.5 65.3115 163.941 65.834 163.25 65.834 cv
162.561 65.834 162 65.3115 162 64.667 cv
162 64.0234 162.561 63.5 163.25 63.5 cv
163.941 63.5 164.5 64.0234 164.5 64.667 cv
cp
f
180 64.667 mo
180 65.3115 179.441 65.834 178.75 65.834 cv
178.061 65.834 177.5 65.3115 177.5 64.667 cv
177.5 64.0234 178.061 63.5 178.75 63.5 cv
179.441 63.5 180 64.0234 180 64.667 cv
cp
f
196.25 64.584 mo
196.25 65.2285 195.691 65.75 195 65.75 cv
194.311 65.75 193.75 65.2285 193.75 64.584 cv
193.75 63.9395 194.311 63.417 195 63.417 cv
195.691 63.417 196.25 63.9395 196.25 64.584 cv
cp
f
212.416 64.667 mo
212.416 65.3115 211.857 65.834 211.166 65.834 cv
210.477 65.834 209.916 65.3115 209.916 64.667 cv
209.916 64.0234 210.477 63.5 211.166 63.5 cv
211.857 63.5 212.416 64.0234 212.416 64.667 cv
cp
f
227.584 64.667 mo
227.584 65.3115 227.023 65.834 226.334 65.834 cv
225.643 65.834 225.084 65.3115 225.084 64.667 cv
225.084 64.0234 225.643 63.5 226.334 63.5 cv
227.023 63.5 227.584 64.0234 227.584 64.667 cv
cp
f
243 64.584 mo
243 65.2285 242.441 65.75 241.75 65.75 cv
241.061 65.75 240.5 65.2285 240.5 64.584 cv
240.5 63.9395 241.061 63.417 241.75 63.417 cv
242.441 63.417 243 63.9395 243 64.584 cv
cp
f
259.334 64.75 mo
259.334 65.3945 258.773 65.917 258.084 65.917 cv
257.393 65.917 256.834 65.3945 256.834 64.75 cv
256.834 64.1055 257.393 63.584 258.084 63.584 cv
258.773 63.584 259.334 64.1055 259.334 64.75 cv
cp
f
275.666 64.666 mo
275.666 65.3105 275.107 65.833 274.416 65.833 cv
273.727 65.833 273.166 65.3105 273.166 64.666 cv
273.166 64.0215 273.727 63.5 274.416 63.5 cv
275.107 63.5 275.666 64.0215 275.666 64.666 cv
cp
1 .5 0 0 cmyk
f
22.8335 78.666 mo
22.8335 79.3105 22.2739 79.834 21.5835 79.834 cv
20.8931 79.834 20.3335 79.3105 20.3335 78.666 cv
20.3335 78.0225 20.8931 77.5 21.5835 77.5 cv
22.2739 77.5 22.8335 78.0225 22.8335 78.666 cv
cp
f
38.8335 78.8008 mo
38.8335 79.4453 38.2739 79.9688 37.5835 79.9688 cv
36.8931 79.9688 36.3335 79.4453 36.3335 78.8008 cv
36.3335 78.1572 36.8931 77.6348 37.5835 77.6348 cv
38.2739 77.6348 38.8335 78.1572 38.8335 78.8008 cv
cp
0 1 1 0 cmyk
f
54.667 78.6348 mo
54.667 79.2793 54.1074 79.8018 53.417 79.8018 cv
52.7266 79.8018 52.167 79.2793 52.167 78.6348 cv
52.167 77.9902 52.7266 77.4688 53.417 77.4688 cv
54.1074 77.4688 54.667 77.9902 54.667 78.6348 cv
cp
f
70.167 78.8008 mo
70.167 79.4453 69.6074 79.9688 68.917 79.9688 cv
68.2266 79.9688 67.667 79.4453 67.667 78.8008 cv
67.667 78.1572 68.2266 77.6348 68.917 77.6348 cv
69.6074 77.6348 70.167 78.1572 70.167 78.8008 cv
cp
f
85.167 78.667 mo
85.167 79.3115 84.6074 79.834 83.917 79.834 cv
83.2266 79.834 82.667 79.3115 82.667 78.667 cv
82.667 78.0234 83.2266 77.5 83.917 77.5 cv
84.6074 77.5 85.167 78.0234 85.167 78.667 cv
cp
f
101.167 78.75 mo
101.167 79.3945 100.607 79.917 99.917 79.917 cv
99.2266 79.917 98.667 79.3945 98.667 78.75 cv
98.667 78.1055 99.2266 77.584 99.917 77.584 cv
100.607 77.584 101.167 78.1055 101.167 78.75 cv
cp
f
117.416 78.75 mo
117.416 79.3945 116.857 79.917 116.166 79.917 cv
115.477 79.917 114.916 79.3945 114.916 78.75 cv
114.916 78.1055 115.477 77.584 116.166 77.584 cv
116.857 77.584 117.416 78.1055 117.416 78.75 cv
cp
f
133.5 78.75 mo
133.5 79.3945 132.94 79.916 132.25 79.916 cv
131.56 79.916 131 79.3945 131 78.75 cv
131 78.1055 131.56 77.583 132.25 77.583 cv
132.94 77.583 133.5 78.1055 133.5 78.75 cv
cp
f
148.834 78.75 mo
148.834 79.3945 148.273 79.917 147.584 79.917 cv
146.893 79.917 146.334 79.3945 146.334 78.75 cv
146.334 78.1055 146.893 77.584 147.584 77.584 cv
148.273 77.584 148.834 78.1055 148.834 78.75 cv
cp
f
164.334 78.667 mo
164.334 79.3115 163.773 79.834 163.084 79.834 cv
162.393 79.834 161.834 79.3115 161.834 78.667 cv
161.834 78.0234 162.393 77.5 163.084 77.5 cv
163.773 77.5 164.334 78.0234 164.334 78.667 cv
cp
f
179.834 78.667 mo
179.834 79.3115 179.273 79.834 178.584 79.834 cv
177.893 79.834 177.334 79.3115 177.334 78.667 cv
177.334 78.0234 177.893 77.5 178.584 77.5 cv
179.273 77.5 179.834 78.0234 179.834 78.667 cv
cp
f
196.084 78.584 mo
196.084 79.2285 195.523 79.75 194.834 79.75 cv
194.143 79.75 193.584 79.2285 193.584 78.584 cv
193.584 77.9395 194.143 77.417 194.834 77.417 cv
195.523 77.417 196.084 77.9395 196.084 78.584 cv
cp
f
212.25 78.667 mo
212.25 79.3115 211.691 79.834 211 79.834 cv
210.311 79.834 209.75 79.3115 209.75 78.667 cv
209.75 78.0234 210.311 77.5 211 77.5 cv
211.691 77.5 212.25 78.0234 212.25 78.667 cv
cp
f
227.418 78.667 mo
227.418 79.3115 226.857 79.834 226.168 79.834 cv
225.477 79.834 224.918 79.3115 224.918 78.667 cv
224.918 78.0234 225.477 77.5 226.168 77.5 cv
226.857 77.5 227.418 78.0234 227.418 78.667 cv
cp
f
242.834 78.584 mo
242.834 79.2285 242.273 79.75 241.584 79.75 cv
240.893 79.75 240.334 79.2285 240.334 78.584 cv
240.334 77.9395 240.893 77.417 241.584 77.417 cv
242.273 77.417 242.834 77.9395 242.834 78.584 cv
cp
f
259.168 78.75 mo
259.168 79.3945 258.607 79.917 257.918 79.917 cv
257.227 79.917 256.668 79.3945 256.668 78.75 cv
256.668 78.1055 257.227 77.584 257.918 77.584 cv
258.607 77.584 259.168 78.1055 259.168 78.75 cv
cp
f
38.8335 93.9688 mo
38.8335 94.6133 38.2739 95.1348 37.5835 95.1348 cv
36.8931 95.1348 36.3335 94.6133 36.3335 93.9688 cv
36.3335 93.3242 36.8931 92.8018 37.5835 92.8018 cv
38.2739 92.8018 38.8335 93.3242 38.8335 93.9688 cv
cp
f
54.667 93.8018 mo
54.667 94.4463 54.1074 94.9688 53.417 94.9688 cv
52.7266 94.9688 52.167 94.4463 52.167 93.8018 cv
52.167 93.1582 52.7266 92.6348 53.417 92.6348 cv
54.1074 92.6348 54.667 93.1582 54.667 93.8018 cv
cp
f
70.167 93.9688 mo
70.167 94.6133 69.6074 95.1348 68.917 95.1348 cv
68.2266 95.1348 67.667 94.6133 67.667 93.9688 cv
67.667 93.3242 68.2266 92.8018 68.917 92.8018 cv
69.6074 92.8018 70.167 93.3242 70.167 93.9688 cv
cp
f
85.167 93.834 mo
85.167 94.4785 84.6074 95.001 83.917 95.001 cv
83.2266 95.001 82.667 94.4785 82.667 93.834 cv
82.667 93.1895 83.2266 92.668 83.917 92.668 cv
84.6074 92.668 85.167 93.1895 85.167 93.834 cv
cp
f
101.167 93.917 mo
101.167 94.5615 100.607 95.084 99.917 95.084 cv
99.2266 95.084 98.667 94.5615 98.667 93.917 cv
98.667 93.2734 99.2266 92.75 99.917 92.75 cv
100.607 92.75 101.167 93.2734 101.167 93.917 cv
cp
f
117.416 93.917 mo
117.416 94.5615 116.857 95.084 116.166 95.084 cv
115.477 95.084 114.916 94.5615 114.916 93.917 cv
114.916 93.2734 115.477 92.75 116.166 92.75 cv
116.857 92.75 117.416 93.2734 117.416 93.917 cv
cp
f
133.5 93.916 mo
133.5 94.5605 132.94 95.084 132.25 95.084 cv
131.56 95.084 131 94.5605 131 93.916 cv
131 93.2725 131.56 92.75 132.25 92.75 cv
132.94 92.75 133.5 93.2725 133.5 93.916 cv
cp
f
148.834 93.917 mo
148.834 94.5615 148.273 95.084 147.584 95.084 cv
146.893 95.084 146.334 94.5615 146.334 93.917 cv
146.334 93.2734 146.893 92.75 147.584 92.75 cv
148.273 92.75 148.834 93.2734 148.834 93.917 cv
cp
f
164.334 93.834 mo
164.334 94.4785 163.773 95.001 163.084 95.001 cv
162.393 95.001 161.834 94.4785 161.834 93.834 cv
161.834 93.1895 162.393 92.668 163.084 92.668 cv
163.773 92.668 164.334 93.1895 164.334 93.834 cv
cp
f
179.834 93.834 mo
179.834 94.4785 179.273 95.001 178.584 95.001 cv
177.893 95.001 177.334 94.4785 177.334 93.834 cv
177.334 93.1895 177.893 92.668 178.584 92.668 cv
179.273 92.668 179.834 93.1895 179.834 93.834 cv
cp
f
196.084 93.75 mo
196.084 94.3945 195.523 94.918 194.834 94.918 cv
194.143 94.918 193.584 94.3945 193.584 93.75 cv
193.584 93.1064 194.143 92.584 194.834 92.584 cv
195.523 92.584 196.084 93.1064 196.084 93.75 cv
cp
f
212.25 93.834 mo
212.25 94.4785 211.691 95.001 211 95.001 cv
210.311 95.001 209.75 94.4785 209.75 93.834 cv
209.75 93.1895 210.311 92.668 211 92.668 cv
211.691 92.668 212.25 93.1895 212.25 93.834 cv
cp
f
227.418 93.834 mo
227.418 94.4785 226.857 95.001 226.168 95.001 cv
225.477 95.001 224.918 94.4785 224.918 93.834 cv
224.918 93.1895 225.477 92.668 226.168 92.668 cv
226.857 92.668 227.418 93.1895 227.418 93.834 cv
cp
f
242.834 93.75 mo
242.834 94.3945 242.273 94.918 241.584 94.918 cv
240.893 94.918 240.334 94.3945 240.334 93.75 cv
240.334 93.1064 240.893 92.584 241.584 92.584 cv
242.273 92.584 242.834 93.1064 242.834 93.75 cv
cp
f
259.168 93.917 mo
259.168 94.5615 258.607 95.084 257.918 95.084 cv
257.227 95.084 256.668 94.5615 256.668 93.917 cv
256.668 93.2734 257.227 92.75 257.918 92.75 cv
258.607 92.75 259.168 93.2734 259.168 93.917 cv
cp
f
38.8335 107.969 mo
38.8335 108.613 38.2739 109.135 37.5835 109.135 cv
36.8931 109.135 36.3335 108.613 36.3335 107.969 cv
36.3335 107.324 36.8931 106.802 37.5835 106.802 cv
38.2739 106.802 38.8335 107.324 38.8335 107.969 cv
cp
f
54.667 107.802 mo
54.667 108.446 54.1074 108.969 53.417 108.969 cv
52.7266 108.969 52.167 108.446 52.167 107.802 cv
52.167 107.158 52.7266 106.635 53.417 106.635 cv
54.1074 106.635 54.667 107.158 54.667 107.802 cv
cp
f
70.167 107.969 mo
70.167 108.613 69.6074 109.135 68.917 109.135 cv
68.2266 109.135 67.667 108.613 67.667 107.969 cv
67.667 107.324 68.2266 106.802 68.917 106.802 cv
69.6074 106.802 70.167 107.324 70.167 107.969 cv
cp
f
85.167 107.834 mo
85.167 108.479 84.6074 109.001 83.917 109.001 cv
83.2266 109.001 82.667 108.479 82.667 107.834 cv
82.667 107.189 83.2266 106.668 83.917 106.668 cv
84.6074 106.668 85.167 107.189 85.167 107.834 cv
cp
f
101.167 107.917 mo
101.167 108.562 100.607 109.084 99.917 109.084 cv
99.2266 109.084 98.667 108.562 98.667 107.917 cv
98.667 107.273 99.2266 106.75 99.917 106.75 cv
100.607 106.75 101.167 107.273 101.167 107.917 cv
cp
f
117.416 107.917 mo
117.416 108.562 116.857 109.084 116.166 109.084 cv
115.477 109.084 114.916 108.562 114.916 107.917 cv
114.916 107.273 115.477 106.75 116.166 106.75 cv
116.857 106.75 117.416 107.273 117.416 107.917 cv
cp
f
133.5 107.916 mo
133.5 108.561 132.94 109.084 132.25 109.084 cv
131.56 109.084 131 108.561 131 107.916 cv
131 107.272 131.56 106.75 132.25 106.75 cv
132.94 106.75 133.5 107.272 133.5 107.916 cv
cp
f
148.834 107.917 mo
148.834 108.562 148.273 109.084 147.584 109.084 cv
146.893 109.084 146.334 108.562 146.334 107.917 cv
146.334 107.273 146.893 106.75 147.584 106.75 cv
148.273 106.75 148.834 107.273 148.834 107.917 cv
cp
f
164.334 107.834 mo
164.334 108.479 163.773 109.001 163.084 109.001 cv
162.393 109.001 161.834 108.479 161.834 107.834 cv
161.834 107.189 162.393 106.668 163.084 106.668 cv
163.773 106.668 164.334 107.189 164.334 107.834 cv
cp
f
179.834 107.834 mo
179.834 108.479 179.273 109.001 178.584 109.001 cv
177.893 109.001 177.334 108.479 177.334 107.834 cv
177.334 107.189 177.893 106.668 178.584 106.668 cv
179.273 106.668 179.834 107.189 179.834 107.834 cv
cp
f
196.084 107.75 mo
196.084 108.395 195.523 108.918 194.834 108.918 cv
194.143 108.918 193.584 108.395 193.584 107.75 cv
193.584 107.106 194.143 106.584 194.834 106.584 cv
195.523 106.584 196.084 107.106 196.084 107.75 cv
cp
f
212.25 107.834 mo
212.25 108.479 211.691 109.001 211 109.001 cv
210.311 109.001 209.75 108.479 209.75 107.834 cv
209.75 107.189 210.311 106.668 211 106.668 cv
211.691 106.668 212.25 107.189 212.25 107.834 cv
cp
f
227.418 107.834 mo
227.418 108.479 226.857 109.001 226.168 109.001 cv
225.477 109.001 224.918 108.479 224.918 107.834 cv
224.918 107.189 225.477 106.668 226.168 106.668 cv
226.857 106.668 227.418 107.189 227.418 107.834 cv
cp
f
242.834 107.75 mo
242.834 108.395 242.273 108.918 241.584 108.918 cv
240.893 108.918 240.334 108.395 240.334 107.75 cv
240.334 107.106 240.893 106.584 241.584 106.584 cv
242.273 106.584 242.834 107.106 242.834 107.75 cv
cp
f
259.168 107.917 mo
259.168 108.562 258.607 109.084 257.918 109.084 cv
257.227 109.084 256.668 108.562 256.668 107.917 cv
256.668 107.273 257.227 106.75 257.918 106.75 cv
258.607 106.75 259.168 107.273 259.168 107.917 cv
cp
f
38.8335 123.302 mo
38.8335 123.946 38.2739 124.468 37.5835 124.468 cv
36.8931 124.468 36.3335 123.946 36.3335 123.302 cv
36.3335 122.657 36.8931 122.135 37.5835 122.135 cv
38.2739 122.135 38.8335 122.657 38.8335 123.302 cv
cp
f
54.667 123.135 mo
54.667 123.779 54.1074 124.302 53.417 124.302 cv
52.7266 124.302 52.167 123.779 52.167 123.135 cv
52.167 122.491 52.7266 121.968 53.417 121.968 cv
54.1074 121.968 54.667 122.491 54.667 123.135 cv
cp
f
70.167 123.302 mo
70.167 123.946 69.6074 124.468 68.917 124.468 cv
68.2266 124.468 67.667 123.946 67.667 123.302 cv
67.667 122.657 68.2266 122.135 68.917 122.135 cv
69.6074 122.135 70.167 122.657 70.167 123.302 cv
cp
f
85.167 123.167 mo
85.167 123.812 84.6074 124.334 83.917 124.334 cv
83.2266 124.334 82.667 123.812 82.667 123.167 cv
82.667 122.522 83.2266 122.001 83.917 122.001 cv
84.6074 122.001 85.167 122.522 85.167 123.167 cv
cp
f
101.167 123.25 mo
101.167 123.895 100.607 124.417 99.917 124.417 cv
99.2266 124.417 98.667 123.895 98.667 123.25 cv
98.667 122.606 99.2266 122.083 99.917 122.083 cv
100.607 122.083 101.167 122.606 101.167 123.25 cv
cp
f
117.416 123.25 mo
117.416 123.895 116.857 124.417 116.166 124.417 cv
115.477 124.417 114.916 123.895 114.916 123.25 cv
114.916 122.606 115.477 122.083 116.166 122.083 cv
116.857 122.083 117.416 122.606 117.416 123.25 cv
cp
f
133.5 123.249 mo
133.5 123.894 132.94 124.417 132.25 124.417 cv
131.56 124.417 131 123.894 131 123.249 cv
131 122.605 131.56 122.083 132.25 122.083 cv
132.94 122.083 133.5 122.605 133.5 123.249 cv
cp
f
148.834 123.25 mo
148.834 123.895 148.273 124.417 147.584 124.417 cv
146.893 124.417 146.334 123.895 146.334 123.25 cv
146.334 122.606 146.893 122.083 147.584 122.083 cv
148.273 122.083 148.834 122.606 148.834 123.25 cv
cp
f
164.334 123.167 mo
164.334 123.812 163.773 124.334 163.084 124.334 cv
162.393 124.334 161.834 123.812 161.834 123.167 cv
161.834 122.522 162.393 122.001 163.084 122.001 cv
163.773 122.001 164.334 122.522 164.334 123.167 cv
cp
f
179.834 123.167 mo
179.834 123.812 179.273 124.334 178.584 124.334 cv
177.893 124.334 177.334 123.812 177.334 123.167 cv
177.334 122.522 177.893 122.001 178.584 122.001 cv
179.273 122.001 179.834 122.522 179.834 123.167 cv
cp
f
196.084 123.083 mo
196.084 123.728 195.523 124.251 194.834 124.251 cv
194.143 124.251 193.584 123.728 193.584 123.083 cv
193.584 122.439 194.143 121.917 194.834 121.917 cv
195.523 121.917 196.084 122.439 196.084 123.083 cv
cp
f
212.25 123.167 mo
212.25 123.812 211.691 124.334 211 124.334 cv
210.311 124.334 209.75 123.812 209.75 123.167 cv
209.75 122.522 210.311 122.001 211 122.001 cv
211.691 122.001 212.25 122.522 212.25 123.167 cv
cp
f
227.418 123.167 mo
227.418 123.812 226.857 124.334 226.168 124.334 cv
225.477 124.334 224.918 123.812 224.918 123.167 cv
224.918 122.522 225.477 122.001 226.168 122.001 cv
226.857 122.001 227.418 122.522 227.418 123.167 cv
cp
f
242.834 123.083 mo
242.834 123.728 242.273 124.251 241.584 124.251 cv
240.893 124.251 240.334 123.728 240.334 123.083 cv
240.334 122.439 240.893 121.917 241.584 121.917 cv
242.273 121.917 242.834 122.439 242.834 123.083 cv
cp
f
259.168 123.25 mo
259.168 123.895 258.607 124.417 257.918 124.417 cv
257.227 124.417 256.668 123.895 256.668 123.25 cv
256.668 122.606 257.227 122.083 257.918 122.083 cv
258.607 122.083 259.168 122.606 259.168 123.25 cv
cp
f
38.8335 136.802 mo
38.8335 137.446 38.2739 137.968 37.5835 137.968 cv
36.8931 137.968 36.3335 137.446 36.3335 136.802 cv
36.3335 136.157 36.8931 135.635 37.5835 135.635 cv
38.2739 135.635 38.8335 136.157 38.8335 136.802 cv
cp
f
54.667 136.635 mo
54.667 137.279 54.1074 137.802 53.417 137.802 cv
52.7266 137.802 52.167 137.279 52.167 136.635 cv
52.167 135.991 52.7266 135.468 53.417 135.468 cv
54.1074 135.468 54.667 135.991 54.667 136.635 cv
cp
f
70.167 136.802 mo
70.167 137.446 69.6074 137.968 68.917 137.968 cv
68.2266 137.968 67.667 137.446 67.667 136.802 cv
67.667 136.157 68.2266 135.635 68.917 135.635 cv
69.6074 135.635 70.167 136.157 70.167 136.802 cv
cp
f
85.167 136.667 mo
85.167 137.312 84.6074 137.834 83.917 137.834 cv
83.2266 137.834 82.667 137.312 82.667 136.667 cv
82.667 136.022 83.2266 135.501 83.917 135.501 cv
84.6074 135.501 85.167 136.022 85.167 136.667 cv
cp
f
101.167 136.75 mo
101.167 137.395 100.607 137.917 99.917 137.917 cv
99.2266 137.917 98.667 137.395 98.667 136.75 cv
98.667 136.106 99.2266 135.583 99.917 135.583 cv
100.607 135.583 101.167 136.106 101.167 136.75 cv
cp
f
117.416 136.75 mo
117.416 137.395 116.857 137.917 116.166 137.917 cv
115.477 137.917 114.916 137.395 114.916 136.75 cv
114.916 136.106 115.477 135.583 116.166 135.583 cv
116.857 135.583 117.416 136.106 117.416 136.75 cv
cp
f
133.5 136.749 mo
133.5 137.394 132.94 137.917 132.25 137.917 cv
131.56 137.917 131 137.394 131 136.749 cv
131 136.105 131.56 135.583 132.25 135.583 cv
132.94 135.583 133.5 136.105 133.5 136.749 cv
cp
f
148.834 136.75 mo
148.834 137.395 148.273 137.917 147.584 137.917 cv
146.893 137.917 146.334 137.395 146.334 136.75 cv
146.334 136.106 146.893 135.583 147.584 135.583 cv
148.273 135.583 148.834 136.106 148.834 136.75 cv
cp
f
164.334 136.667 mo
164.334 137.312 163.773 137.834 163.084 137.834 cv
162.393 137.834 161.834 137.312 161.834 136.667 cv
161.834 136.022 162.393 135.501 163.084 135.501 cv
163.773 135.501 164.334 136.022 164.334 136.667 cv
cp
f
179.834 136.667 mo
179.834 137.312 179.273 137.834 178.584 137.834 cv
177.893 137.834 177.334 137.312 177.334 136.667 cv
177.334 136.022 177.893 135.501 178.584 135.501 cv
179.273 135.501 179.834 136.022 179.834 136.667 cv
cp
f
196.084 136.583 mo
196.084 137.228 195.523 137.751 194.834 137.751 cv
194.143 137.751 193.584 137.228 193.584 136.583 cv
193.584 135.939 194.143 135.417 194.834 135.417 cv
195.523 135.417 196.084 135.939 196.084 136.583 cv
cp
f
212.25 136.667 mo
212.25 137.312 211.691 137.834 211 137.834 cv
210.311 137.834 209.75 137.312 209.75 136.667 cv
209.75 136.022 210.311 135.501 211 135.501 cv
211.691 135.501 212.25 136.022 212.25 136.667 cv
cp
f
227.418 136.667 mo
227.418 137.312 226.857 137.834 226.168 137.834 cv
225.477 137.834 224.918 137.312 224.918 136.667 cv
224.918 136.022 225.477 135.501 226.168 135.501 cv
226.857 135.501 227.418 136.022 227.418 136.667 cv
cp
f
242.834 136.583 mo
242.834 137.228 242.273 137.751 241.584 137.751 cv
240.893 137.751 240.334 137.228 240.334 136.583 cv
240.334 135.939 240.893 135.417 241.584 135.417 cv
242.273 135.417 242.834 135.939 242.834 136.583 cv
cp
f
259.168 136.75 mo
259.168 137.395 258.607 137.917 257.918 137.917 cv
257.227 137.917 256.668 137.395 256.668 136.75 cv
256.668 136.106 257.227 135.583 257.918 135.583 cv
258.607 135.583 259.168 136.106 259.168 136.75 cv
cp
f
38.8335 152.136 mo
38.8335 152.78 38.2739 153.302 37.5835 153.302 cv
36.8931 153.302 36.3335 152.78 36.3335 152.136 cv
36.3335 151.491 36.8931 150.968 37.5835 150.968 cv
38.2739 150.968 38.8335 151.491 38.8335 152.136 cv
cp
f
54.667 151.968 mo
54.667 152.612 54.1074 153.136 53.417 153.136 cv
52.7266 153.136 52.167 152.612 52.167 151.968 cv
52.167 151.325 52.7266 150.802 53.417 150.802 cv
54.1074 150.802 54.667 151.325 54.667 151.968 cv
cp
f
70.167 152.136 mo
70.167 152.78 69.6074 153.302 68.917 153.302 cv
68.2266 153.302 67.667 152.78 67.667 152.136 cv
67.667 151.491 68.2266 150.968 68.917 150.968 cv
69.6074 150.968 70.167 151.491 70.167 152.136 cv
cp
f
85.167 152.001 mo
85.167 152.646 84.6074 153.167 83.917 153.167 cv
83.2266 153.167 82.667 152.646 82.667 152.001 cv
82.667 151.356 83.2266 150.835 83.917 150.835 cv
84.6074 150.835 85.167 151.356 85.167 152.001 cv
cp
f
101.167 152.083 mo
101.167 152.728 100.607 153.251 99.917 153.251 cv
99.2266 153.251 98.667 152.728 98.667 152.083 cv
98.667 151.44 99.2266 150.917 99.917 150.917 cv
100.607 150.917 101.167 151.44 101.167 152.083 cv
cp
f
117.416 152.083 mo
117.416 152.728 116.857 153.251 116.166 153.251 cv
115.477 153.251 114.916 152.728 114.916 152.083 cv
114.916 151.44 115.477 150.917 116.166 150.917 cv
116.857 150.917 117.416 151.44 117.416 152.083 cv
cp
f
133.5 152.083 mo
133.5 152.728 132.94 153.251 132.25 153.251 cv
131.56 153.251 131 152.728 131 152.083 cv
131 151.438 131.56 150.917 132.25 150.917 cv
132.94 150.917 133.5 151.438 133.5 152.083 cv
cp
f
148.834 152.083 mo
148.834 152.728 148.273 153.251 147.584 153.251 cv
146.893 153.251 146.334 152.728 146.334 152.083 cv
146.334 151.44 146.893 150.917 147.584 150.917 cv
148.273 150.917 148.834 151.44 148.834 152.083 cv
cp
f
164.334 152.001 mo
164.334 152.646 163.773 153.167 163.084 153.167 cv
162.393 153.167 161.834 152.646 161.834 152.001 cv
161.834 151.356 162.393 150.835 163.084 150.835 cv
163.773 150.835 164.334 151.356 164.334 152.001 cv
cp
f
179.834 152.001 mo
179.834 152.646 179.273 153.167 178.584 153.167 cv
177.893 153.167 177.334 152.646 177.334 152.001 cv
177.334 151.356 177.893 150.835 178.584 150.835 cv
179.273 150.835 179.834 151.356 179.834 152.001 cv
cp
f
196.084 151.917 mo
196.084 152.562 195.523 153.085 194.834 153.085 cv
194.143 153.085 193.584 152.562 193.584 151.917 cv
193.584 151.272 194.143 150.751 194.834 150.751 cv
195.523 150.751 196.084 151.272 196.084 151.917 cv
cp
f
212.25 152.001 mo
212.25 152.646 211.691 153.167 211 153.167 cv
210.311 153.167 209.75 152.646 209.75 152.001 cv
209.75 151.356 210.311 150.835 211 150.835 cv
211.691 150.835 212.25 151.356 212.25 152.001 cv
cp
f
227.418 152.001 mo
227.418 152.646 226.857 153.167 226.168 153.167 cv
225.477 153.167 224.918 152.646 224.918 152.001 cv
224.918 151.356 225.477 150.835 226.168 150.835 cv
226.857 150.835 227.418 151.356 227.418 152.001 cv
cp
f
242.834 151.917 mo
242.834 152.562 242.273 153.085 241.584 153.085 cv
240.893 153.085 240.334 152.562 240.334 151.917 cv
240.334 151.272 240.893 150.751 241.584 150.751 cv
242.273 150.751 242.834 151.272 242.834 151.917 cv
cp
f
54.667 165.968 mo
54.667 166.612 54.1074 167.136 53.417 167.136 cv
52.7266 167.136 52.167 166.612 52.167 165.968 cv
52.167 165.325 52.7266 164.802 53.417 164.802 cv
54.1074 164.802 54.667 165.325 54.667 165.968 cv
cp
f
70.167 166.136 mo
70.167 166.78 69.6074 167.302 68.917 167.302 cv
68.2266 167.302 67.667 166.78 67.667 166.136 cv
67.667 165.491 68.2266 164.968 68.917 164.968 cv
69.6074 164.968 70.167 165.491 70.167 166.136 cv
cp
f
85.167 166.001 mo
85.167 166.646 84.6074 167.167 83.917 167.167 cv
83.2266 167.167 82.667 166.646 82.667 166.001 cv
82.667 165.356 83.2266 164.835 83.917 164.835 cv
84.6074 164.835 85.167 165.356 85.167 166.001 cv
cp
f
101.167 166.083 mo
101.167 166.728 100.607 167.251 99.917 167.251 cv
99.2266 167.251 98.667 166.728 98.667 166.083 cv
98.667 165.44 99.2266 164.917 99.917 164.917 cv
100.607 164.917 101.167 165.44 101.167 166.083 cv
cp
f
117.416 166.083 mo
117.416 166.728 116.857 167.251 116.166 167.251 cv
115.477 167.251 114.916 166.728 114.916 166.083 cv
114.916 165.44 115.477 164.917 116.166 164.917 cv
116.857 164.917 117.416 165.44 117.416 166.083 cv
cp
f
133.5 166.083 mo
133.5 166.728 132.94 167.251 132.25 167.251 cv
131.56 167.251 131 166.728 131 166.083 cv
131 165.438 131.56 164.917 132.25 164.917 cv
132.94 164.917 133.5 165.438 133.5 166.083 cv
cp
.8 0 1 0 cmyk
f
148.834 166.083 mo
148.834 166.728 148.273 167.251 147.584 167.251 cv
146.893 167.251 146.334 166.728 146.334 166.083 cv
146.334 165.44 146.893 164.917 147.584 164.917 cv
148.273 164.917 148.834 165.44 148.834 166.083 cv
cp
f
164.334 166.001 mo
164.334 166.646 163.773 167.167 163.084 167.167 cv
162.393 167.167 161.834 166.646 161.834 166.001 cv
161.834 165.356 162.393 164.835 163.084 164.835 cv
163.773 164.835 164.334 165.356 164.334 166.001 cv
cp
f
179.834 166.001 mo
179.834 166.646 179.273 167.167 178.584 167.167 cv
177.893 167.167 177.334 166.646 177.334 166.001 cv
177.334 165.356 177.893 164.835 178.584 164.835 cv
179.273 164.835 179.834 165.356 179.834 166.001 cv
cp
0 1 1 0 cmyk
f
196.084 165.917 mo
196.084 166.562 195.523 167.085 194.834 167.085 cv
194.143 167.085 193.584 166.562 193.584 165.917 cv
193.584 165.272 194.143 164.751 194.834 164.751 cv
195.523 164.751 196.084 165.272 196.084 165.917 cv
cp
f
212.25 166.001 mo
212.25 166.646 211.691 167.167 211 167.167 cv
210.311 167.167 209.75 166.646 209.75 166.001 cv
209.75 165.356 210.311 164.835 211 164.835 cv
211.691 164.835 212.25 165.356 212.25 166.001 cv
cp
f
227.418 166.001 mo
227.418 166.646 226.857 167.167 226.168 167.167 cv
225.477 167.167 224.918 166.646 224.918 166.001 cv
224.918 165.356 225.477 164.835 226.168 164.835 cv
226.857 164.835 227.418 165.356 227.418 166.001 cv
cp
f
242.834 165.917 mo
242.834 166.562 242.273 167.085 241.584 167.085 cv
240.893 167.085 240.334 166.562 240.334 165.917 cv
240.334 165.272 240.893 164.751 241.584 164.751 cv
242.273 164.751 242.834 165.272 242.834 165.917 cv
cp
f
117.25 181.499 mo
117.25 182.144 116.69 182.667 116 182.667 cv
115.31 182.667 114.75 182.144 114.75 181.499 cv
114.75 180.856 115.31 180.333 116 180.333 cv
116.69 180.333 117.25 180.856 117.25 181.499 cv
cp
.8 0 1 0 cmyk
f
6.9585 19.8018 mo
6.9585 20.4463 6.39893 20.9688 5.7085 20.9688 cv
5.01807 20.9688 4.4585 20.4463 4.4585 19.8018 cv
4.4585 19.1582 5.01807 18.6348 5.7085 18.6348 cv
6.39893 18.6348 6.9585 19.1582 6.9585 19.8018 cv
cp
1 .5 0 0 cmyk
f
291.293 19.833 mo
291.293 20.4775 290.732 21 290.043 21 cv
289.352 21 288.793 20.4775 288.793 19.833 cv
288.793 19.1895 289.352 18.666 290.043 18.666 cv
290.732 18.666 291.293 19.1895 291.293 19.833 cv
cp
f
7.0835 35.1348 mo
7.0835 35.7793 6.52393 36.3018 5.8335 36.3018 cv
5.14307 36.3018 4.5835 35.7793 4.5835 35.1348 cv
4.5835 34.4912 5.14307 33.9678 5.8335 33.9678 cv
6.52393 33.9678 7.0835 34.4912 7.0835 35.1348 cv
cp
f
291.418 35.166 mo
291.418 35.8105 290.857 36.333 290.168 36.333 cv
289.477 36.333 288.918 35.8105 288.918 35.166 cv
288.918 34.5225 289.477 33.999 290.168 33.999 cv
290.857 33.999 291.418 34.5225 291.418 35.166 cv
cp
f
7.0835 49.0518 mo
7.0835 49.6963 6.52393 50.2188 5.8335 50.2188 cv
5.14307 50.2188 4.5835 49.6963 4.5835 49.0518 cv
4.5835 48.4082 5.14307 47.8848 5.8335 47.8848 cv
6.52393 47.8848 7.0835 48.4082 7.0835 49.0518 cv
cp
f
291.418 49.083 mo
291.418 49.7275 290.857 50.25 290.168 50.25 cv
289.477 50.25 288.918 49.7275 288.918 49.083 cv
288.918 48.4395 289.477 47.916 290.168 47.916 cv
290.857 47.916 291.418 48.4395 291.418 49.083 cv
cp
f
7.25 64.5518 mo
7.25 65.1963 6.69043 65.7188 6 65.7188 cv
5.30957 65.7188 4.75 65.1963 4.75 64.5518 cv
4.75 63.9082 5.30957 63.3848 6 63.3848 cv
6.69043 63.3848 7.25 63.9082 7.25 64.5518 cv
cp
f
291.584 64.583 mo
291.584 65.2275 291.023 65.75 290.334 65.75 cv
289.643 65.75 289.084 65.2275 289.084 64.583 cv
289.084 63.9395 289.643 63.416 290.334 63.416 cv
291.023 63.416 291.584 63.9395 291.584 64.583 cv
cp
f
7.0835 78.5518 mo
7.0835 79.1963 6.52393 79.7188 5.8335 79.7188 cv
5.14307 79.7188 4.5835 79.1963 4.5835 78.5518 cv
4.5835 77.9082 5.14307 77.3848 5.8335 77.3848 cv
6.52393 77.3848 7.0835 77.9082 7.0835 78.5518 cv
cp
f
275.5 78.666 mo
275.5 79.3105 274.941 79.833 274.25 79.833 cv
273.561 79.833 273 79.3105 273 78.666 cv
273 78.0215 273.561 77.5 274.25 77.5 cv
274.941 77.5 275.5 78.0215 275.5 78.666 cv
cp
f
291.418 78.583 mo
291.418 79.2275 290.857 79.75 290.168 79.75 cv
289.477 79.75 288.918 79.2275 288.918 78.583 cv
288.918 77.9395 289.477 77.416 290.168 77.416 cv
290.857 77.416 291.418 77.9395 291.418 78.583 cv
cp
f
7.0835 93.7188 mo
7.0835 94.3633 6.52393 94.8857 5.8335 94.8857 cv
5.14307 94.8857 4.5835 94.3633 4.5835 93.7188 cv
4.5835 93.0742 5.14307 92.5527 5.8335 92.5527 cv
6.52393 92.5527 7.0835 93.0742 7.0835 93.7188 cv
cp
f
22.8335 93.834 mo
22.8335 94.4785 22.2739 95 21.5835 95 cv
20.8931 95 20.3335 94.4785 20.3335 93.834 cv
20.3335 93.1895 20.8931 92.667 21.5835 92.667 cv
22.2739 92.667 22.8335 93.1895 22.8335 93.834 cv
cp
f
275.5 93.833 mo
275.5 94.4775 274.941 95 274.25 95 cv
273.561 95 273 94.4775 273 93.833 cv
273 93.1895 273.561 92.666 274.25 92.666 cv
274.941 92.666 275.5 93.1895 275.5 93.833 cv
cp
f
291.418 93.75 mo
291.418 94.3945 290.857 94.917 290.168 94.917 cv
289.477 94.917 288.918 94.3945 288.918 93.75 cv
288.918 93.1055 289.477 92.584 290.168 92.584 cv
290.857 92.584 291.418 93.1055 291.418 93.75 cv
cp
f
7.0835 107.719 mo
7.0835 108.363 6.52393 108.886 5.8335 108.886 cv
5.14307 108.886 4.5835 108.363 4.5835 107.719 cv
4.5835 107.074 5.14307 106.553 5.8335 106.553 cv
6.52393 106.553 7.0835 107.074 7.0835 107.719 cv
cp
f
22.8335 107.834 mo
22.8335 108.479 22.2739 109 21.5835 109 cv
20.8931 109 20.3335 108.479 20.3335 107.834 cv
20.3335 107.189 20.8931 106.667 21.5835 106.667 cv
22.2739 106.667 22.8335 107.189 22.8335 107.834 cv
cp
f
275.5 107.833 mo
275.5 108.478 274.941 109 274.25 109 cv
273.561 109 273 108.478 273 107.833 cv
273 107.189 273.561 106.666 274.25 106.666 cv
274.941 106.666 275.5 107.189 275.5 107.833 cv
cp
f
291.418 107.75 mo
291.418 108.395 290.857 108.917 290.168 108.917 cv
289.477 108.917 288.918 108.395 288.918 107.75 cv
288.918 107.105 289.477 106.584 290.168 106.584 cv
290.857 106.584 291.418 107.105 291.418 107.75 cv
cp
f
7.0835 123.052 mo
7.0835 123.696 6.52393 124.219 5.8335 124.219 cv
5.14307 124.219 4.5835 123.696 4.5835 123.052 cv
4.5835 122.407 5.14307 121.886 5.8335 121.886 cv
6.52393 121.886 7.0835 122.407 7.0835 123.052 cv
cp
f
22.8335 123.167 mo
22.8335 123.812 22.2739 124.333 21.5835 124.333 cv
20.8931 124.333 20.3335 123.812 20.3335 123.167 cv
20.3335 122.522 20.8931 122 21.5835 122 cv
22.2739 122 22.8335 122.522 22.8335 123.167 cv
cp
f
275.5 123.166 mo
275.5 123.811 274.941 124.333 274.25 124.333 cv
273.561 124.333 273 123.811 273 123.166 cv
273 122.522 273.561 121.999 274.25 121.999 cv
274.941 121.999 275.5 122.522 275.5 123.166 cv
cp
f
291.418 123.083 mo
291.418 123.728 290.857 124.25 290.168 124.25 cv
289.477 124.25 288.918 123.728 288.918 123.083 cv
288.918 122.438 289.477 121.917 290.168 121.917 cv
290.857 121.917 291.418 122.438 291.418 123.083 cv
cp
f
7.0835 136.552 mo
7.0835 137.196 6.52393 137.719 5.8335 137.719 cv
5.14307 137.719 4.5835 137.196 4.5835 136.552 cv
4.5835 135.907 5.14307 135.386 5.8335 135.386 cv
6.52393 135.386 7.0835 135.907 7.0835 136.552 cv
cp
f
22.8335 136.667 mo
22.8335 137.312 22.2739 137.833 21.5835 137.833 cv
20.8931 137.833 20.3335 137.312 20.3335 136.667 cv
20.3335 136.022 20.8931 135.5 21.5835 135.5 cv
22.2739 135.5 22.8335 136.022 22.8335 136.667 cv
cp
f
275.5 136.666 mo
275.5 137.311 274.941 137.833 274.25 137.833 cv
273.561 137.833 273 137.311 273 136.666 cv
273 136.022 273.561 135.499 274.25 135.499 cv
274.941 135.499 275.5 136.022 275.5 136.666 cv
cp
f
291.418 136.583 mo
291.418 137.228 290.857 137.75 290.168 137.75 cv
289.477 137.75 288.918 137.228 288.918 136.583 cv
288.918 135.938 289.477 135.417 290.168 135.417 cv
290.857 135.417 291.418 135.938 291.418 136.583 cv
cp
f
7.0835 151.886 mo
7.0835 152.53 6.52393 153.052 5.8335 153.052 cv
5.14307 153.052 4.5835 152.53 4.5835 151.886 cv
4.5835 151.241 5.14307 150.72 5.8335 150.72 cv
6.52393 150.72 7.0835 151.241 7.0835 151.886 cv
cp
f
22.8335 152.001 mo
22.8335 152.646 22.2739 153.167 21.5835 153.167 cv
20.8931 153.167 20.3335 152.646 20.3335 152.001 cv
20.3335 151.356 20.8931 150.833 21.5835 150.833 cv
22.2739 150.833 22.8335 151.356 22.8335 152.001 cv
cp
f
259.168 152.083 mo
259.168 152.728 258.607 153.251 257.918 153.251 cv
257.227 153.251 256.668 152.728 256.668 152.083 cv
256.668 151.44 257.227 150.917 257.918 150.917 cv
258.607 150.917 259.168 151.44 259.168 152.083 cv
cp
0 1 1 0 cmyk
f
275.5 151.999 mo
275.5 152.644 274.941 153.167 274.25 153.167 cv
273.561 153.167 273 152.644 273 151.999 cv
273 151.356 273.561 150.833 274.25 150.833 cv
274.941 150.833 275.5 151.356 275.5 151.999 cv
cp
1 .5 0 0 cmyk
f
291.418 151.917 mo
291.418 152.562 290.857 153.083 290.168 153.083 cv
289.477 153.083 288.918 152.562 288.918 151.917 cv
288.918 151.272 289.477 150.751 290.168 150.751 cv
290.857 150.751 291.418 151.272 291.418 151.917 cv
cp
f
7.0835 165.886 mo
7.0835 166.53 6.52393 167.052 5.8335 167.052 cv
5.14307 167.052 4.5835 166.53 4.5835 165.886 cv
4.5835 165.241 5.14307 164.72 5.8335 164.72 cv
6.52393 164.72 7.0835 165.241 7.0835 165.886 cv
cp
f
22.8335 166.001 mo
22.8335 166.646 22.2739 167.167 21.5835 167.167 cv
20.8931 167.167 20.3335 166.646 20.3335 166.001 cv
20.3335 165.356 20.8931 164.833 21.5835 164.833 cv
22.2739 164.833 22.8335 165.356 22.8335 166.001 cv
cp
f
38.8335 166.136 mo
38.8335 166.78 38.2739 167.302 37.5835 167.302 cv
36.8931 167.302 36.3335 166.78 36.3335 166.136 cv
36.3335 165.491 36.8931 164.968 37.5835 164.968 cv
38.2739 164.968 38.8335 165.491 38.8335 166.136 cv
cp
0 1 1 0 cmyk
f
259.168 166.083 mo
259.168 166.728 258.607 167.251 257.918 167.251 cv
257.227 167.251 256.668 166.728 256.668 166.083 cv
256.668 165.44 257.227 164.917 257.918 164.917 cv
258.607 164.917 259.168 165.44 259.168 166.083 cv
cp
f
275.5 165.999 mo
275.5 166.644 274.941 167.167 274.25 167.167 cv
273.561 167.167 273 166.644 273 165.999 cv
273 165.356 273.561 164.833 274.25 164.833 cv
274.941 164.833 275.5 165.356 275.5 165.999 cv
cp
1 .5 0 0 cmyk
f
291.418 165.917 mo
291.418 166.562 290.857 167.083 290.168 167.083 cv
289.477 167.083 288.918 166.562 288.918 165.917 cv
288.918 165.272 289.477 164.751 290.168 164.751 cv
290.857 164.751 291.418 165.272 291.418 165.917 cv
cp
f
6.91699 181.302 mo
6.91699 181.946 6.35742 182.468 5.66699 182.468 cv
4.97656 182.468 4.41699 181.946 4.41699 181.302 cv
4.41699 180.657 4.97656 180.136 5.66699 180.136 cv
6.35742 180.136 6.91699 180.657 6.91699 181.302 cv
cp
f
1 lw
6.91699 181.302 mo
6.91699 181.946 6.35742 182.468 5.66699 182.468 cv
4.97656 182.468 4.41699 181.946 4.41699 181.302 cv
4.41699 180.657 4.97656 180.136 5.66699 180.136 cv
6.35742 180.136 6.91699 180.657 6.91699 181.302 cv
cp
.8 0 1 0 cmyk
@
22.667 181.417 mo
22.667 182.062 22.1074 182.583 21.417 182.583 cv
20.7266 182.583 20.167 182.062 20.167 181.417 cv
20.167 180.772 20.7266 180.249 21.417 180.249 cv
22.1074 180.249 22.667 180.772 22.667 181.417 cv
cp
1 .5 0 0 cmyk
f
22.667 181.417 mo
22.667 182.062 22.1074 182.583 21.417 182.583 cv
20.7266 182.583 20.167 182.062 20.167 181.417 cv
20.167 180.772 20.7266 180.249 21.417 180.249 cv
22.1074 180.249 22.667 180.772 22.667 181.417 cv
cp
.8 0 1 0 cmyk
@
38.667 181.552 mo
38.667 182.196 38.1074 182.718 37.417 182.718 cv
36.7266 182.718 36.167 182.196 36.167 181.552 cv
36.167 180.907 36.7266 180.384 37.417 180.384 cv
38.1074 180.384 38.667 180.907 38.667 181.552 cv
cp
f
54.5005 181.384 mo
54.5005 182.028 53.9409 182.552 53.2505 182.552 cv
52.5601 182.552 52.0005 182.028 52.0005 181.384 cv
52.0005 180.741 52.5601 180.218 53.2505 180.218 cv
53.9409 180.218 54.5005 180.741 54.5005 181.384 cv
cp
0 1 1 0 cmyk
f
70 181.552 mo
70 182.196 69.4414 182.718 68.75 182.718 cv
68.0605 182.718 67.5 182.196 67.5 181.552 cv
67.5 180.907 68.0605 180.384 68.75 180.384 cv
69.4414 180.384 70 180.907 70 181.552 cv
cp
f
85 181.417 mo
85 182.062 84.4414 182.583 83.75 182.583 cv
83.0605 182.583 82.5 182.062 82.5 181.417 cv
82.5 180.772 83.0605 180.251 83.75 180.251 cv
84.4414 180.251 85 180.772 85 181.417 cv
cp
.8 0 1 0 cmyk
f
101 181.499 mo
101 182.144 100.441 182.667 99.75 182.667 cv
99.0605 182.667 98.5 182.144 98.5 181.499 cv
98.5 180.856 99.0605 180.333 99.75 180.333 cv
100.441 180.333 101 180.856 101 181.499 cv
cp
f
133.334 181.499 mo
133.334 182.144 132.773 182.667 132.084 182.667 cv
131.393 182.667 130.834 182.144 130.834 181.499 cv
130.834 180.854 131.393 180.333 132.084 180.333 cv
132.773 180.333 133.334 180.854 133.334 181.499 cv
cp
f
148.667 181.499 mo
148.667 182.144 148.107 182.667 147.417 182.667 cv
146.727 182.667 146.167 182.144 146.167 181.499 cv
146.167 180.856 146.727 180.333 147.417 180.333 cv
148.107 180.333 148.667 180.856 148.667 181.499 cv
cp
f
164.168 181.417 mo
164.168 182.062 163.607 182.583 162.918 182.583 cv
162.227 182.583 161.668 182.062 161.668 181.417 cv
161.668 180.772 162.227 180.251 162.918 180.251 cv
163.607 180.251 164.168 180.772 164.168 181.417 cv
cp
f
179.668 181.417 mo
179.668 182.062 179.107 182.583 178.418 182.583 cv
177.727 182.583 177.168 182.062 177.168 181.417 cv
177.168 180.772 177.727 180.251 178.418 180.251 cv
179.107 180.251 179.668 180.772 179.668 181.417 cv
cp
f
195.918 181.333 mo
195.918 181.978 195.357 182.501 194.668 182.501 cv
193.977 182.501 193.418 181.978 193.418 181.333 cv
193.418 180.688 193.977 180.167 194.668 180.167 cv
195.357 180.167 195.918 180.688 195.918 181.333 cv
cp
f
212.084 181.417 mo
212.084 182.062 211.523 182.583 210.834 182.583 cv
210.143 182.583 209.584 182.062 209.584 181.417 cv
209.584 180.772 210.143 180.251 210.834 180.251 cv
211.523 180.251 212.084 180.772 212.084 181.417 cv
cp
f
227.25 181.417 mo
227.25 182.062 226.691 182.583 226 182.583 cv
225.311 182.583 224.75 182.062 224.75 181.417 cv
224.75 180.772 225.311 180.251 226 180.251 cv
226.691 180.251 227.25 180.772 227.25 181.417 cv
cp
f
242.668 181.333 mo
242.668 181.978 242.107 182.501 241.418 182.501 cv
240.727 182.501 240.168 181.978 240.168 181.333 cv
240.168 180.688 240.727 180.167 241.418 180.167 cv
242.107 180.167 242.668 180.688 242.668 181.333 cv
cp
f
259 181.499 mo
259 182.144 258.441 182.667 257.75 182.667 cv
257.061 182.667 256.5 182.144 256.5 181.499 cv
256.5 180.856 257.061 180.333 257.75 180.333 cv
258.441 180.333 259 180.856 259 181.499 cv
cp
f
275.334 181.415 mo
275.334 182.06 274.773 182.583 274.084 182.583 cv
273.393 182.583 272.834 182.06 272.834 181.415 cv
272.834 180.772 273.393 180.249 274.084 180.249 cv
274.773 180.249 275.334 180.772 275.334 181.415 cv
cp
1 .5 0 0 cmyk
f
275.334 181.415 mo
275.334 182.06 274.773 182.583 274.084 182.583 cv
273.393 182.583 272.834 182.06 272.834 181.415 cv
272.834 180.772 273.393 180.249 274.084 180.249 cv
274.773 180.249 275.334 180.772 275.334 181.415 cv
cp
.8 0 1 0 cmyk
@
291.25 181.333 mo
291.25 181.978 290.691 182.499 290 182.499 cv
289.311 182.499 288.75 181.978 288.75 181.333 cv
288.75 180.688 289.311 180.167 290 180.167 cv
290.691 180.167 291.25 180.688 291.25 181.333 cv
cp
1 .5 0 0 cmyk
f
291.25 181.333 mo
291.25 181.978 290.691 182.499 290 182.499 cv
289.311 182.499 288.75 181.978 288.75 181.333 cv
288.75 180.688 289.311 180.167 290 180.167 cv
290.691 180.167 291.25 180.688 291.25 181.333 cv
cp
.8 0 1 0 cmyk
@
6.91699 195.636 mo
6.91699 196.28 6.35742 196.802 5.66699 196.802 cv
4.97656 196.802 4.41699 196.28 4.41699 195.636 cv
4.41699 194.991 4.97656 194.47 5.66699 194.47 cv
6.35742 194.47 6.91699 194.991 6.91699 195.636 cv
cp
1 .5 0 0 cmyk
f
6.91699 195.636 mo
6.91699 196.28 6.35742 196.802 5.66699 196.802 cv
4.97656 196.802 4.41699 196.28 4.41699 195.636 cv
4.41699 194.991 4.97656 194.47 5.66699 194.47 cv
6.35742 194.47 6.91699 194.991 6.91699 195.636 cv
cp
.8 0 1 0 cmyk
@
22.667 195.751 mo
22.667 196.396 22.1074 196.917 21.417 196.917 cv
20.7266 196.917 20.167 196.396 20.167 195.751 cv
20.167 195.106 20.7266 194.583 21.417 194.583 cv
22.1074 194.583 22.667 195.106 22.667 195.751 cv
cp
1 .5 0 0 cmyk
f
22.667 195.751 mo
22.667 196.396 22.1074 196.917 21.417 196.917 cv
20.7266 196.917 20.167 196.396 20.167 195.751 cv
20.167 195.106 20.7266 194.583 21.417 194.583 cv
22.1074 194.583 22.667 195.106 22.667 195.751 cv
cp
.8 0 1 0 cmyk
@
38.667 195.886 mo
38.667 196.53 38.1074 197.052 37.417 197.052 cv
36.7266 197.052 36.167 196.53 36.167 195.886 cv
36.167 195.241 36.7266 194.718 37.417 194.718 cv
38.1074 194.718 38.667 195.241 38.667 195.886 cv
cp
f
54.5005 195.718 mo
54.5005 196.362 53.9409 196.886 53.2505 196.886 cv
52.5601 196.886 52.0005 196.362 52.0005 195.718 cv
52.0005 195.075 52.5601 194.552 53.2505 194.552 cv
53.9409 194.552 54.5005 195.075 54.5005 195.718 cv
cp
f
70 195.886 mo
70 196.53 69.4414 197.052 68.75 197.052 cv
68.0605 197.052 67.5 196.53 67.5 195.886 cv
67.5 195.241 68.0605 194.718 68.75 194.718 cv
69.4414 194.718 70 195.241 70 195.886 cv
cp
f
85 195.751 mo
85 196.396 84.4414 196.917 83.75 196.917 cv
83.0605 196.917 82.5 196.396 82.5 195.751 cv
82.5 195.106 83.0605 194.585 83.75 194.585 cv
84.4414 194.585 85 195.106 85 195.751 cv
cp
f
101 195.833 mo
101 196.478 100.441 197.001 99.75 197.001 cv
99.0605 197.001 98.5 196.478 98.5 195.833 cv
98.5 195.19 99.0605 194.667 99.75 194.667 cv
100.441 194.667 101 195.19 101 195.833 cv
cp
f
117.25 195.833 mo
117.25 196.478 116.69 197.001 116 197.001 cv
115.31 197.001 114.75 196.478 114.75 195.833 cv
114.75 195.19 115.31 194.667 116 194.667 cv
116.69 194.667 117.25 195.19 117.25 195.833 cv
cp
f
133.334 195.833 mo
133.334 196.478 132.773 197.001 132.084 197.001 cv
131.393 197.001 130.834 196.478 130.834 195.833 cv
130.834 195.188 131.393 194.667 132.084 194.667 cv
132.773 194.667 133.334 195.188 133.334 195.833 cv
cp
f
148.667 195.833 mo
148.667 196.478 148.107 197.001 147.417 197.001 cv
146.727 197.001 146.167 196.478 146.167 195.833 cv
146.167 195.19 146.727 194.667 147.417 194.667 cv
148.107 194.667 148.667 195.19 148.667 195.833 cv
cp
f
164.168 195.751 mo
164.168 196.396 163.607 196.917 162.918 196.917 cv
162.227 196.917 161.668 196.396 161.668 195.751 cv
161.668 195.106 162.227 194.585 162.918 194.585 cv
163.607 194.585 164.168 195.106 164.168 195.751 cv
cp
f
179.668 195.751 mo
179.668 196.396 179.107 196.917 178.418 196.917 cv
177.727 196.917 177.168 196.396 177.168 195.751 cv
177.168 195.106 177.727 194.585 178.418 194.585 cv
179.107 194.585 179.668 195.106 179.668 195.751 cv
cp
f
195.918 195.667 mo
195.918 196.312 195.357 196.835 194.668 196.835 cv
193.977 196.835 193.418 196.312 193.418 195.667 cv
193.418 195.022 193.977 194.501 194.668 194.501 cv
195.357 194.501 195.918 195.022 195.918 195.667 cv
cp
f
212.084 195.751 mo
212.084 196.396 211.523 196.917 210.834 196.917 cv
210.143 196.917 209.584 196.396 209.584 195.751 cv
209.584 195.106 210.143 194.585 210.834 194.585 cv
211.523 194.585 212.084 195.106 212.084 195.751 cv
cp
f
227.25 195.751 mo
227.25 196.396 226.691 196.917 226 196.917 cv
225.311 196.917 224.75 196.396 224.75 195.751 cv
224.75 195.106 225.311 194.585 226 194.585 cv
226.691 194.585 227.25 195.106 227.25 195.751 cv
cp
f
242.668 195.667 mo
242.668 196.312 242.107 196.835 241.418 196.835 cv
240.727 196.835 240.168 196.312 240.168 195.667 cv
240.168 195.022 240.727 194.501 241.418 194.501 cv
242.107 194.501 242.668 195.022 242.668 195.667 cv
cp
f
259 195.833 mo
259 196.478 258.441 197.001 257.75 197.001 cv
257.061 197.001 256.5 196.478 256.5 195.833 cv
256.5 195.19 257.061 194.667 257.75 194.667 cv
258.441 194.667 259 195.19 259 195.833 cv
cp
f
275.334 195.749 mo
275.334 196.394 274.773 196.917 274.084 196.917 cv
273.393 196.917 272.834 196.394 272.834 195.749 cv
272.834 195.106 273.393 194.583 274.084 194.583 cv
274.773 194.583 275.334 195.106 275.334 195.749 cv
cp
1 .5 0 0 cmyk
f
275.334 195.749 mo
275.334 196.394 274.773 196.917 274.084 196.917 cv
273.393 196.917 272.834 196.394 272.834 195.749 cv
272.834 195.106 273.393 194.583 274.084 194.583 cv
274.773 194.583 275.334 195.106 275.334 195.749 cv
cp
.8 0 1 0 cmyk
@
291.25 195.667 mo
291.25 196.312 290.691 196.833 290 196.833 cv
289.311 196.833 288.75 196.312 288.75 195.667 cv
288.75 195.022 289.311 194.501 290 194.501 cv
290.691 194.501 291.25 195.022 291.25 195.667 cv
cp
1 .5 0 0 cmyk
f
291.25 195.667 mo
291.25 196.312 290.691 196.833 290 196.833 cv
289.311 196.833 288.75 196.312 288.75 195.667 cv
288.75 195.022 289.311 194.501 290 194.501 cv
290.691 194.501 291.25 195.022 291.25 195.667 cv
cp
.8 0 1 0 cmyk
@
7.16699 210.968 mo
7.16699 211.612 6.60742 212.136 5.91699 212.136 cv
5.22656 212.136 4.66699 211.612 4.66699 210.968 cv
4.66699 210.323 5.22656 209.802 5.91699 209.802 cv
6.60742 209.802 7.16699 210.323 7.16699 210.968 cv
cp
1 .5 0 0 cmyk
f
7.16699 210.968 mo
7.16699 211.612 6.60742 212.136 5.91699 212.136 cv
5.22656 212.136 4.66699 211.612 4.66699 210.968 cv
4.66699 210.323 5.22656 209.802 5.91699 209.802 cv
6.60742 209.802 7.16699 210.323 7.16699 210.968 cv
cp
.8 0 1 0 cmyk
@
22.917 211.083 mo
22.917 211.728 22.3574 212.249 21.667 212.249 cv
20.9766 212.249 20.417 211.728 20.417 211.083 cv
20.417 210.438 20.9766 209.917 21.667 209.917 cv
22.3574 209.917 22.917 210.438 22.917 211.083 cv
cp
1 .5 0 0 cmyk
f
22.917 211.083 mo
22.917 211.728 22.3574 212.249 21.667 212.249 cv
20.9766 212.249 20.417 211.728 20.417 211.083 cv
20.417 210.438 20.9766 209.917 21.667 209.917 cv
22.3574 209.917 22.917 210.438 22.917 211.083 cv
cp
.8 0 1 0 cmyk
@
38.917 211.218 mo
38.917 211.862 38.3574 212.384 37.667 212.384 cv
36.9766 212.384 36.417 211.862 36.417 211.218 cv
36.417 210.573 36.9766 210.052 37.667 210.052 cv
38.3574 210.052 38.917 210.573 38.917 211.218 cv
cp
f
54.7505 211.052 mo
54.7505 211.696 54.1909 212.218 53.5005 212.218 cv
52.8101 212.218 52.2505 211.696 52.2505 211.052 cv
52.2505 210.407 52.8101 209.884 53.5005 209.884 cv
54.1909 209.884 54.7505 210.407 54.7505 211.052 cv
cp
f
70.25 211.218 mo
70.25 211.862 69.6914 212.384 69 212.384 cv
68.3105 212.384 67.75 211.862 67.75 211.218 cv
67.75 210.573 68.3105 210.052 69 210.052 cv
69.6914 210.052 70.25 210.573 70.25 211.218 cv
cp
f
85.25 211.083 mo
85.25 211.728 84.6914 212.251 84 212.251 cv
83.3105 212.251 82.75 211.728 82.75 211.083 cv
82.75 210.438 83.3105 209.917 84 209.917 cv
84.6914 209.917 85.25 210.438 85.25 211.083 cv
cp
f
101.25 211.167 mo
101.25 211.812 100.691 212.333 100 212.333 cv
99.3105 212.333 98.75 211.812 98.75 211.167 cv
98.75 210.522 99.3105 209.999 100 209.999 cv
100.691 209.999 101.25 210.522 101.25 211.167 cv
cp
f
117.5 211.167 mo
117.5 211.812 116.94 212.333 116.25 212.333 cv
115.56 212.333 115 211.812 115 211.167 cv
115 210.522 115.56 209.999 116.25 209.999 cv
116.94 209.999 117.5 210.522 117.5 211.167 cv
cp
f
133.584 211.165 mo
133.584 211.81 133.023 212.333 132.334 212.333 cv
131.643 212.333 131.084 211.81 131.084 211.165 cv
131.084 210.522 131.643 209.999 132.334 209.999 cv
133.023 209.999 133.584 210.522 133.584 211.165 cv
cp
f
148.917 211.167 mo
148.917 211.812 148.357 212.333 147.667 212.333 cv
146.977 212.333 146.417 211.812 146.417 211.167 cv
146.417 210.522 146.977 209.999 147.667 209.999 cv
148.357 209.999 148.917 210.522 148.917 211.167 cv
cp
f
164.418 211.083 mo
164.418 211.728 163.857 212.251 163.168 212.251 cv
162.477 212.251 161.918 211.728 161.918 211.083 cv
161.918 210.438 162.477 209.917 163.168 209.917 cv
163.857 209.917 164.418 210.438 164.418 211.083 cv
cp
f
179.918 211.083 mo
179.918 211.728 179.357 212.251 178.668 212.251 cv
177.977 212.251 177.418 211.728 177.418 211.083 cv
177.418 210.438 177.977 209.917 178.668 209.917 cv
179.357 209.917 179.918 210.438 179.918 211.083 cv
cp
f
196.168 210.999 mo
196.168 211.644 195.607 212.167 194.918 212.167 cv
194.227 212.167 193.668 211.644 193.668 210.999 cv
193.668 210.356 194.227 209.833 194.918 209.833 cv
195.607 209.833 196.168 210.356 196.168 210.999 cv
cp
f
212.334 211.083 mo
212.334 211.728 211.773 212.251 211.084 212.251 cv
210.393 212.251 209.834 211.728 209.834 211.083 cv
209.834 210.438 210.393 209.917 211.084 209.917 cv
211.773 209.917 212.334 210.438 212.334 211.083 cv
cp
f
227.5 211.083 mo
227.5 211.728 226.941 212.251 226.25 212.251 cv
225.561 212.251 225 211.728 225 211.083 cv
225 210.438 225.561 209.917 226.25 209.917 cv
226.941 209.917 227.5 210.438 227.5 211.083 cv
cp
f
242.918 210.999 mo
242.918 211.644 242.357 212.167 241.668 212.167 cv
240.977 212.167 240.418 211.644 240.418 210.999 cv
240.418 210.356 240.977 209.833 241.668 209.833 cv
242.357 209.833 242.918 210.356 242.918 210.999 cv
cp
f
259.25 211.167 mo
259.25 211.812 258.691 212.333 258 212.333 cv
257.311 212.333 256.75 211.812 256.75 211.167 cv
256.75 210.522 257.311 209.999 258 209.999 cv
258.691 209.999 259.25 210.522 259.25 211.167 cv
cp
f
275.584 211.083 mo
275.584 211.728 275.023 212.249 274.334 212.249 cv
273.643 212.249 273.084 211.728 273.084 211.083 cv
273.084 210.438 273.643 209.915 274.334 209.915 cv
275.023 209.915 275.584 210.438 275.584 211.083 cv
cp
1 .5 0 0 cmyk
f
275.584 211.083 mo
275.584 211.728 275.023 212.249 274.334 212.249 cv
273.643 212.249 273.084 211.728 273.084 211.083 cv
273.084 210.438 273.643 209.915 274.334 209.915 cv
275.023 209.915 275.584 210.438 275.584 211.083 cv
cp
.8 0 1 0 cmyk
@
291.5 210.999 mo
291.5 211.644 290.941 212.167 290.25 212.167 cv
289.561 212.167 289 211.644 289 210.999 cv
289 210.354 289.561 209.833 290.25 209.833 cv
290.941 209.833 291.5 210.354 291.5 210.999 cv
cp
1 .5 0 0 cmyk
f
291.5 210.999 mo
291.5 211.644 290.941 212.167 290.25 212.167 cv
289.561 212.167 289 211.644 289 210.999 cv
289 210.354 289.561 209.833 290.25 209.833 cv
290.941 209.833 291.5 210.354 291.5 210.999 cv
cp
.8 0 1 0 cmyk
@
3 lw
4 219.667 mo
292.668 219.667 li
0 0 0 1 cmyk
@
293 220.999 mo
1.5 220.999 li
1.5 1.5 li
293 1.5 li
293 220.999 li
cp
.5 .9 0 0 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ArialMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 47 /slash put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 115 /s put
def
/FontBBox {-665 -325 2000 1006} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
9 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/space <1C60D8A8C9B854D00D> |-
/slash <1C60D8A8C9B854D0D18501A7E07A7DB7C8496D0849EBF5F0BA> |-
/i <1C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B17
1C8A80AB> |-
/l <1C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |-
/n <1C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285C
0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDAD
E9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A520
3A8015DD09B7CE> |-
/o <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A98
7875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C
7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79
F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F
518C54BB58C51D6FB6D0C8> |-
/p <1C60D8A8C9B7EF322B3B0CFC8FED720BC90E20B208D27DC4B8F11F10B964
70F8B4F5FABEC7F7010781F5077B417FE44279776F2304ACD6E0EA12F436330D
C4B79C907B9D28468D10FF9256A7D2CA504E4498D719ACD86FCA89B33C61F556
CF1168C3F262A781155D5EBF0C47D71C584AB93037B47B18D39FE408A49672C1
E63F9E8368D19E113FC95C59A9FA4650E46F6399F2FF256844E27568BA34B9> |-
/s <1C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B5F
80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214E2
BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEABD9
6538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046E1
B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB32
87CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B843
5558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F41
72D53C8FCAF4D28F2B78D3A4BF03> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ZVVWYX+ArialMT /ArialMT findfont ct_VMDictPut
/ZVVWYX+ArialMT*1 
[32{/.notdef}rp /space 14{/.notdef}rp /slash 57{/.notdef}rp /i 2{/.notdef}rp /l 
/.notdef /n /o /p 2{/.notdef}rp /s 140{/.notdef}rp]
ZVVWYX+ArialMT nf
ZVVWYX+ArialMT*1 [16 0 0 -16 0 0 ]msf
175.405 168.279 mo
(slip / no slip)
[8 3.55469 3.55469 8.89844 4.44531 4.44531 4.44531 8.89844 8.89844 4.44531 8 3.55469 
3.55469 0 ]xsh
30.9019 91.1123 mo
(no slip)
[8.89844 8.89844 4.44531 8 3.55469 3.55469 0 ]xsh
215.569 91.4463 mo
(no slip)
[8.89844 8.89844 4.44531 8 3.55469 3.55469 0 ]xsh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/ZVVWYX+ArialMT*1 uf
/ZVVWYX+ArialMT uf
/ArialMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 13.0
%%AI8_CreatorVersion: 13.0.2
%%For: (Shanon McIntyre) ()
%%Title: (diagram_current.eps)
%%CreationDate: 5/4/2009 8:54 PM
%AI9_DataStream
%Gb",KCO=N"e+!7Ff>W4ND(3gE7q\rsV72MM2F'k9L!l8:[R+4=gQcV(c`_h2G'?t;=gFmri&DR;fH0EgAp.d0B(h<*2d2EaGVC,P
%BheT<C[A=Qf^f0^%P5NgrG/%\\FJDEBfsQR@LWj*q$l5%*%5S\>gmkhK%FDS$a<ZEdU/Nbj8!+=l,U,5HSV$8Zb&^(6Sp\B7;q*U
%AA!jkUWIkX22_6KofBe.GRe;SaY4Vr3nBoC/Z."E0HMd1BKl&ppP,HQ2bD;i\Ig_n%^bTSXi569Ge?"#M3GQ+laRr&]]KJ_RfOjd
%'RlA;LZAAI0o->@Vg._#*1kLOPMe=uEYQj_^]s#W6G2$5?N-Tr#[mJ>p$-8hAiQ8-d<mnks*@m-IiP(V8'sH]I.RJJUF1;Pq*Kdd
%+Mi$O$&h$f%Y3N@@lU&k\?=M(d\82&j*/E9rE\Hq3#]_lj@h@t*tA5\.('pKCs/1'Vi+EB4<"fnQ%EA:i6.n;+<Ei5[!HX)+jhWd
%=m9j-i]'Qe`,h$(a_67thDLZlc[b`pd>']D4Mspc9]P[5j>f_Pc`uhkj#EW=qbG'$9TULWKOnAJiHt'FnXfZo#X[4J`?CO`*ui+p
%W"Ue4LG2b)P2Vnhq!MH*)GV[cnNeoMUgk7o"r"a20b(#YK_-L/"qJl?nX,+4a_F%4>;FICUEeI4nJOmP3#Vi'/Xlbg%#-1<5T[q9
%BH@16%%%8eoU!u%0]rLL_EZ)WhnG/d_[q=,gB7Za3VXPc3Y">r*:^Dfj4-RUhoB3?O5G=,MtoOPoDN!V)@]%b'8BU9KR^X\(h0a(
%`+&KJIq,a,)iM,Y=LHu)-g`gXl1OO[YK'??I_Z#uSu<or(+9QL7%`Hf<i+u>"4coNM]lC$)iGkF7'1]g7,`&8K1+[::-5^J<(=Ig
%2h",gn2E6OQmJ1jU@:+>*BtY`l,$a1:B^r)$q\@o=Jj\;(l].u?>s*;;QpLXMlMAT6%D4-?mkg6aO<s_&b-Bi+cZ79Rh>fP-l:4j
%^u5MLL,@=L$eC-V80e,RDb-O_"8ja57hG[>@RqaC(5"'S75.eNJ:3S3E9'TRB]oSVK(iA@0TUH'W##SUj99:mB@/UHRj^W'YRD.8
%15Z5*l@O'H(hpqG=A6dsdO=l7.cYFuK*4M`P&etr_*68%OE;+J&fQopNk>o@+V^^t1q&#5!^FMJdBd4%8"Kp>kS*/i1$W+&0,bDJ
%`BT3l:fJUk@dF8N6k_`_:Pa%krLsd$-gaY$N0omqJWP!%JQ*8-oi.ANo@))6?DjQL3"\5toopbU/tks%MhXZ#b;/lXI$^_YP5f?&
%4A+MM5F<Je^[th0KBf$U5j>oU(Bi`EqC_b%-GD:5H=ueUZRHrln)@]T-,-;GiZD.gF9F"?(]V'PnND::s%N)]g3FZ*r%5oiI&CoB
%*GMn:[L3cQ<p>Z6TA<9)43ha>UA6!E<Ui4V4^U'K<Ae!OWYYU+3`aVn\K0#dC`p.i^F^_"dge#2#JPHW6Ld&A,Ws.3%m'8A]OUX*
%Wn((u5^j3^G=90LWnU]['aYH%'ePI#&N!t5-5sm1i5(J8mnMC"_97G&&:`D.KV8&_^4s9#ILb:58=ul+VQ,7>l<72rY%gab\%.i)
%<#%SQ2s>2^HpJ&;+:$UP+;$HdD$T8n"E#(!T3fS?0BhmP6KX0&oQU/*mumBLd7dR&'j$[-kDE<CRe@f>i.QK>'Ho`<Pn'R^S:8sA
%En9p%8+!3Uo"Oa$<528[[.d0m`A$RA6KXOo!XBPY<&'3&)FVlf%,:9`&DFuk7IRdepmrT%Z76#XoA_Ghg)s!SZ@eO%0GdnQN`dZ:
%8eXNs'4a,"6n.<lWe"39PuUPZ>?Y$B9i\?_5t;b)XI`9Z3J_PIlq)!Q"[;kR5m0ASn0@SBC'KiD#\oeJN'@>*$74K%kIIUY<#Ji(
%a[`G6.MBOtZ4tTH0<U2)`?5A%5(K.7h4VoA>>iJ`.[3rcg5;A[qh9,u<\I@jF:\QB5>*.(@9/#Z<2P7j'rd:tYZ7`=jn$0P<V<.7
%\u@\U9n_g.`407fo;jGZ\GT,?f*_ecG#`D;Zl^VB7P?iZqS\ar-GnKH`=la1MPBPgPBlV>-cYda<%jXVq9TjX"oj==&'H<>TUf!<
%2!)Zs5f&^G_qn>Xjs]P-C%g*,7UN3RohsBiXU:V"W@DJn[&Sg4P8M;]EbLo5PKo'@/PIH..?oGj`gJ*D)UGZ%)HUCc4>F1`,)eM+
%OY<f)Nk6[Qk/Vso<>p)Z)@G(prN,L+6j^\-`VBRHW;t7GY>I/aI;MtJ?"=?NGK;QuQ)-+5DGt\'c`)k$'t7<BMQ:>'[XQb+@<5Fi
%2O+e^YsCgPp$,;2l$'G?<N6hI(QCMW1l*0/I+cGoJX5`[^cU.9U#*XTiRUJu"SZfp,P3QY<@hj[E`KB9TH,,B8n#7f;cSI%WW@5k
%Wg?^[]phcsNOj>OKsj5aM1o^4;4g2rVK9J]GkQ1g7b'.gQ)\oFe<q.P?'KnBOclf;h#ng?@:5Y+\n>$FC++4%rU:B.>/XO=GKX=S
%3rR7;lhRn\n.M@:V3@p5M^&)&'JUB>0C%#$@:7'10jcdL):;FrA*VlX!^mpU9H:N*G-a$6VOp4aX=dU4*VW/<@o9al%f)!<;8mE\
%o-ee2"#o2jV6LtD*VST)^,-+$?e&<i(I`JDCoU\\0c!1r2)6OJn8a5bUj]9Y[U`i@Is<eI/Rg8/XaK8A7Dr<(Q+Fi8M&;-bRM<1s
%`2Ir?<eg<_&RuEc4Q3`WlLM`Ur=hH96!VQ<A1'jCMc-'FU_.9H-!(;.h+7RYe-^2t80a*:%2ZOZ>#R<*W`iT%_=SjLW+/].Ul2r&
%Bh2OjMb!RoS;J/;FlSD_ZR'uM7efNZa[D(g;iB[la(a1m:P\8=O]>q!Hg0^"/sFR?l\)$g?h5.TL_pLI`cP8BeNMhLVUN(jHM@eS
%NduB5.OCfCE4JLcrQE,70LT3m_6JcE]CL:s1$K&3Z?]Ceri_4siAi`JN?VfU*j1L\2tUergnF^f9!ZHEXpRKgWcCdL`.E&:J3:Hq
%0ms)Ha,8u0,55qn"?k$acNZkT%mpW*"bh=-Wf,(OMY8MND:!W,TNLF,o"hU8-;B=3ids,s%*=_@he#Ta8AdsrH_U8+'O!6YMKY>2
%X[dLb%ptlH>>\C._Msfs$<9OR8MT1IAn;1sF*QP2q)(Gb<_RYn8mOa1&I"'1H,a@)P#tSs_rc!H7rI:c=:m8A<NjQ,JrWs]ZVn'&
%+sae-=;#&HEm>L"/4FetoqHtTD)5l/]s^O1TZG`\f#<O.8u-)l<sF&kqNj"'F]GoLpSCusgm#t2a6Hd3jBXR,(T9sV03#>9Dki&l
%UZYIa7]+(j3i+<GR@W$J$p8r><OL=HIT"[qL)O;m^FDl\?Bp!U5'CoUPm_G;/j*rb\T#:$-9pgQE'uldr%(NTB;/'_S*fDH>?99*
%X/^i=EoBPpL(HkI)O2@Y;$O-,P/O\i6t\di4$Q0bX=D9(:=X`V_5GA[WH%mr@^2cC5SRA5l>lRGBX'*f<2kr/d:/NY=lc+&aPiA[
%I4?j%b,!LtBX'*f>Wm%;58=C*;NiC/VuIGAU+iN.P$/GLVZ$a2DO09F@;XSLI+bN']VePf<aeuTN*1/!85l=U\OiPbYA!Nl*\,S`
%<KqOQ56mTQ;)'u8(>17lYYcHQlG6$=Q4]G;16N"[q%UA'=tJ,*j]Pl*f1gN)=\8Wc?))PSDK<HcKls?r--H*C26,*7?a)"4/kT&F
%.:s!2K.9iV=LZ_*/D[hU3FAhep)]Op[/$_:@W_2BUWV>a;]t.'o5<,+?\HE6\KthaT/(3TRCl7f:)?uC@[Wjg>PYpkp]9i<C#4in
%+,?Q6-$Mo?Qsu]%FC18Ob?+l*e#ohl(0Aa-gkr0+nl<XOin,@sf>J0.H4sfb;e>oU`Ubj=Xk70H_?sjZ0ek.*<TJ"s`f/(fD:uCt
%[4[kAqp\p"$q9TY@a)>%0Wt."='EK@An@cS(t%'YR'G/UdA&X+]eirk1l5eMiVJk2Zt_j9PZc:9W`moQWg\-k-l\2t7/(V#CnBXm
%9\ue8fXCpGWbgL[WiUI:<8KJ^:8I3FVj\;R!eG2?r3*Qt-Cs$D:JqPfA`;&taZOU1^5'7rfBr:*Wo[/(l!c:<;:iR^OEb2OY@G/Z
%3n@ip#$&erbs:;6OY:QL(*h<IKgCp[.G]3qmAOPF0=W$&Y5\$gXp(r=I/4SIIlgQK0\l!R;%$'F;pl]FK"u1"bQqQ^^l3c,mo]co
%M>Va0aKH,HbhM>iL,OEn%[.WV:?V@VE>9Gn?C?denoH4bl,m,uKp%Hei&<5ZL=>3$;PY6q6Q';jA_F46WXD9n,.6crL1X%@18X'd
%kc='$;@?F*#ggSjh!4epZ-S<2Zs\54[JJ`P;n=ZaD':J$P`?ti.r:&)8)Fr;)*u;[M,>!V"AeA:KQ7iF@3ec$etf>-_[Fto8E1%6
%O(4:Cq[6;mggB]CWL41V;V,rQU"9+(Wikr13iR$rj-3$dqKjWL"s6$,%o6+;rLLmXP,go`mWEA/R=g]A;gU=#mTloPguJm6f06bE
%?8SBZ_85*SX]?50?M;:&2kp_$$Is3S<#%'4Tj!H%c@G.QQVDTXFGX\O96PXP[&2:c:"e&^X_1;Z';1X$Jn.9)XFo`-n\T-"fW-s+
%C;FA0!=AJF\]UGd?64NCN5M%#*:tW"Pc0.c<a&t?*IiYVffJ>r-fABb<3PP-r%,mZA'jodg0!Q-r4(PE[W.^pX0HJE\7SRgPeE!Y
%7Id+ZIerVicRkdUONY<7lKMLtEgsA@mjaqrH.nu:`<t?mVc'Od.?[uVaD@AM$5Ti0>?6i=!gOo2;=JWY^Z20Icek`TV65DE9c[3'
%b*5e0dgeR+l'GF.&#8F?X(Hg6crR(pFYO[`MFaa`C,FNs:X*nFMj@DY=B2H3jA?^(UEn1h]kj[erjEYfDb2hFZ]b6nGUlc>BlthF
%P-(aA'j&pLA++Q@L)K(:&NGH_'4WQS8STM>X`P0.e;LO/m&>QZ<*f3(9<2MbD;^_\/gHks'sD20)G+LF5J%XYloN,Q/Se_-H@\hX
%<DBN@q+%KP(K8.Vng`s>hbs,ng6\eQWbSdc.Vk6+(NC!Dq9DZ2g/OB,b#K*b@F`k,juh4HM6Z-PhKuH19)81[Q;e_NgD*[5s'/bG
%WEW@OCqZi0[^j&1*]&*C1!='I@U-3rjBWI([kMINQJgiY>bJ)bIT9D??j-$L+o3lFGo'I-`q3o-^5]/,cG.17.C_J)M0I9t-l_$R
%;jr-1hX`r8c`)4neN>tgS<&$I?3S2,S>UebeAuPI!P;;+k8GChW)mOdeKoe&VTjTOpl<1Hr-4?J;>ig]s-;HQ6;Vq[mRDC_^e<8>
%a7eR6YJnC0f#.`.LWO'`GpArY?hgt&GeTPOqrH;8:RlD(cc'E9c\CI=UY#kNrAR=?0#meDp:H5n@T\YiPrOV4nc%cdOpoA43]I_U
%GVg=6B1(m3Ih9;='.<>[T'uE/8Uk`/3f<skT>o"NCpKEsj2(^l5>!9_rATYnLpoO):ZqUN\q]<mU2:#uHi.q?Huh2I?1O`^76EV6
%!-GpsNsF)!Cd1,HDtDq$&F[r/BFpe+a]iFpQKqLLT#CMYaa=fKAjaK,_YogR@@R>:1LknmNV^F#hqd`SOsD+C5N$[Hq^9MHD*1"=
%P&$[l523"+qu+Y/K5<=]SAsa0nSeoe"+)-b5O:n8nRT@`p0i7_O7s<:D^&.#m%6dr6jqWSK=!i`/S7h#1#&>8T?J(d[,E:`T:[EL
%XM..%`B<!A?PjQ"p,Qs9L[jQ0p#El-1]keOT8_5;JC&QulRt^I,KB63T8P+K3r&4r)P)aL,]I?tTtT@Enc2BA7?:/[1n0*39gsID
%$.s0>pY-=7r@Y:fhrU,sQ*+0$X6Mh^V&kLH*bo7-W\WE+g&>L<+Z/dY<-TT:4OGW@&NDpNp!+AKq/ACkYlA5l6CE'f"?dE`T4sR_
%WELso_rJ'p!n%]/k9.#WUY1)A3f]#f8?3bfXs;If`7YaAqgDpD/?6abof0&^9uX-h:m;lU;F@RETdg]X43"#4M'tP2S0hEnM(GCd
%%>O>+#S>3^LoLj1disFj6IklS*mZi&4qRMC-cb#Z4nQDU?Q[T0kODj<0aJDI3Nouel&PWS]M8(%nQK7-RU0S%C7eo2oM"&OH2R7k
%h?)=]Wc&k)Mtm(b<&F$"`a;)OLVVn0f:'`Yrf"NS*%g+-K4M9T4rg1iY'k>k3LH>T`aL\g1Kl$-&@:,GKScmeVuk=uiB%*!U>bb<
%RO4(ZS=`JE_qDS8:ku!q<LPsD5a6fG-RXD^rAiAnJFq=<@Q9FL1j+WKG:)>t@mP+?R%5,8PK??=.1=3eMYLd=(Nh?)-`V,_#Oq6R
%2VsI%63QD=SdkQcm2%ld*L5-VdVWn:-#qWOrsJ4mpg-Obqg?nN0[;j[>qFU;*<"e\SIW[BW598sjo"1eMK_0%7q^3`_-""@Q)oRe
%-U+(HkF-4+BQsA,*_iNc!%8+H+3%)R19I?UUM(Vn#(N<"k*G6c!c+./<ZID`l_3"]/`Y^EC7FH+Xg)3l6%Td&G^^I`+3,?5!AQ.h
%U&YHGgGW4;mSA:[m1XG7_,'I+H`^V\(\UrakkRBFkOtF;h6VE>\(C"j45G(heSTKI0'`^I^[$$uY1'ej<nE"lZeO_dg7;9Bfa0b,
%g*`Gaj*/.rgMo8ta6K&Z?G"t[[+jtK]@d\KX<"\H[b#]W:>9YjD6qc.F^(D;]@CXR>@EGtJsP<b>&MMtfe'79?MgPOCNc2<B"Q`2
%2Oe/oX5EQ<DUW=R9aft7?J#]K@68:Z9aDD8(kdA%Kl6+-G%cRVl`i).YVp:%-4:^La9(Ma5t0oiRp!rDHMi;$)hRBf&-`Qh<o`1J
%hujUM"fC2K]7.e=q^oSILHb;3htK:koc;r`/K\s(H=#4hG\sYG28.@H?JtXNkILNA7E[LCT%eBLDVK$=9fL!Z0%Y;1f6&+cFtM<f
%H;<)V3,PST1nDto*1an8*RA^Ga0?Y(m-UD#[6&QdDV7`G[$_re5$lZN419!1[V>E9Y19f2<m,5]TuF+KnhDK"*6YcA$ZIq23)(5$
%ZXj3e9H`*^9gHsV`_Co?l$Xsjgj%XI\9Qs(m[48A5oAH'rE9<2^o+ETfCZTTi6t^S'loJQMSa-F$*T?*)ru^^b68_O(koK==#!&p
%asbI^c7%$fdO<TnegT/ngA'[X]3N9?aKL$/"hhm/*Q9$&*^r9N@ZQ,%U@3-m7g2-m^mE.XTuWFlbAU-mo2c=LTuC"6PlkA9LZ6)t
%.#H7b"]`P'lJccJZ+8THbN-gpisO;t8d)>5T5\@VF+n@KV.t%i&hh73JUI:ajiNi>?]KNepjs8uY);Jee6f>LG]E6RXtp_j#3:j(
%d81>f.:<S6WX7t@#4f@,(Rh"?2Q35UC?U:21/Q.@W+VSUTc;uD$k&<O!@@G)_0s$t+'6@LT]Brt=1?juJXh;mYe^m\?k>Tt^bd`!
%&P[^kD&X>HD=olK(?"W]>tCaJ%Y,ba63qsQEDCY,Hb`/0W5\Su!5FZf5+]KA=3*n1`>RH^&VQ:"0u]9_q+/+?)(pk2b!<aR!bJ.K
%,mB($_ds*aM+\RU(J5Q;)bM,C+%d\K,>'7SB*cqDOt'QaL09=/=2'!&D_<Lcs)1KZ[.l?5ID__e%d:)$H5qH!LS36Ni("%5Z"N$<
%`&;;D$Wb%JCV[_81r262#^:g-So')8Yebdu?q:-1T7B@=?s/q+@G8Mn/l2PmKC,q[#.\-"I'?0NXA]e6'Zs2VGgg_.Y[9<@0c00o
%Qpe/p$nPZ4"lT\hlYq::GpZjO$e>jrJR.oa4u0@+@)g#l[UC_uS4b22;]Def2WTFK%D^OMYddCII30.;FJd6,BnBUpKY^!eHo8kZ
%f-5k?%`*n/E5e>#IA?3Shou3l$=QDD-@t<WSO'2OXAQ2(I\Ur)`>\un`V$:L`OsC7dcA9*if4*/>l+YW*lT0(+%79*+2pJ*>Lcn^
%#tPN:-jcOR-Js\kF+llEE02`F'W;cibYg;bEJlVS&6'6@'##/P.LN0_.LW6a.L`9b.LiBe.S`oIprk<[LFZ2fbF_TTM]2_QWtHkF
%cOG_-Vi[C:Q;X^m2bP:(@-1.c>bk[92ebUtHuAA*RZX>,Wcbhf'^A-pa&S-MSBDAE:c_nLFN(;^HD#5QI&)"_FAgpc6?[7oc7N4?
%M_\=#>l;n703Vbj_.\OV*C`[QCpC4a_B+n0(,hS^ZF%g%38*GSZH]t'#5]sRZYlChKdQ\eZ-^:b(:V^p)bj@:fk>8s4#m[SBV08u
%2>^(u=kMlFYfkHE43Aa'BoRfm-7]KE7#!]bq<H+hn:AYBiMOiX-IE.qMsm=u0;$!Ar^*p+?LY_a@<8-X(EXDL"e8B*YA/,5BlR!a
%EaGKUTZEeQpfqc7FAR4T7<r[`Kjqt(W@,>A5"9BA;CGKm<Zr82`ik?q\U^B0\H3L^!!aQ7)<H_PSQt5:_S>)^LS>T*aU,HWqHTUO
%S%'Tp>i&.'N`JUn9f\J=d+:,nX6V8Ep]WL_'YSW9[FD/;c)NV%?rEK:U%Y<%/WHfC?HL!GM'XD48=*Bp>&J*N]\)5MAB<rXJBsl0
%T2-I[3&otGh^@+=1N8hQ?X\K(#3p`.@:=u.D<0\lF+\<!61/a!guTSBRiCOVfYl'`"NJ].^eM5_]a0t>KE?\6Jq"r^9o'1Ld^UsY
%j^(MKq#B,JBsFO_nRh%36ZB4u]XW"dK&^p58%`+"EjV1(HW`up1OViuC<`eE:b_$J"J5H_:(U!O@3[I#57KkNT$(fSiQ4SbfJ#U^
%%0dr1KmJ8Q>)"5)n^R4?heq?^i_4I+oFPep2D%8<%2utF1(EKba1NbW@sdjlDh&&&L6FuNAKbeW4gu>;/6p*`)m18bR7>?ALc4<9
%YVL%Q$V6VXL],EBC.@toiDVSUV5KW1fYoI+[I_9cUo.6@T@PBnreBpr7D`i8n>c-1DUR96HBfhj9CBI[U7GSsF1J$9?.Nn[[G,9[
%G2?]AXPIdAjI]X5fr_mSem1MWFk9\299T3/adIW(9m#>Ne]#sGs$T3Amj&$;7//Y6?)=$$j\Eq0`iUVdVmCVc*8qCoGXbmc0f)Ys
%KHo`,%5VB-IqL+"pNX@okn.`ZnNhR&*^9T)d.`914>L7AC)V_?#_2B/Or<HBK5A[i^ot<BZTqH:2<i"\I!\1F7,mSuf(pipqJm`K
%\K_=%F9<M&QtGllg&!JN6>>;QN<8G@L1`FbE!A`)"9a^)*A\8o3XqTd$Xm$1TW#gD.8umL"6-cXK%Mn2gCZSp%2OQj8C2nlEpSN"
%qN>Hj=pWV.$RRu?@R[_to<RY8r=gDSJG3.jeM7;\*#D::^gr4<_f?`oJ-S-^AIZ\hA5cI@&=BF\:?a(@!X]nX7iTIZ&`C0gVA%*L
%#9$9JA&CS\q#Gi1?9k.c%0Sii/G(3^Z>(OZY?W?.QK`sKDSU(F822`P+I/WRciT@"6Pj:W"b]#fN!-L+i(k#q=<hoMY7O0g%uOOq
%&k4^ei/AO=J]D;^@(c#)9nFDL0XhX?;Y[5+!D'Cs-Ai\ccZLZBLTq6GMr#;eZp"jO.j@5G_kc71*K*\p0G:6O('/)fXY;SJ$fm4*
%@Q/+BV?qF=_u,7%g7b75f.DU=Fc0c4*-&>_nD!)q&V:q:S.riq0&Out@,CIBWn9U7h',2h)uqdM((2Hdd<Gc>j!r]4%Vo0q(b,n:
%l5%5.\kBr%irnKH\71&bE%]ZGa%:jm1_;T6J^c)NZO!F0*TqcK!_8!=Ho;PLH6C1eZrXI7#qEoh#iBH6bNq/,%V#MHL'&U+kRPUi
%=dFX[BJ;2h#C>Ju@&C@bpl3X@!\X"\aG=M:fF9N?&2hT2!GBa[-:uj@%Ki_u'?D>`Fc0XRh'.,WgcUd'QFQ!gqK![e?FoCEHLF-A
%#X21>C4^F3IE%K`KE,5m%Q##*g&o$/+YZj,bRio_3\P?CYcAt<MK%1FANkfpQ9f\WbcPI2.I]S-P$pT%Wttgne^pjr*T.oSRs]g2
%_0feUkr_`(V*-8tJ.KI/p-lbjon(itVhNLICba0/i9PpRiA<7<&Cpkk#K0ob%WiPlLO%et*U&arJU20n#p:G;c1)HbdZ_Fhd27Il
%BDbkjC?sHWnMiRj#BYbKRN(\^CSoLtYj]R.CS*.GgmLV:`NauM%/(N_D[j]+a'^gPk^YaJ*84o"CSS]T2>BHY%W8XlGlk.X;[-%P
%)'`<\0OF?<&+(Ke#V<uLb'2bg\m#22;;r^UApc<.fF3"D^1@U-/]SU!!$tO-F.">*TbSDI'VJjl\jfntjp4kX9b0]m!.t9h8d'Hh
%i#7<_6OTfD*tCu@JLo.6^`rcOT5/L94I?DiDBf]>'a@U=-u=SI#PnlFR$K/B4kI,U+TR(HH30+_b/003h6A(V6qPR56o<7_/YFJ-
%1;X(="s>CY"T])<g4F1=B/Me%oS>r5-X-S\laT-`8-B;%%O_Q"/qI2X@:58ETuSG&Yq4RIBKCebLHCB1?lfKu#+HgA#Si<o`-MV"
%>2"KC&C%X$b/-G8(k>7T^sHPDJfbVT4U_Ee=Vs+I$9RJ(bJJ^A\e8]PY/C@IWbDi'<YR-1Sk%R%)=g/2@W('7kVc[6;i\O;p^WLW
%j3+^:>Y@p!E&99hD?_8l&@rn`&TnBg#reD9%j\uSo&k6k&/$g9bEi9=1Wad$&t>]8[@(c\2/G^8j1)Crm1<Ti0-s4,1V?CDD88H7
%a9MQ=(A:+1JOa&K(l#J`8_8/#K0q?he:JFfU'1ha_b^C8k"-\:rBQ7OcePl2:cM%"B*r\hE$(s>^l^c8'1+\[[),)fk1G:O!-Crp
%3fhG;e,o)/ip<qWAY5A'',FE^+H-qEgCn](<WcDPVu_g47_%d,_Og'BPefM)?&>lUHCerkFW#2E#mog*<%a"3?UD0eB7#jpKAnZ4
%eX._7NjOh<0\d:s2GW0Q%AA<iUu9Y!\rK0'<'or^65uVojf0KC+@NZr1d!W<SgdbPie6qsiZuK,=EoUWE,?M-JE)fI`#!9K!!]#d
%N(;>MJW,Dhd&<oZ6AJ%U[K8a7+ImHYZpG(@4[si'UpUK:9M#?-]-YXHT&hL\i7if._ErZI/`?UAdX.[\!/(?f,!H?$jb"nKe/.;X
%Ck:PId]ghB#(\C@JSb_B/4rMS5QcVF"ijL3&Ls%GqHa`[,j"n9(qN=HE&(<CJ."hc@6">-*1L&B>(cru*TE%b+gc%co\NZf0fa'D
%18*&r$6[YG8<l''ZiptZPD($>@bASP5N%3`O"=_TTQ"<9^1=HbF3t;5T!W5.AK_L<[QsdOU4+55;Q8N3&MQ*0l,3aE-R:_6PHFn?
%Rf3Sn(kBJ5AiiFS[K(9)KZ=N(M[J475;(Sbj!>EM^c<N<1+j(<.%s?^#.Huk+BWF-5Y&'lhuS_;Cg#a%L!ef(9Me#9e)CW:?J5IQ
%qBa7BO'DZK'ftu=Bq]L-!9aPrFMJ>2M#qq[&.ZE%>_Bi2GU^s1R%^>i,-@YW_%dlV:':V8R&'7QBY+o@R[H02[G]e5:>choaW<0l
%-(GJ-&oLG];IL>#e8gZI2p.2sQ7YRTKQIY):H@.ORgO*M$tTMl9Gn6@j,o&"CoSSEY-Jt/^R4%Y_O'OM'Fl-%3S1Sh=kNFRT-RN`
%MV*OJckn;!$fJg#Z_$1iDg^N>$Etn"(<Znsga'YMp*sS543@jqGX+7XbQJ!`1\OB@E'7A+_+6>MG6>h>5iAe!'/5d],]C3A,_3C>
%.T%l?05U^/O*K\he6>!2F+KP"3m-X6L'K7]-5NG$$`=Vg0`P&Z4ooLX20k4!V_+^=mV;Z2+Al14q/-8TCmo?'0*T_3C#g.,kGi*\
%D8"^10p2AH/_JLo0si$]r%=O$#kt.N#c.nA?t."t?mp78JrLREl6AZp4rAXiP["T%iB&1/[X:DC9L8_9)4@VBFgMoh=/^hV*+Jt(
%8'H6,Z@W9m2P@3@_04@^K5aV*!Se'VJ,hAmRK1,]0EO9nF_1Atg&Msc3=nL7n^1m5RR2D`K*0JaHAu0+7KD@a5a)c#N_b@?%-T4^
%&V67p#lp][WtoYuNhi&qe,j"kdcd'L"G3<o*,NYi>7a@kc$*a-o"h#9?o\j5_beIX0V"@:J:GWk_AAq>=W$9U=kJsf+>t0B"LM1Q
%$?4VjAII9R6_L352_ZuuiWMMeMkHkAieV",I%^G$.)8g@#-t=C$S)3B-a3njfjo.8/uMT\!=el+_-JFMSD_kc!!]SX$\RY?GC`OA
%=JgsFR&<8G.*T=hdLeIA92$/1(KrNSUuDc;:>oe>EYRF6iS]F.*nN2b!nnpJ<bbJD2ed[t.QeDWC-h^b%%S8s1^IT"70Uoo*Y!/D
%Jk$uSSF:\),^V(bT`FLbj<#k>`%]^h1E_J*;a.lJggS_5P>4+J4ek7Hi=;iF'+/6h,ag)+"OL+/Uq*W6pR&*f!pDp$,R).4(jEZ(
%Wtn>IE0X5Cd_$I5I8_"??cod;reI$`$X]<?5QOT9C72V)[tFj90Liosa`I[f"':JdniRL*L/R-K9,0#]crMWr@N#;UWe=WMA.*qq
%VZ6mB?kCBj)mZ"i8ct`e[*V-p9t%i:#`:2ne,g$!5]B3tJJ\KNG&lUl>6o43<d*Y.'&cZ`Shr#%TLGkpWu2Ee#YhTe5sW-:N\Y:A
%<.IfhimO'e`ZF'P8L%Y9I=iZZF*,#HJ>#J./oqo<&7VL[V!/K_1_L)37=)q:QQ54BA7'^rV_'mBRW[`9+.=[SkmK["ck=f73etcl
%E+R+cOdF@3Lg+C\KD<<G!/?m!OF?pUD#sB"P?/ru+99!]'iK5g'JQgFb)?<7GEci#kCDJumq=*N8Js/83YI6Q(a[Ol\KkP+l`t(q
%/s8=W@N#=cq*.(;>6W5\ADh_36Ip@r^l`V5(k>%ua_pr1o`[U<pbNR4_F$bsA.0;]9?E``1.085.pHbc,bXfWBlYqQP-+S3U_c?3
%:SH^0+UV-K5nkjrrLke.i>RJN'+r2.:t^;hYYtu6-7L)!:&rAS=>rQ;6U:&kk4>PQ>e-W26Qkt#!45F`-='CWNi1;Kk^KeD!Ub_9
%%"qi>5dY5,.!$9"Mus1ofCrha5&RNe*96BF+Lp_KF27\[/ECV#D3fu8&?%_[&45'WAQK$^Tq$0)kc4h1&#]Ub@"^lc0nl"O=,saY
%$RSt<S\pZr#$S/`PVEFDD2/hH9_/A0Kb"lf&^!4A/V$Se/g'3&!=0B:$Y[=TbN,FqP6I]>>Ce[MbJ%5MK4$SFdhZbT7$r=(&dL:P
%feT/Z3%3n<N"4e(]At),0/pi%NSJRFP6"5=.I!bO()Y\,LB]"8N]dFaC6n$Y,`n.Hl/Hrb/[.Lb5uKCFb4A.9?"pu,\*aIDEX?fa
%cZH"KXbIne7_/j2P^W]nVeLS&%!//c6rR"[4GB'fOcZ@N5JVRB0*`mJ-D^(A-aPi6$r#b%@N;1InC>22pb(O`X4`n:RBeK$r)7K/
%<=>&j6at5_?O>]>'pP"3Kr=N^MDJ29J]:=)4%Pc=4b`t^?\Q]R9]r"L#DE4Mfg]?0Me!2=DHW5oJc^GW8*[\.KUTUXnm-E:e<TW_
%E8O^1$Df)c.]V!o&k`A]\2R.QPInsCFDZnZ?&LI;!_uZI(Eh6`XmZ"pL-U`o^7:.]&4j>A%#N2Y>"0TcXL@0CKH&fG_o-#7Cr$0Q
%UAuT>Xs:e4$Rq6A#b_BoMN/:97P3h=X4guI2F]G=k$>A-!%-9;64"&p;t5C;rb^c7TT@3nXA(b%6YZ`b=p2X-2IuuN84]W'!Wlen
%odHHJ6ol09[.K)M#l3?`=&Y@)GOhIl,@a1oFN(s!kq8+c"KrV8'TpD+Fp[diouFup)Zjl1CT;=nDRrkdbk8hj+P+q7N)Wfuj"Wc8
%!Ckrn01\WsY;tJh/.K*ff*^K&6]1+3grAm$2A+/7Xp!*+BcPQD2dTT\VbTJdG_)]'(!i12Y[Aq5@2]Ks-N2u<*=uJ>&G-8S*%#DR
%ocZFP`X!ij_akqYEXQQtnNB[A$ue[iV--50?NuXUDA,]tG^L-%%<t'>!FO'_#YaWD>ed^@VX^"Nm:?[8W'akpT1oh%m^b7<OBS;c
%-R7R(+Z5c:5I(`rhRY'G$T0r0l$`b510OHoZ9CZIb"WUr"#+D'h9QlQ?N;s(4dR'P\5-O,5k29ofpKHoM!#O2*%HjYqSH]D[TH6:
%%K!LPaBS-_M?lU&$\==,ILXm:fn/6_N2DaE#^:]nYegE1T]_G1i/;.t"9uU'VaRHf;R\OuM.>Cm8e$'iP;(cN,AFrYCXiEqjr,Tf
%[6t9;M!tV".1PN*!eg05<jLPV(+bLj<CMP8o!gHqVHV=\fr'fq!2and<+h>$Q#\WKFMRFSBPenu)rM`kZkCTlL8^EKiFcVB2Pa3I
%]Xh@lk4O.+?fTlZg+2GMGg(j-XB<4O-#)NE:LpF?GRdi;@@>&BcVmliFsRQ/!YVDm11Z^4C@eROlXO@1$*'.O8*&[+.iN.jKM#TG
%.4).N-`$<d#]q''<LY[&$@rPE")>Y,.9dLBL^\j6Bjf*26+HC4Cu[>%!m.3BPiCdUOp(3OXKIUSY@V?UR3.!2Rb.1O^qE/`D*G9O
%\i@*[n'+DmE"]P>FuR]mfn--Q>('QqiQ\BI7H=Pr!u`*\4)Mb?."C:3KRk54b&I`T"G/QW0ebI^n<BCVLuTKgW9Lo]1jBKjlFu_`
%%0S/'iebU<Abg*6.1kh*'$*W/Hs8$RcV9Q7@0&Bi(-:Ce8d^-P%ClO\\IO0cRWl\MH.=Naq=&*V*!/JVih9J0j<0ejNMlId=l^+a
%-M_j;?0@'_*Wg3?Re$PZSVJtM)i-(Qg!41&$pir+"BpOMYO;k>:is^j/Q(/e_ML?F/D5W?%SIpLEJ]4F\/HdY5+qQa"T!-N-D7.7
%#HHY/FW_1'BZm4uEb-4=Zf",aOoi$O!7tA=VeTX"/V9LCB20afi*<d$+G80Sj-CFKNe1)b(D@*K3N"@i%17kSAaFfAHn6\l',Ybm
%(&Kno4!iruXdDWja>$G,%A#FT.`I(!AMIW'"O4)9NGgfl[&&ck^]V.C0G%Z\!;`"M'a'YMP\^W4FV3K9MB"rQ-SCBmAEmNDkN%"W
%$c>ok?r)'L<iA$$Eq]Y;*P#/UV,eLs:n5Q='^H4tfMR6'.*K13brmg/_a[W-R4G[[^fQGE9MWd)#\0Z(g4Y`h[LI#h%eZ+JaP8-E
%;hnTFL'?$Vnem$[/+pnK4ncoa]3m7U2jJ/p/*B7V%S2U$2N8n.VF67pf(Wk2Q1$&9;nHH3Bb=XHR1SS\h1U@35D_X,D&^r7*F!-?
%`Gf'O/MN)&*4b?q^q_-`n=c'u==VR[%N?JQ:u2c$kY_C0@AaKnXln[GYu$!:h]qa.[jVQUUJ`_<WOr3^m#paJ^@4Cm2n@QMWZifZ
%)gD0^/r_ui>XSrF3cZU,AV8#CcmY*l6V6'd8+)5R"WgeSM(jW\`E(GEZIlJ(nT%Y'6EM^._S2M_1gjaMZrNpcGunb>^eF(K.TPfX
%m550ErS>373=/Xel"Hf!UD9V]apMf%@._N]PE@qMjf,a/[i_Oa>YDK?KH[YM?'f:d%Y;?h/>65]5re7&6<TteN_>Ckg]o'S5++@;
%I)m7mb>SF;r>uU'o5,eLQBf=$:G8>?AIEPK3hYSQcu?Ca-P$L(mMrX8(c194-6[oo-;?'+Q=7rlFdflt2?m1"*a`bA`>47o1s7*V
%G,W#4&d(V0A)IU+L7)4nVLo,0Q:e%Y@Te:A)lbkHE&H?cQ'rhJcFY;ODn6&Z!qP/P[='+TBo5H!X[OA=BsLVtiFpr/m[:=rnAE_2
%P@V^6MZM6J&3rH&hO;SC7^/^9-*\Kq\fn@]R7R]W1::BPgNj6Y`U``[eQ-JfR3k:AQ)_@(2b(2_L(m:M17JE#+[@/.OI:;L"0!&E
%3-RJW.e(DY@Ms%X,53(./<oaZAt/iWVREghbtf<27QY94b2GjeBe(1tFqkJI1Xc7ZhE\Z?6DbJ0kdhHIVoB%<03SnH4-Cl49sq^n
%8]H"DPJq`9a;3hhBOOC"n:q.HTT$_tS"J9.TMjlpnH>g[UFpaB,;<*_OsJ=dIYkE-7-A?L3"MS`:g4t07IXpdg3f^X<c)2J"a,Z]
%^2WR>"dV-H**\fmfWYNKdO5pKG[\":N8e+GL,;Qu9K>,AY:V,WVA(@aff[O%qc]GZ>OrO6O-3qC-XnQ0cXY,"#omX+r`dC,ULp9B
%Y@]XfOdp<1<TXLNRF_.\[6k&Th#!ABkK'sCP#4)40Q#,IO%EjaQmiHc8J92q(>a)KdT'#2J?D\qU6b!I3%^#7,.J1LY09RVN>01D
%V7[;q>H:p5eJSrk?=4.)W?oOS=Al/[-P$'Q(<GD*K[GtGfhBZh$;<`+hODC3k'!.IEq"1?XbKAX"gN"Xcu*oI,__S/WCL#FfeKnZ
%f5eEl"+?oh$WV3giG)l)/'U!QRF4)cH>m!7V/>RBTT"_;MC=7t9t;J-i0"T;QK<J["Ya6^jr<8j$^Nj+,nW<`3:2pII"]QT4*Y3c
%<#``/=+b-P?1PWc6]#c;G#7]seH*KbiUkQLZIPgeFk-kMbZ2[b>^9r.`r23\4se8[mTZJCC4Y(DLiCQ/ka\,2D5>q39rY[ZYsi\L
%X&F/R@C8C&mO1O/;8Q(F&k3uH!4:LL"^2:Eb2rIqSt#;H#tNPmq6lQS41<kSj,0A:6p[tFiMeT;dX`fkFL[E&enUjlYGeMm5DXo]
%UKjD2Q8%2o"hd0:5jk1_`G15D'/,Fqpl91@;Hj0,/MH5D4W6MTp2^t[Y!ki<+k1OtYgO]>oFrL)HN_rHUI0&S*Ok!b@FCNY.,\Me
%l:l0k5Th)GF%-!Qm>O.tR@_L:U3mm`e'8G*r#@\qO=?2>E3!Ep)3]0_/MG=]&XLJV''QB;%43<jV^4K%/C(*#d\b:G1f7c\XNiZT
%WVuJQ^nbo&?J9qm\@+<2#6_NtIUlNJapaBM*07qZ9a\&k>VS*9]?9p%JN@M,!SS^=SX91BJM:u)]cLlAc@,!AV[?g[EUlC*0hq>,
%3gmh9"I7$&Z,.!lHY,$>E5cE"!VA^6BOFLA6G1Zc[$LGS`+#\]Qq9RmhU4p8\ls(!-S^/S3^j9fZqH:U=pDZ\9N"4J[F;8AY#qo)
%/Z25);7)iKQmO3):WRh8'e>e(o0MVc="OD]6:EL;@HaD*8E?2K_FgX","CaUq7<9BlYnr.n<>pH#FBZb/KjXm;`^J#2M=+A<KbX.
%4j%%\4O[ul@:Hr3[jQ3]SjPQ>c=2U:.ugL_,)ee5%chTO4jcA4D#$Jig7ZE+atet;VV*Y1*P6r[5c-Oq,B%qI1d#!*/o4)I`"D1?
%pV]sklhSIm:TYDT,We*m:Jk>cA7Y#:IkNfuWQd+,mL,i0gJDd)El:8O4hgJ+aor/CKLooIf9H8obHiL0V3sYQ=6p=VMpfh79J^CV
%R#*7h1n,iQE+Rc;b]Lf"miGg<-i%bH;i%L9VGJ*XR4cIGJ_FH7<4FigU=8W:7kKJT('3<Z9M;KNhpc$I0*=[j&',o97"Dru[n-kg
%g>Q6[eF!W(2'gfE%LDJa[`"OT+X/%m%9#6;%>TUg[aKl!32Gm'TQ#`'>YU,M!msk-7pemi\1Lc5*K!0X7jWt^FB=/JDE/9,VMboi
%&""=p>&OXR?jd)WEKjT+I<i=93ku1mWWa7#OPk.L"RZL%*KgVh-j1Xr'9:_-+^;0M8-@\iLf)ogP\n6Y8]Vl_q=sq:P((-@>hU`H
%[AKX>0s/Q%^ti:<8Dg+4!.cua-lEVDp__I*:U]2^`FF\Y#Me6Pqa?-s$uqmpA#'ak3U\Xb!oo+(+pS6p*GWNi%Crpi83>i%#Qa#@
%:F$G7k"Apt_i?cu)5d-l3$JWlHaCtY6p3[5J:#+<;AVhE@)8u/!=9LuA1Mhoo?<Mb.!83&i?9Y.8%YEg[2IBN%Y0395sSW?V=eOm
%]d$9cLlM7q,$'lL%hQgQ(642]714?l^`t-,1I1j;D3)1L(T'2hNFf&3lLC0'nup86S;:`M*S!K]VP=a;gm76hf/kZ5#$f$a/nbC!
%WDq&>:/%c34!Idm/Hk@;XcjgC_)RrA95a^e-\`=Ag,W^+BVp<V8"]!12U&@j4:(,KANr[9a/Bd;L&fGB\TAl"/0%M1cdQWa]c8W]
%JT+sCDOlME5NA[uOm$3X<1aB3eIV?4aYLEpiM;74*4:(F;+H`gEHXkeZlSPP)f7`ZBjHuG@T.7MD-U_^]$J>1+ei_fF=GGpre*Bg
%PV,clinBhaIa0VVRUg5b5WT^CYlf5A2'>V5L!@CXcQS,oNstdX+`U\0FS+$oGRe)PoYMgbJiLDn610$*l!UgcBL9^?IUrVo"O4+?
%&1.HQ@\n"2FPR'?D0EiHF4GkZ.`5nUj*V-^,Z:R&0Bju#T_A<[[`V0'["XfQKb9K0d4kb,b)L>"I\$\Gq?Y._OA!K9ZO#r%ERZuO
%O/\=PNkXo:A'-$>kh$$TA4B^I>.amu.iY-X^q3PIE`6cha`+b*as#pDXPgNY"%$(W!7:?DAP8PmopApWE&8(FmuQG6)BWPTlekc(
%pg%>VGF7EE634>h4$V_ZC,O9K:<O]nP),9+%V9tVrh@c;(AO?(Cr'%!#"K^5k2%fr/LFc)Uu+e`D2)lC<XZ>c^b<4'l++IO#qpV1
%e+<a^Flrn:(r]J6Ag3g)En+TG-Be[pQK?_AnK?Vr-rJp&];BCV94aD-?@YA3Yd8atS:g?:1>:<#"o$N/(uM61QDr?8%TBoKVRF(J
%g+k=Y][\'28q*ZUicMpQ!e&c&kluG8Sdt8e.]6kL9eu!uV*d6'W(76e[%6tSNH;8\!NlAM9K]^k6S>MJ+=/g_f5S=JZdePslI8Zn
%#t3)1SD\t#[WsiI9e_[8Hm$^MmE+H=Z*>FuXtemS=05*KC->=pnccBRD]+29L)e0SEl3i&/j4SJ@1233e>D<B(YN"3Q&et+dj'Zh
%7?!NjBH>W#=6')8UgG8T.=*]>Y`L8$:\.i-/W2$?qm1*$Hqu9%C3@p'RkWsHXi_g6H>:$$`&>ST)A='O9\M4a_a0u_fh]L%'$_43
%_BfL!jec'*>Ydr'7D"9%"[['s"`k/;$"#)571k7(/hK[?Uc0G"@RG.I"?2K7EJ0L`p2GA':2j"rC$%q;eVQjnm8W5iLP(b5<#7j!
%Y#"'_gggq?m=JNGVN\-,DhHb1V_4AC<L,I_6l6m:W<H?aVLa2^=0=50UX3&_g$4Zm-Tq<J"V9.[)gF4"5f"=DrP;E*#:8aCqObn,
%'t`Klp3+C_hUH5,io/;V#JK(%R_&47^A;[$Kl8Uc*B]o%@fEnom*CHNEKkiQoB;ccl`]p-(`r)GK$!Lm0ootVNB9t@R3YYD9`Jog
%)C4j?Q`uJJLZ<[V&:_qh9On(kQ?hN!Z2\W&liZkc=rtH#Q@'L.(:*.2X%VG`Pe8+_,&k0T"F[4Dd"fjXA=5;GH9WCnc`30TMf/c5
%BCYK9ft9@_<.7ca2'9PMNi$I:CTB4I_Z:HW7i)rp'MXdT5N;[T2-GkCJ7EB#`[#5nST5)DA`pDb6^XipV]'!1c+qU@aiS!+O8Ep.
%?AZg)RA@FJ(jVAQ9B+W6<'uA=r2,8h:QFSTH%1f>eHh]8ilAr6>XQXiPr;(2?(&_&iquAt*keUAU0_JBNWJq6Q&.V[AoTJ\s'1*6
%eo2:CeLI#h14$$%oFt(8]#BYiFjmZ$p!ogXq+]%O]LIK/;^`F<PT1`=(.g`>O@7R(@D<"pFi`;WFmJPH8=E64,aqMll@buk2QU'K
%an^$6)pYK5f"ZkAGE16!Yht:5NI/8so^WX%MaM].k^O/!]"9ro,E>,eP6a;?dGr>f[YmOtO_>o'QQd'EDPjj$'!7`<g]aFA2k@QG
%F;Kc$!n!&S&Da[r>UWd6Ub)mBh5_KRefel<K@*`t/fl%(7>&_ZIq`V=)oFHd)=p,lb"]i&UW&\4Fc.KNlJ]m%53TrRL(U.[-RR;X
%D:mZh&1qM#@5MkY&`#WP^A;LPC<Z't%8Q=K.&o#0%lQDVf.n/s@KS!UVmCX)qN!2d->g[7:?be_LFXg!,P:bMpM,15RO!+7T8@6d
%lC@NU<$MJrMf4L&fei+]=fbJg/bV'%mpDJ7P1-?O+8)C4_j@@1YlL^`Pq_'Q;3\F8j4QO5f,2WkRN&$QXA*U,YN]R;?\I4Ak*C`n
%H_+qPB@rNGB.UA!;;75+fs>H+ombMKqS/#:3/<^VG^^bK0,r*G`^`q+&**l.PqL\-nfHPk`)>21fbU4NW]OCr`M:Up3NB]JDek_u
%[i;[i2(3K[:ulGQU?W6(gGQo^.'g:5U,A@L$q9UXf^eEtIBW>KLXC'i(_,(cJQk5C8',_!FrntFN88A,hTiA)!nm)OW9GXapJIHn
%M34uGl"ehX2-5*Gr`(Lm)nGsQ<8ih;Q7/i@1MAkuKU0%#a)u#VpMmSgP>Niej8Z0oR^bF\FS3oo=cM]J#:.])\>[4c._jX:nnN'b
%X%q'n`JsQW;:Vr*TNN0A7o>7?)d=9c5FNkHZcQnOk/16>8QXR^?9JsHFcVI333K\GJNFP?cN^@MDaX*GZ[C;i)Rn#aeN?c0ch;5(
%0Pp:!l77A[6li8]()p,gQ/+>;;4Y(2nW,l.$UUl^K&>Dm6E1FWmXgPF:N(#lA*I/uo0C<-:L_hYP?Y@DkUK?XeHKpXVX!HBD9GoW
%[/.(Mq^`YHj3^^dMYjfe)9Xlr7;]C-MY2\&?*:`sq5cBB9h/&F5**bU8'uE/-aiOOR]F.&\kUS@C!b%*qIjG(<[OGgXPmbhq/*@:
%gG0.;cTH+$/6MN3f'Q%D[II)i,;M.2B-ll&bdQ_4o`0@)oVafbgYtrY3%b0fh*6#7[.L`^5./kuBN/a`f4]fNbSmBH:DMhqVQ5h'
%'#cdu=>Y=GIAfm\R$N#^e?_T<_PRV2WY7<nG;(5I<4^^i\6%M%c6kKdKul4if[FAO?GgUKd[Qs\M0XVTRC6c_(s[p*C4phGND7e[
%Sr@Frf^CK=([F#JA4Y58Cl6<]E#_BuO%o;B;?,$S:kQir`hl;.m^VK@8N8ipZrA*pCpf6l8'uR+*c:UckO$%SEKBM\,@1/-Z[[,l
%,LmoRb>L:2rCE86_d,dt[`(^@h>Kl%8DBH;e46kfWQ#C-gUeVCpU>4QC4`MSoPW9@UcOf^CN^t/`Q@uAmRX?Dg9s]+],aJ^eF%K*
%?)gK`A(m&UI<7Q6lIaX(R0Be^NhdShD-:%XgNOpn)4>?hUT;!OW<R(ki_<b%*D,"i5.6G4X6RcEI;?12OkoFE46u6Tgl9Jl\OC.X
%L?2d]@ZqX6W@Lr;%psPU]fWE5k.L[Z2ug2RUdeg7b:`S$g=PHT/s+d)_LK?4qE%%ml)W*dSKZc+_OVj_.Yb0s!+b7(mMs(q[t?EX
%n]hR2bi%A5K0+9rk76q(i6Da[Zt<-As*@sl:V[^RL=J<S0s6)qFK<,n"ZtP'oMt(m::GDX<ME]Q_nY3Yi@+Ql]&rh4bImGd1C^Pa
%##R+P:[@?ZeZ*GC`nd8#X3Ipq5+epg\RTj\;3%g8m771/JQ@c(gRd_l/Ao&3Rtg%@Dps6/Hghp0n%f+db&6#WNX,+=E'15,XH^ZP
%31>'V%'3K@;hXRV:!+-ZV7.erVKd#WAMUabete2kh8akRdUdLKY4>qh4W1B.oNQ]tUD@k(Ef+@nA_B9%;1FR?>HUMqVd`k>'`4*c
%l!t!)o97-3CU_:&ESY#-NQ&jp%HUVoO6S1@[l"T6gC;kp)AK=,^QkM6fc3H2o=Akl&>,Z;g'W_g/>m).E]6M9`B<p4R=d.L?#AV,
%I!%(eNKW8ulo^lkn.Bl.nocY^>YLf7LJBL[`GT\phcQDPGqnSq:8mLpkBDjU"YAC[cJR;,c7ced]>aSqaTCMn]PZN+B8q*Co#5(L
%>EI_oaT"%aIKY/?BX],!ASL\jK)Cq3\TSAO]*8")hnO@M(T[kZe'gaF^R2BFG,$[<gL<3-`1t`@I:]]R_`)4L.'V=DX,sBGR'4!(
%kd@:<*nC-$.%*\oT119ZmE'T2O2a&aEN.s;iqDXnh]b(7E3SJTAntD:q(CETZcaTMg#Wg4/_,UILfa.cS;ZY(hO>dNa7mBsMsh+q
%KAi<A]m%B9.%]<hik`<"&rkdJ=3"TuYulI!$-$8&EL1(79O`.ZI@"NX/<64=WincYs#3&Ibh)bie]].5Kh][b?_+]O"Q/M+XL'Gr
%:0;Xn4@hLu(#8"bUlL8b%\t]/8sQoLag9YWm_^$3>iijEi;%ga=f23]/[;"O+P"Su&mdfQZs7Yk7TCYgrG)`MoL6hqC[R?\];3n.
%l*O)EXj":_MFf(aA-RqSSp!]'?.*GRFP8%3G"JT;dV5%i8nIS9mGccpdRobiha6BpL1sk_9=rnjdP$b_gEd7]:Vq'p43Zfq+>rTO
%fTOutC/D8`\&6_*mq-c*b_@OG]t8N)B&Tfh(Qq8*q-c*bQf$][8U,G0bk=`M];sX<s(&dSWpT@Q`YT"&[q.n/4_8Kb>eI\CD)W>N
%r=s2BKm@l*gI8C",R.?;HFBTTBJ=^]Q2YaVmbY5W`r*Hl0t,BDW.(T&mN.50X',*[,Wo1=Zna_rrn<n?eY)+n%>m>cM7M7S)`Ti@
%S],["Rj9')1\6+6,&Yh04Q.!(N.K(-)!`[mO^,>7qTm_q[V(D>6/sj+NI-t8UU%P`n7+B?`mc33L*O#j5K7`gl6O%b%dNBeQ,P[O
%RT"jGZZuHJ;4TTp^FA0jPfslR/q94Nfqi4CQB[?C9?D"4(XB0g8u;e]]9LMl-*p7d>jAT.ddd<J)lHt6And'E.@G$Da^EITO6UO;
%g4bJe04[1>UAd7n4e<'t*)$poX0P<>[LiT<s6AaHc&bmfbHl&:E"17(jja!KE\nl`qeK*+R1LHu*tLkaY%GdTg(^MDXpQ+$cC]XG
%Guobj^!<KG1`P!6#<RcSEA*1K>f>ZONNbEED+c7B.ss/*Q+oTM9&?1O2QHcXV>6pAHSa=bCNQ"=c>.)10>/gGFr,Rl:q=4%X,+^M
%7:6'd9"hetoC:]/ol&s+NYfgZ@K`4Yjt,as]nE=Ze@HqdL>BO*s-[b3WN:-">uo^bc*%=;>I)As]XjU1lB&H.S,?/3i:WP.0QsKT
%X)^^7^M5RV]tpbYAqT/Mfd2Z>BK`$b[^,:+%PTR#HGD-Er<NMQ>)%)7MXEgY,(F>DMXEgY9,Ol"6IAFEMH4qOG+n-M$Uq8s#/XY"
%H8U<%lIX<tD_P@c`a(.,H.0<^7<c$#/f+C6@aR@)b!i)58D95Oe@W<^BH>O00HU1,1)[_rU)N`N(Q;\6@.\46*L\L,"\QH9)n+ho
%=7pfSGH]3PXiKk0h;,asgNM2h[[Hpt?0Lj_)>['r^jkLXRa'p`8)Q[k^YsY9A/+^ohD5:J16).Jq1lS)ZAZ'bLJa$6^F[)JRB6.<
%laKUKl;>$%$J.WWh+E+m>PC3r9+JJ/m-U\9b@WkKr*%eI^MQ;\\bo*`bJ.jonk-LjFoMsD[Mb(YJ*2,N%*&1N3YrEf0II>6p*raf
%3edBUS"d@Z?e@L+7s04Y9Vop.UQk$:A3?>Oli+&%-<ZM8\1(U^Dpt1-P1-?Of,W.RXbsIAAXdThV`L<Aru7O_l7;t9$C_Y/DHa4"
%%;UFcCWGEHI&iTDf;`Z>Q0Sjh#s"**ZQ%Ye!Jk]aFs(FtSS*4N4NiZ\;=eYr/jCsAlp%,M0=`/o&mjH->HYLkC9,Z^KQQsll!tc@
%K\Wrsc6^*(0%nMpgNd=Z&!8*9m9At@?1%U[(\,anIcoh_4*SjOQf!BoT6B)B0H4phBJjO$[,suZ$q8H"q"ep\'[9HbD8d?ofg:mr
%aP@h)[9%=UAer,742aY,q-c*b(FF%i,TJ,Jq:U$ukH>Zg-KE9fkdP(XY!LI$9ZAreY2*X$7D[OJ9ZXW>XPI-oRu=b$0&FSfr9fWn
%DMQF.?Pq8Z)4c6lMli5).t:^R`Kh(D_kB&mJ*H^9\J-.5F^uT1hoaa1NP/W(_g)C0<PN*US)smt0]fA!PCcc2SU[`7N`:Ick)O;H
%(*>g/g%nE]s3.RSfa)[V8KO"SDP)3bb.cP!E>WeAS'<jjgYUJmc=X8k5IiB?g&+o3[>balA0V?@2eb.Xp]?ht0j*2:g/Qs4g_O25
%oa)VNj/[Q5rGE/.jgQHN'#\Y:ZK_[/[nY,K7ZCnj4'-pl.X/:5[25`\dMjO"-GOWT7XlJMe/8!ub1bQ=ogKM=L$(>BZC+<([R.[H
%\GpY$c-OoT^d__!`lBBW%sB.A\O=g@fSj3RURQUTn:_,0O-=6>40A'$BJ,uB>kFE,[cDE\j;2]tdjkXl^N+[FadcWlVf7Ui<la?9
%[#;Ws;,uFh]=fU.S&Cu^?_k<]Ht\qO]AnJ=bB+`d+mAUZanQENiE&_?8U)b71E>^VY'okc9'u,'7j$#P-6p;0L4&Rkp,1<4?MhYt
%?G+&Hab'M]`Y8-t@"DmDY$j4NgMn7RpG]e)VmPjU`<Z>74ad).@.+QVG\"J`eMIKWlAMRl51sG3'/fpDYmk<W?A"Xm1X:&\r+):J
%EPUP!eZ`<%a7;O6$!8V7BmJ$?Ql`VuLV'W"#-&]iD_R6_X5FV_V05c3.<+]4kf,`#$Z<Vk[:_Bkr_FKV<iapB0@$1bk%RT]`bQR5
%f@N33G3tL?\96PNn^GqLi\!dK@-!hF:tIZE5DAWsbnJt11!/41f;>h1RS62=U>7PMj:<$DJ^j0.YO1EUnRAD,Xu.Mf<S4/=-`,sW
%_T0U$_pJO75N.*V$mfjH3Ji_rZC%1#O.pXd-;KLIaT*#ch*XOlD+CAKn;Zp6A^P#G`4k1Jds8jpNM?6_/.*AG1'Y&1T\OAd0YWg<
%DP'?hIhIb7D]9.B/s)Ghp0SrT"FHpt`W%jRH0E'P'e\SIjm0\#<bJ(c.P^BM:U]X0cc0Y=#-nqB0\h)/?>)Cn%JU+1L7N4Tr9$WX
%`A>=+#lc[$%-G&A`fp.,rXCaO<ccJd)]f*iHjVtSSkhk]H>XWsnX%niq*X$(=^^p('!$fL?4<JqIZ=WWGkr4G$ZIdNbJ,_PX/p5f
%4G(>-L\$Sb_,fR3k9aDV?>DaAP4^L8.prF"$M/8'A>U$oLeP_YmD/Do2<9emT2a07CVo0&/k'WLLCB+2+T6AiW2RV=+c>of++eb)
%b;+:!Wu]H[rnB<\>1%0=cdYN5Dr]B5D#S#<,a!fLjBQRFDDH\[pEsA?#D2oeTVTu6_cS@;S=9`Pop40no!k?2_=YVnR2;%:Sr<o4
%iOk,DCul%b5e^%Td@)O8\YbmLB=#,F/fm4pa?0@)iKT[)8@L7P;(6E`__jD(VO1+6R2R@*<gLm4g;?B:S:^6gGlilAU^":`/aOPi
%kG&B97@mP0QLr@Fe$(to"N@g;n%]l`*NnQ"mI0U]efQ1P>)8l@7RI22)hDYg5E2EMAg8LNSS&RK&1)6TaD\SIJDsI9NNA>k=:Dar
%!5D^'H5@qQ@c#S-B9VEVb"&T3bL1XD7e(`mGJnZs[npG`285q>X<\,;FT76q$cHVQd<u2fBJGtU\op]m($X_AGNiqZ]c6Hs1uDoY
%PB7Y$@ds0s2MWZS"+8pNV2#f#i]+W=+h:bF[8.;0):EF$`%P!=i>.3Xn1VO*\A]mdGl,n3+,m,f5c^&noJ.JI0HfIQXo-WQ8IQ2U
%qU!_6[Qd1E1Fr@(Ku%tj:$1+RLapF9L`SK+O3c[]k^o,o2ZS0rNFeQubAY2frW,3[q"'*]UDCU!TkK6.!VXDiH9m:>ZNV4b11/C$
%WTL$>/;;nmM`KX7cN)/_%"Y]-nWX3>)F[;&cIU\INGZg9\W.V8VO1Fc/BF+b]TR;+5_BT7@Q+te<eXIqF(RLsNt"UF%lra/Ptheq
%q3JoCa>/VBrlp1e(1ehdiF^7;#+#rYD3UATeec]1(Z^hNiRA6=7$*g[Ng)apH<u'\AVsr*gCq?oU-^tZ/8TYo""YJ?<06^(WYb9N
%P%'Hu%EHpeb=UH1]^0;<CiuIO;(jTIS,me6NKAHJ-_qg2n"uh:(t_sCbnbKaJ2SZo7<'-uG!/1/dj:L`pc<U^V1H@KjfM$aI=[D0
%O3%+/4EA?aU$g(o3pNjtX`7P(&nG+HE!^QTFpJn]j6e=#=:TOA6RYog1VQAV_9%uRjCi:>K2bFUN.p1N_YCa_`^$41;!HO;7KKt.
%L>t6c^q`Hm+]r5:5tTO^AYb)4>Am>?=tOE.\OP9qbttMuhY:"t!hN,G`g:JB`7D)NX^)t%oo1WV&<4l8pr:^RM^XEpL.qBucEnp)
%YI(0V25]JXaUIE\"YJbr,6P\uTi>b2!4/H7Hk:%m!+=!9E2JIHQ?OT:ckIAVTnN<SU^<,0I(nI6VL=$PV)Car]h;S!C%O%N)9C:\
%+U'lBV='[jZK`a6%`$E531+E9^[1?E_Z.\$!&jNMdZo?1[T>Y!d?UN&1[-R<62EXi4Q>UA!f0PDIQk0A0=)BU/mkL8R<#i7oj9TJ
%&+ri/Ss8C!$WiR1]Y='XGkUu>Pg&Q\//tG/92HHIbgrmL.;WVLY?T>QnRPn5\sMC(B[VALYPjs**"sfJk>Dk91)pf)@B0`t+>ZOX
%r%Y+H!hjr1Io7]o5#YK7\__R:N>4fc&$)KD<CV;pJl(>QgjN8[/7@/S+n/$8IkdEgc7abEqc?5YmOZ4S'$d2DLXd^D^X/IFp#f3P
%COE:N.aLlI?NU&[!_Y]r%Js5IN:/LP:^R-l6*E3)Qc*G'H%*Z?*+pj++"EEGiKB;aGRWRuHTbO#LBIP-_q("u93qtrCtij;@CVW7
%Zae08WT&_1d7Zct>$EMRlsqjV0B40=SNf]#DtrbCoe\:&\hjm#\!1?/Ba`Od08E$u'A]M#j#io'")t[I!G''^NQc#;R4kNbF'<9T
%rRIZf0O1+e:ZL,=[#h>5q5qKXLR)MM]F6brM^dOj2NPmu@N6^LB)K%":Z#,b):YMQFq!p1A2-%",a62hFkIq2'?t%I";bO&p]op!
%i2$h6c%i"_.%ZtI:SZT*:58eh(E54uA/4"n*)CEY%#l['T1kti@.:q4C08i:ihg3tRX_W1:BB:dgVFiCr0T?!=E'9JI&9bmG=Oun
%iP:fis,U"HCtE:\XkGhiCWku[X=]s@Pf6hKd\9cS(qE0_mpb<:rbHCn#K(h/1)pbd+4<HQmA*C,FV'Pi/>>).EB'@9.9SG&NnS\2
%N<Y$J/=f;;[s>o(e&a^Z/fG13qTs;Z#1I"5GX]5+-?>RZ=/+hEUUcafP["oYI:u<L.HncfGeP$Z4*n#,G00lh<^>pelJR_]#l/*Q
%`:)\_!RFL#<%6mm\3G6T-WA7#cIUM/O+pTK!b9<d?r5_\^?_eL*fl'9fU23b:pU4?/h0!hH&tII<3e8J'@,.AGB&*B13O:i,(=='
%n.1A(m:7th-?1<>Xqf9CWXM5;j="*m-m!dQbs<Na-N.V2->f'J?;_\\MN`gd9Nh>i0a=6%FXgHZGTVkk5iL1:\er]!D;Y+Jh9V6O
%HYL5fAro>h4@oe7(lnF%aqI%@CqaNJD$*1RQ%@P@Jer="!4AX'4j=7o50ggB:n.FH@Xq[N!R;Ni;&kq<E!*?WN<d=l/6UoTX<;8W
%74kSeVMT]&omF!&mbq#S7YoJC33c``M,]D.N"Y@p'BN9"/5*W(?\/&)Va\!CXObToc>ZRSYqf&>"?*S0.d([8Vf(re=N44^>KS^l
%j.I3Ybt!bEBT`aP9_S,0l41%iXIsi2<@U]JkO<^QY)_+U:q_.:[nNiQ<6N\;92;BV@sAKIARbjO7)bnl$-fK!.KdXY'.jP!fUBZ$
%Sk1;]jg':cr-fjYW*<3g/73:O[sq(HJ@DlDS$>/pQBgO+Hm5>Rod(u`_bj[8?o0q_cHi9MR^/YaP1QV+ir)a&kYK4.bn?S5<Tmmh
%AaE4fk.)4\P<i]ATNt[?0._AUL.q"!9O4?>0g<!U=t:FclklrH7FT7ZeUm6ji&?(*rjEF1@nIJYMUrD3V%%7+8hbL2g^?g>i&6uI
%4i"@rl"JE9j@h$!;p^rkpiNgE>bZ)3>Z[4QOsa*^>K(,Z&i^[<5f7]];5&)H4":rqX[e*))>iBZQ9UFn\$I(:'hW7BDgc%7o*WJ.
%Q>^JV:<2tG?o1SQ-f^KW4In@V>6?B1>;P!>#1uCeR`A6J.>6*,r\\O<94ir@%7N_C<3f=s:`:b,TeDl6dXiZ<=OC_987jlQ[Ye25
%b>Gc'S#tneJ)6hpW.4eTV.E=n:?H33G:;N79MNBaXQUN0a]Y73W-hXsX[Nee(<`LADh7cgL1Xh`Hn[SfKKo]B'BC)LB+d%4ZZF]>
%Q-IQn<je83MPYQHURJ$u))@+WiDbRRf@p$FGuJ.7JO230=N+SX(?6@a<,67WY*uXaWTgA]@?ne%6N-Fj-#]L(HoO`^@\qPi9H@MC
%;2Eua[1c3-b\%OE_S0SOVm+NaEM@,fMXB+GS)GbFE\bSK@^UJ$a)<.R2c+7+_:'@,.5\?W-q=X5'!E0Hnl[f*PBaOYHqf=bdS*_=
%jB@,nbbdSHXQsQ0b4C9!PA,N3O24K5<cNYV(bA]Xbq!lTlE='%@F>tPIPkWOMaug4b3,Teqbj],VA`.C-F^IU23&Tp:[naEnBi6B
%lS#`-IX6&0bAH9F_::qH;huJOfYsCiW&[iQpNnAuMTM;6Pr,jQ;=.WQ;KAWob@$VN4'nN,<KVYqd4A"+'Xo:0jI9;=/gqcK*eNA(
%Ic/'m28O=>\&0Z58)mTU!1$9nqBWCl_Cl:!>nh>nOij\88+QQ!a[>Rbol46/&pZGT/\%]C8W:EH*k?E@#-Nms-*[KbN$8-2"8kUC
%I607AT>b;M(;7W:U9UEdMW/D>1B`V7Q%tp%>*EY;cXsg]pml9g_dm1LJ[rd2Ck-N@-bO6Bg`&Ac3m;\fa+2H7eM0`_`dEA4oODCP
%PEq=cME]s%;)Fi(L4-?!10aCs&A<kZ%M/HcAjgQI0X_A)DK;1h5F`ULnQS,8f3$9jP]7i?2)O,bL=8"$0TJ#V5#-jqO"_&G'-?;Z
%s0U((U'a]V2gY@%ToW!'O'm9nk<53^Sg)5'#c=s5DT?[n+ib,2nL@mrC)r1j)'YB[9;JqL9VNSD94"ZH1of+nkN"nOD&%92#OZ7H
%N<`=d#(Kj9!f3*_AsD:L]P/^.:sdQ0.P%i;+sV3J3[:4-?^j[0o[I'6EQ]&G>#F>j_59Ci1D:L[O@MK!4C12&Vi2WjP#`o0;,h_`
%,17rd!(@)b`%B$g"Dl/7HLtn$fArN[,W2](.#WE'!M^nuDJ%F:bqL3BFN$'6/aU=I<Z)$H&-"QL;7a!B\d"=\X0>4j?kVG\j&ch#
%MIHTl"^r6'$cji$Mo#N/oC:Mnr+$cV7r(LdfV`C@#Ij0t0Rgbl78h"ZV0*F*0(S:#C-TZ7H1PR@U6W+g<,Aklb(E_h/gsdF2Ckjd
%C!B[b,'BH>PbYmcihOV?dQ^AOkAd1"'IV%(<F2EQ?-+d:@Kk"oV;@-N\1er&/.c/Dks90RYMN'<[g-\hUnnf1CQl$"<M-EeSsIr$
%/R/0%1ZrGeF0SoLg$Y$=^%tJGD5fDM5a@m2Kn4]4h%(eE?Z@=2`I*f'"7Z5DVaD1.<C!:'CWIuRV>Wa*IPNp?jp0:h3*B2+er1Lo
%QtI5*jorH.JR^f,'ES..l$cXW$kfW+b;p0SI>EgPfN7$t(/T-BeCBSV@\_IMYoVh%W$?DXXhr&70klc0"7LCiRmZh[=NY)8*5=B#
%i27XihCE8?]8%YUr"GP3k<^nQ5S*CF.X7V=&DcJGqr'p)F^c>#hXXbB^#+IG^3tI9Dsi,Jkf^0D4e"P.a`bGunZJW.r2;gL#PXa,
%O6<XjC&$WRGFq%s-L.+i0CPs>p/g-6p!9euS3Hi@qAm3"KPmsMH1\tdIXBoiReu!T]Zn(YY.&?Lkg&PJ,=&!pf)><an+W@gF.!!6
%J,]&kHb];%_,$(O8=u@.]oLi=E^(I,(d7oZV"OV[+.LM:PMTBsTA#pOJ8Y(qC]=6!o/m!,G4531pVm1+k?lQ.qY018GJ>6.<Nf1$
%QCK5lp?0Z,ba1ouoYE34RnnJpIb+D-li'0Q+3]ndSjh8GqYA_:f=uY$kC'/gf"c*,h`L].q=QnZB3r>op;c^r^",gmM7]StkMCKA
%T3Bg4c!Qp0OSe!\TDt#uBm0I,RiVCgrD,Lh&MZ27[uL>(HXM@#flt3If*<OAnAWS2Nn_8#oAl5Mqn_'3O$qT']Bm@n(XE&0]QFU^
%=_!G5*2)BEp6Yf3DApe$>C:Sn_=]J0_;N#<PG^q2Z<i#RIXQWf<7:(k^O(HZ3Ao8lTc:,ohu')WbBj-TZdHnocc*SHIJq^_Zf`tP
%MgPEmS"%dLrO_Guh\VFPe\/]oF\/dnfpA=\lTQfdeU@81m$V3E8pa!AdZ-QZ%K+P)Vmd`aokO2\J*N9jl@4!;n>P"klh,Jc`dI:/
%cd)s?rUdq_s)("_BtPi6g0ai8I+diEc'u7`FmdLE"5YPaj[g77/MjaeP@*_G+(ML`Q\W$>b5LI"q^^m\SLb)sDdW62H\H@Md?@Ah
%Buen5UZAm;DEKT:[Fb/n2gqU.f3.]H-g_Yh-7_p\jOMFFEN``!H>@[[p`_0P2-Kiph7.n!gK2-*onlH?qVK[VErF<JqfD:K:u&,K
%ns.o*iTnBJ>!MDFLH"#/SKE-\aL&TF9nqPlpA2b'-h2hp?=WTCO.ZAUe15Vs@ul*pDnOnUIKUYrdp0)_Rh&g=P@*b6b4Y&uq=a$O
%kdC<2gKpc/TC86S%mpSKrK9fWNnj*[rY`5JDr%-oc%GW:\?o?2W;G=@;6S=UG5Rj*AFtOZW%XK`rScnb5;X:BUp/IG7nun7lbN\t
%#FG/lh(4ceau,5%*o/I5FYQ*AGjm12m.InL*u=O,()f7uNZ[_^Pq`$a6hC+l2t%RWH4\q\Id?jjD[UpjC%(j6]N7;S/<fs0o@CV$
%b'G(s5Mu;!\)L^95E,WPhZ*.IY#jtEGPpdKViOH<r:]RBk4^18rpm2egM]fq\CW*8I6.<>9Keii,'&0W?JI$tp!]8BICW_?ldsal
%-V<dr/b]$@g+.=k/CY@1Ip[WH^@"@lGQ5lkW.d*X/pi!cI[TNpce$!Y_KuFsi7<)i>&PL3Fa#T2$]Q1a=gEsHO8!QT)*W?R^&Dr9
%VmZDHC<BlGhgUhHMDrc*?OPu#J">KqT(gC>Oga7>ZeKoZ_d4;*G4ETFS+3W=-1onqjCd.ap@j"K]mabqYa=\Ke)TnXT*ip,_8uHG
%ftftoc'j]sg[08.HSq.'II@%(a,A6p?UCsR?dEdQ8\/9V/:2WUluH@?_hY/#!npSNs)>16ku[VoR>ab1EbZ*!84j8Wh6.'-kipKX
%IrOnlmp=DjkP89#4Eu2M3`XM#!e]D-jjbGY+2(hIeG[%BH^\B3q.0$hO7MR+cbj_@e$EqmoI3Ddn^GUDdK7PgN_Qk8K9scinlbH0
%4oH\1DW^OLm=iQejT7YpIe\26oq2.hDQS0[h,u-"1s<7u]iSR+=9%s\XXE4+J%OgV."-tHqsDXHEG5H@o'bHhJ*K5TMoqZ@dl;ca
%MJ6*AFPZNQO7,/onu#:_]R+Q3e*_Z>S\-SWIf52.g)`D*S`HDlroj>cH?ta`Jf(WCB'29\@%*#$d,I/f+mp0El2Bl6YGYd,*f[!2
%MOq9;Vr,8h<^dMUI<41hCI'oHf)GD.FZt_u5O*Xne^6,+]DfbN5!:lY..h,`pYqOr+:[k6NR)JX7+\'u&&1-8%0QE?(TdMC:GZ$*
%q%UEFDglc;-[[ZXKf!i=J*,PI_(I[S(^I`Jc0tWV2SKLVl&,^?.k"r+?PiABf);b:pX>:$dp@;J<77iI)9+tWQLt%EQX$^2Yc$Q2
%g7(.b]j_s\g+10/DlD7m,JD^4YMU*=Y3OY&qHR\(TkA/S%_h_t1QB9h)lR)69X!:j`Wi3F=/71\jBp)WrNm@u8pf[)5tS7D1(D-R
%hi#U!?bTjol\!O^nm4%/8:0H!+<s_HBLHFF5$c"`a$2[>m1jIV3Z?\Fr>Z4#;4mQX(\QlKqj#;aD)56gl:o!kq>6M&Rh_CQ:0;6i
%0[&Kk.3tb+_L[#TP;=U]o\9s!]P-%Y^GR)WDk)2emJ`[E*UQpTn&r.sl+oJBTDs_OVjW>@=R4fBW\p2-(3mWm%ON%(]^))UK)VA_
%_UgHf=^?DH4UCLYp7S+#pr/I6&O,j7s7Bh:fKf%Tn&C@ZfDXs9_6NX0GseP86Xde%It*>"R04_S\@$f%GAa)1_#%c%6!kC=#D%V2
%*@q!ak')]<3qr+#n(s/@mQ?pPiKWJ@"BrLl9!gdgmQ@iDi3-4.IO:OLjBV`Y<qhB6lT?@>@QaZ*^$)9NG7fPSkP'Eb=@XP46M4SB
%N&Ntt+tLYE(%iq;k/gGUh+5pS4C:71<QEIFs+m<1Um,njAc,`^g?e3&<FoJI$B)iO@Wd0k4h./4V9B\>H*?bI\PK;VSJ8>8N_N79
%T=,]BC=rl\JLWKEJFrdnZW=#o[mGuOeQ.L(m;aHBnkPA,TgCeUL#U"i(W'<ZAmZ?!mY=s<b[^9kE>)%EUH=?][n><I>M&jsdJBQh
%LmP*=a;cgjgWR9+s#+lP:V6MaUNPr&rUq%4QV&sB1KBlE8/G?':>1=B^5sO8@-YA=FS>\D8Q)4n4Q=g9?KpMMBCARLU1f_'nb7*1
%Hj@H@]rAE?$5JgH_-9;nE'lOM>>YNNc?&-es0M`HM(Q'"Y3tF9o=R%=F#fdW<+JD"n]Qm8FIN)TrQf@u<<]#4n\_AYd<c#pPYKWF
%]eg$IkL&mH1u0eae26C4B^'C(XFFrL^$g2nI0L%<45ehC*O)@+8b@dR'A%'5$D%3?B49Bh"%/g9ii$N0a5]\M]rMiqJR,g<?#'(K
%V'/].HP2k+m*1k24,Km#I"C>Jk>?*.ScAP%k#'enCT&$75jCBRLoV0S]tC]&UX7\?35+tY)I"feDq]K#K)'bBdl^?E60`pJ=NO26
%O+2n-Wh;Y]HNSI\GtlJm\6c*)nV5`g$#.o+f3@us4\)Cd]@;*p*?pZLWlAAZ?L'X'jF#FW)LIe%r`lQR4aZlQXbRip-&RK'P-k&>
%1GcPk647_>d%X_r[!3ED@A\eA2N&6"K5SG?"D8CgX$_6ZdF,k!*C8bR<f]);qnp\=Z*pfZIJ<ZFiQh=QGL)c!GC-d*&tCjA]9NPA
%F0BbCL"We$!Sq[R9e&cU3`)j%c]=.\>%3=\O&9&$<8XCSh_ZhcR^>S9^*X&gK/3+j\@!ZTf1DEU?>$HNl-X'jn9@'EZ]:W:4(iDt
%2=H!eqb0HV&dD$(Y$@rtrbgD/TV;tK?Z,_^Tl0\dmnF=CH_*s^85e&:5$\,jSG0(+K'h*7[;KV*0\/q#hUYNmiF_Y0TBcRO(<2F0
%?U&HnIUemBA\il`0hM8%\&Q\M2#DmcFUm05K$P+F%r0,j]56XRUDi@!HGN=J/!3qhhSone=)r*<"[0QTlrbekYHs#1Y"`PAFlL$P
%V=<uJhc(c0hJ5t)ceQfPZ^A&4FWY5Ab-<_9].eN>&QlJIaF+9K;u67=M^^4nE\F#pc@,&>!j6rG`[-fN/qf$,eVe)>9\o^mO_P;S
%>hBq;*=op-)GDW0a0f<eG*/^[XZ\K;`'Z-iWIjrY0_r/&FjM3E*9?Q(:rD"I1FOr?G#fno:OBhBAm]GdDK^F<1^_`Xg@=4:R6*bO
%hrU/o4_llhkp8Q#GWF1,/0&l<H"p<u/_i\-\_M4<`VL1H^:?Jb],+N$KjJE8Q/4)K(\Vd1'+AY\O>dUY0GH(N*-8$m\COIA<ArYK
%6NPM\H=MXkh/WP,DJlY'WSYn-!AHSODG\DI9C&JXf(M9j*maVSE.ACJAQ;`%o-gQt"^93%>1u<$19=`T/WJ+\g7t,\LR<]qhYp"3
%#i3.PYA:;53RHUSnccR3F$Oki5BKuW#8L4EcbWM\F5'o\1DfaL&[F&tUq%G(I7\JreFejl,^Z7BF=M=/\HfNJEmp`a:Qts$qa+mu
%g2t68;;FuUNG"r;7U).TFA2Y\c0_*K1+A9%MDjhb`cZA$IAjhE1P1jc1uu55^](p4[f*,-dEQRi=+W"UD.d\;d;@3gDSqM:WoeVg
%DJ_iD/SN5Q%0MlNG;QCcgXsJ&K&"buft)IN]0Ms;^_;9'DbZ.)c44B1M2pW;:m7lHb#S+erS-&K>sGtY@(Y)ln*.+A.eSS=WY*k$
%FnQkuQ*gC9f+oU64$kH3!ru!/=0K>fn&$?[Mqb[Mn!=*QH4CJ9/T#u&a1j//67UVf+&l&efM*=\%>(UtRTfOQmT,"'G&*#kg-T^u
%`/sauo)@1,2Lc+-E*8/L#L,&.jl@gK]j,9R@PiB9BP:6jGJ'3q6(6Pt(=>inVDV@p_leMe'=\57?V.5d*;c5V[%O#IJ!C]YYT#k1
%c&\-Temf`3s7pZ;@WFThacRp%J`k(KX+nT,N6ALmjNh$E_1>qGgSh(e=dn,%)n,7%<N[^o^1M..=Gcm#Vq"2^VOoAQhj[^)bL,,T
%L"7T8Ym)u[%Jo:g<KD(PL=JG]j/mV(TiO<$p,nlaHE1itVPU\gWD9V>0^e#5m52fJd'Y[[Ei3sRZ?9iN[k;W?mB%AZQ"GqLG'KLM
%]h2JO]cT=-2fJ_0C#RY:/M3ii>dmmlB"u7:<H)_phM_#ChI3VX4*6!>4UuG"L"qQ!;QFB8BF9[Z<=W:PgK?E'E/s?tTAP(B<o1"H
%^NqYbZa@Dlp$pFl3R66(Q;;(543./ccgk48GRMRfC3)7Fq7NPt_2n1FTB.#S7i-q@cI[H0ceW"Oi](<:=hYL:ki0Cuq3oY#NAMY]
%m,p?8o3&d>n*&cHa8)1Mni9EPR,`S=BDDh;%sshMq(,n?@S4DUq3oY#nL@%M!-J/?]LS=%Og,^J?[ipWE,N>n-+)),+g+^Y\JbD(
%EQ7nP6X//B_(uRaDLG'l?QcL#W`BMG/%u6BE:pm_mhGrT[]"YcPJ83IAEFi-;7f20YC?1F<%P&&DcTJG>_?8%0TJVR;FEiU$f<lb
%>dZVLrL4#!H3OrSdV4@F@eNpfC+-+=L\L-b8)p%ZbBCMoI^Aa(NYAAHittk$IC,kkeoP^>kJi6ZDK^t#'J!`(@;nAglRT]F-K%cD
%]:6?bA!5IJLKYhOa6qYuq]LitmP9R(QOSbDh/7p!R*lk5?9k>&V.aT9:tRVgT$lBoYN`?*EP0j2h:n";C]<k'IZUfV20?L^p=sGe
%6a%lbDskt+64^=*TZX<D@iSNKaoO1jCQ41cp92f`>ug\;")W?5]+4*b%U0oB)fa1<p2\4-T.+jaR]G!Cg7Ln$EW/Edhb!'"f;n"f
%<&t\*+6OV<^\M3kWE"j^`--:eY'O,;hR?dQ?2%D`He4tH^[]LJf9r-m>(j&JMRsc2PZE-!LNblWOk(AnhfkdE*SMC4cl.(*qDP\B
%[YD5Ek,fHW/H5>eqP0m>O7iJt0Aa2-^2Fee[-dRpCRmVLma]H&!VMeN?j-#t\"//ur6qF50-0tnm,uV4-.UbN)t!0'[>VIj&II.*
%N1TdRE*_q`SQKSg[F_RI(9a4RYe-R,\pNYYG.g?G^Gnj<F/(>4lg(oa3HgKWUrf7V-8j],ih3LGWk.M)<c"9)^"M_IY3TEF2sALM
%f7J;ie>qFWY/%EPa0Jb3-htFSZk#+i=r]Z*h^"J9g1Hsm61lW)AgTX29#4(NMe_@NGqI*Q#7V&HS,KMH2!CaAl#?l*\TucieBk6H
%VmQ`:qHLY4%uK31GP/u'a^)T:mhXgD9=KjB]:IKAq!Q#/*sshi(u3*:r`=%',4AMB\plfB2p/XL@eelWMe=VBDsVdRO7R<R67R>c
%hE8]CgKQWJf<fi[6AK)uT+r>To`c6$FkNR=*>#54*V?GuFAR+4DKcS>@HYWp)Z+dJ?=f(U!t*dBd`ThHdsm9(%5qG.X8r(Zr+Po(
%C<`WJ'd.)CA..E+p1ui%2tXLjqA>]\jV[-9?]W!4"<K^ep^MH7R0A<@Lu1HPJR7$Z%c&At!Tot(Vn.Dark#H-3k]LJabi77<s-`q
%AUIttkM>jR]]qY3emWoB:ZdYD\Nas+PBd^_m2sWcm?;ho"iCgt1=)"%KYr)QgZA.HWq`s0K).HpB="QH6G0FaGp@9'g,kgKgF)T#
%&[I[[1rRKu?@f,Hb\l`W*fL/[+e=7VbU]BpRXLmkdY5ntSQjRW`CT%"[J$;\Hd/7N_Wu#Xo7iR^,4r28.'W_ekgTQX4ITt'E7n/d
%eb'm[DAHGB/am!0ToSj9CLa%6&Cf]g<J\<V*Fc.sq:.-kofC-$$I/%#LR7-%W+c/%8$=^@i3D&W.+/#r<nZ*F&\@H1\DPmq3$Z\7
%B5)&^ogc4$<Aqbh7l@Ep2EUj'h"DH3=+@;5-Z&tqh&hW@$H-4-Xn<CXlK#P:p"'X27U#`pDGL]"Y%HuW)ft,G)mc=NRr.o0"/FEG
%eb]1#[rY(u*3Tkel2Qi]38Wq&CWf)NiHR+7Zr%!Um[s=n@!0g9'YBVtZ>XXBOR/Ik3[FUb[LUEnBn+NQdg?qn5V8<U\opC_qMejN
%i/=b/C_V/uGt)T&+0,q6nX.njH(k3Ije6a"\"n7AL[mj,I;NsGf:[oiqHE2)r(p]1m!2fjo#tuNmGrV0L[sg&6gqpr6QXB[Q_RPk
%h_JQ%ghT`*DSNBGUmF0\h1"g]3?jJ9%X04hQ<"rKkUf-0#X-\Xkj%SHm,,-PmL6=q=]:e[SYdgcFuKrtduY#[TPYJ.EjSfHA[<f0
%'tC&SV[Mq7qC0,#<Xn_0?X!Ib2YZh)dFdgba47H*Vt%g4\S&nHQi]7jqU_EhCL-n6n]f_1C$41%m)nb%r^T17>25rX^$dBZ^RPCF
%=4cCoq4=7+8h(^>(()E+eiAUGI_Y."?"Znj)CO.)LXDHT?EPN#fWTYbcJIZDGBLsohDQCdqn)*shrha\NAMXK],s3u3j$TuXQ`.*
%dOUH\4qT^4^/Oh"S4?-M.,*\L],,"YJ*cU-2HNnqNuAQ+"`$Qr=&#jR4*Pm%U5sH;mWooI]2%X4?(_)&?^n*F2>:nB_+$Qp1qaa9
%4].^7eb.eY=Db3N:Hm"9Fr'OH`odN*@"(CQ9J+"B]5X3(%H#2j(I+Db7c;tbh]Go1?M"r"IYH>XPGpb@o_tiQU>h'UUpukUh8-K`
%orgflM!oJW>CVRQq?$+dqMUrF5?tQOYu\8'jmRH$H3::aO;Y0!F[Xi=miW-gA8SI32:R7BY?,kS5;*QYrOcIkA\45a;;3[\lG9i_
%aEkf8p@kk!Y@Y>^?e0"*Ta_ug;#d=bIhqa,?(l\_[uOm.SLTsJH9\F]?DgW8W'3O`HQVUTg)Vgu&.a8pYP"@/E!Q7c1S3kFKm$Z*
%ql5U-24N>_fN6[CDY[[IPt<4f%q6$T-dIqJXW?bD\j,Qt&,*ECb[fpiII/EHTapcrSa(!qgthG8^8`KI&\:*jedhCRSa*8:)B/BY
%?^8Z6E@PGMK71Zh:A'Urhu,7m_7lphehlUF4kNi4PF-9+lX4)MWBS@R\t+J%<Gj<>&DuK`^A:[,><UWjiW\K!37q:YC8BI,ci+IK
%2&=p5*UKgfeMfmip%0)J'\\WRql4gJl6>\P37q;TWXfK>D](]E1\XZ;foYu54kNi`aZ%F3E4ZAPWW\:YX8,Ar!=nggbN)3#Ao_)\
%ql1VV=AQQRK72k@GlN,dosHf45/V#jA#/Ou`k`2Z<B7,DghO7F!G]`qLs_"DPE(P52[r5uKDGd9e+[pb\`j!JY50r&4hJCL3W,-a
%0gadK.t1Jopm'HIL47+FC7)F@\%\dfL++T)-PLRUbM-^`%_fAs(Uor=m0<ebV[?L2WR[kU\'bSrJd,;iD,I_*eT.m.;JS@>htQnk
%km]PC*o6UQ8K[?b(#.5M.1[L")`#pCmGi[@p'-m*n,Ejqpn&C>)W(K5qXM<4s*`4"BDMhEqV2NZY'^2P:Qrq^s4%RLNTV>:#$CP#
%KIjh:fAB^:[r`%OD:,"\`E)YVr,8D!'OIj-V_.r0r]k[L.AsRDcpAge4Q=D.fgP99D;gUqeV5%?HYYbS^eG9JoI@>,[ec&(/@SMW
%nJ15U4RCblftP0FNQ\Z+50hdB<,U%"N\[n[V"/b8b9/Zjij%=%-@p(Rh]"X@ROB1j3^2iV,"f=JeP1MhXCAdOfR,7:2FFTi/oEJp
%C?M>kl*&mjFIDlZUi(AfF%RE4p@(eKJu7;&A$BTuTNaEa3]5YEE3-OA*cJGX=1q,^R$Q=`lsHs:lb1c];rtRZi:UqnDlBJff"973
%0c\hl"d.!MXL9t3mRNO<"]ZNp(LXQuC:iK6BmhCKTfIS9"P@Lb[eG7\F.S'q`i(>iLZ*++$SBLC7Ks+a>$@t.bBf-Lk%<d\3/D8r
%K%gjdlNfqKX`#HJ2QebgJqea5gIS;mB+/0IlVeL"Bb,f!Qp/T'nO,gQL-?<]gg#T9([pnY^L>HT"[.Jh>5-(on,?=HBm'AoLj/kg
%]RuTJVuQU2DO'\i<?Js=/Z?u?9pH8k55dF9?-jI99l%EG[<hSNc)UUl]_gm26^OGEC\@+&g[!Ve&Zje(pNZ<m?WQ4bN:_UdWd\H]
%?fso`=d5`lJ(jYqD\G>mjQ`Dpr1.UemG%&h/gG&n`@l(f&N'E!XJODM;0ciWVkAc=Of!b1Hn`S--psN=0-?uN\q29ep;`r/U&-&U
%P^@W'0W*BmV5cVFeg$36ibVehV)l1+&D^F=NKSHXGIT/##2Kg(f'*rRpXZRHWmL]&YDu\$5)](jo<`&3ZW+%;;CS0RVWER6cJ:)n
%*6rgNUDN>q]q3gGh!N4+MoROI?B,fioF:d:B%]sYQ@<bl:$j%?FQ5V)(*QnQ]3RJ-Bn=1UGrCGq4GN+>h!2eT_k4QkO7ZGrJXfGa
%kAHP[/K_lp9<)"@"Zu?;Q?W5;,"(i+ohh]nl)b2a3A%1j(qpoX4Z[pQ2Z<Jd=9$]m%DboZXeR_?5PUhd>kI73GGu^f7CaeU-L4Ii
%jZE'b\'![Ds#4rlf;5#8S>YTu:[[Y"YC$2NrY[nbc1Ukca81FE_:hf]789r@4*Q1o&!#r#"+K<9Ta<[`&_G(OqHVY(Y7<!_s#f51
%hq^NcX3SecCigitL\#%"^O.54=EMm1brkd+=*G]>rAso<c1Ij"#lGouo`l(/$%E7rEt-\aCfI!S*.d-ipV+uBT@=lL4DoKC03G0t
%p$2CsZTE3k/0,%EJ#Bn[G7\c&ak"`6?G5Vf3bR%Jm[K>_%SqfX3NHU@n\)GRhM,tH`M5/+O._7#lHdk%Glh,Q?#iH?#HMcU-b[WD
%`'+u8\%_cL[j%!K.6;P5re7hPA/8G)a/:f0/p>nf2c@&N;L\i68__GXI@]/<!MriCf_Tc(^-$r*A^f6`f?X=9JZR-#ZosEV9g@Iu
%&`_H:qFjQ:RHQ0@Xm*o5:"7b8!6=,3g(kE])QCG&5td]\,n"i(=C35/%2O,5p7(bjom62*?70A9U3V0tc_>Gh^dc!"6=0"Y5Hs)U
%?&,aNrLp93D0i"M(LmqflVD?+?b'IU[1cCZ=$;LI2;#9iabOrtD2i>`-<e*:.s;G90BJ>R@?00O6.[>Emd=DpN>:]=X0A0RgdTi+
%CtbLcl\TA`2!8+Bl\gU5kk'o+QLDFi)s2t^GHa(K5H)7dW%TF0k,febD5.%(d.Q),qPZN5%%XoR\eUU?Wk8<.>3"Z2$$A7,N^u-6
%ms-]W0.2I9o_6#h;<*3;[(X*AS<VH><;W$IH<q-0cUk=S*`]2ianPorO.Xt)3VRXG?(IME5P"`Z50kP3mJh!:N<?$,s4IK(['.Af
%]YI@l)P2LL?_@pD]cIfd&g_as>\Su<&"iTk=GtWrI7S/+!?Ii[H9E_,?_O%f!sXgOr_dUHgPG#)Sb]/_,DjrVX*btn*7!$bOi1ij
%],'E"HR,l`Gsn#*#!J.%p,lf:f@f:W@b^L1ZHre8P1[4/C'.kt*D('o*c\"M0qY<fM/CQ`ekH9!O!M.sO4Y83Y1^[-5**d?QHD(5
%gQ*)01d4f]CQB5([qn"m@tc0-C)p//b[Z>Oj[\V8M8ot(a0]'#X:Q?C5Q"WW):OgRs6sNP,IL=&h<JL(e\8h<Ntlt%q%q;cE@+_]
%*[d9L_*_+po!LjR@*IO>*Y&`u2opW,eV/a]*B"(+p@[A&n=dOt*^&d,"*H[9*o>>I<kTP:CjE)3YR_f'iQ0/_<>6'1m":)<JWX88
%hr#"d2LG$1_+B8BGj$(4^NN_e!]A>WLX!)%ir%&?%j!VJBBnV;*^"6KLZI+(+Wig_2@67gi?(0eCjbVhUqcMmoa`*%8$mPgd`2GS
%GXrTN^341k\W$h)rP0KK[DR$4g40\T2QnH;2RT5]D'(lV`krX:4nOA^MiFn\p=%G.+$AoQ7/d`.*r8di3O!u&^<[#pS#+W,=R#Fn
%_knh<ZdsC`%j'$KUVSgk*K#\]f[FS0Y8o[/*5am`fX.Ean@QDPqL%e:3Q-7ISujW#Gk_$l@In8i,I_\UY3-i^mh?9-i*l4`fnb-(
%FjL@(]`RquqqA1@INL[gQ;Y'9ec18Woho\f9s8Vcn8R$T,j2!/%pL-dW!r&6m_Qg'f+(5-_``5mqI@M3dA7;o5p&4*p@URr1\cTX
%NT\(N8'2VL%alF00:Te$4'0,7K89E<;`JlKXF'>r>M>/L*]?Y?]BU+A*qo=rTeFR'"DF_=&"?ofj:Q^bK-'O?i@Q%1C\-ImZh)'d
%D9)qm?,c`n%a-qf"$Urh_!9i#%j':mg&KU'$2!uM@C)2\(@MqIIoP;XhDae\pN]`Qm^5DuBgY+0M!)CM?TY>r]^PI._lA>j[EE`G
%5BtgcRb#$_Ka/-nd&LG7P_D$FK84lWFUnE/@Is<>On(r0"!"sWR-ZZEG1]lP@afsbboS*jBgY(/f^(>Y2C&NUn?D<t>L^$bdf4rT
%c03jj*:%_T=2TZGc-aQHX6P=#GZ\$\=hELg[LXGQF6'g-UUGI;Y^*AgnW&kEr8;#F>X9/W]@hSAr_g?@q8E!b`g^*gEX9g]&dNSO
%[=1QS8%cT`LiUaE!F+\407/`;h@F6!d,#ar/DFSOb$do,c!n9UMi6(PX83Oe7QrbSs3Ku"V)Mn-Jb[bAE#kK&?X5gPQ593Y*);OM
%qjAa?'+;Y1f^u@K0?9f@=3kM#r)d'i=aY>aA7fcGlU7uRf4>r''rt,^[1=?;K([e]]>8[!oIedFp\$Fg5(25n?9OZH[5G.J*\R\D
%J"N57q\)3/#5d06mpQ1dg"kT2j-,bd_i*tf_2"N*6#a1kpG;S$]mDF-o^Lnje^\#J'3Ed]5BO*3J)0"pqQk/4meY5jdcXB<Sc=89
%VI+f>/9WD\oU3S0V0c&tGs$)\F(bO?lc$J#YNFI)8'0.c';&S_jQ!G9S^,Km?JClMI/39E4%&0D-T99-YKg_6p]":E1:*hgi6@6e
%IJY^Jn&;d!]*8[C0+c;OY>a>-'Orp`P*aGrRJOJ=AEn-riPW3[b47=,Ta\XWI!S!PP&44P<1,i>i&"<'#EK[R[F]?JK(V4?G-8">
%2eV8h.ih]>4nE?9c90W;DGNg+Y5US6FoD<k"&6C+^:;ki(A><T+'ja=0^E5a.d_C&pN.lW@f"!r+8pHJJULmIpA#YURV6MXmW`!/
%qgG@AH(^cMh&2]O^]./tgnK7YoY#]f[*T/##u=YFkPXI6DX-QP`NS[pVd")rI%4?-^%Z/VEas/h@FU50CI_=l[d58fQtfFXXr_Bn
%0)p$+c9eSNo_l0mcGPa6DG8E\8c>sR&%uqXh\Fk4[V(`Q'L&R]Z]JG[FEFh+lN6=jr64I*_1pP)IJe?iEbY@(nU)1t0.)mYlA+;6
%EcM3\YV==O#Zj5C4N'HHRH6Z3q/0Dt!r074Nqh@a59HNU+1;:NK?Sgn@7o98-*pp-1;h)O=W8X"^,F#]1[_]GD9ps.B7BeJTPq3,
%M=22r2_)?SC#RNULq+s"ps/GhAsl[!A3X(7Et1^*5P2%H,&_Z6Q[-YB-$KGSKSSib1S$Y4EoY3DIs,WK:>P;2);H(Q+)[P$<7rgX
%%j9KA(EJ]6]TgJ4KCb.&T66iUmB4-)qN9[W7E_LuTiRTiEBRj4jR1<?E]p*Qht/@A04;?H]giIR:\X9AppBrVgU_e/qWZ<bVLM$-
%n"r<IK:Y+eq"Edbp=PXFDQdPbDP(H^T58T/3EEi$F.m9Z*F3!XqFK"urH16:5A,GEnp`N6IkA?n2dl1T:c5A1S,TMQ:4qgV<Rj&C
%/G(e6kYXU+#%LS]]q&,NImOSJIhm5"Gd&n\48&Ak`DGJW2%2)-dG^m8+Nh3lPGZ`8O*l(Aq`",e^NI?PiK^EuA29OeRFM30k[nZh
%HCi"STS'2hs$#&49fAkbD18)OD3F1V_dB8L'e"Jcp;,77*X--b7b)XVbA7+3_+hromr,N?1M.n452ke5Wc]"UBn(!QVF(=H5O>@c
%1=bP'ZRIUkke:U(c/PK95s?@I<($WDZDl#=<J,XZEBMmD&(6Xn4kjm(#:A3_=T7skl'XIckU-(0='qhn8fjFQe8_&FH]u"?]Itp#
%ho,a?pDn24rH4+/+[*GNA[f:NZFSAs5^</!h8A1Bp(u6eMYf&,=e7#2rHS0Yn8/&c6F,!<VM\r+,JHAX-dg*!Qn%(f]oDORjk^+6
%ZT-a]`n$m7l&?_P1L2qlI9HD_o(\(<Chd$O`j<JZ9TNo8dH:(.n^E85eCU&X1FsIn)#7<J$H=o9.%C4MD"SY]N1E*N.\hC>?U#2$
%kjT<\YjRD<im-<3E9@&'.>]IC?%0$q5@#jAE#2Tj`fQUsVk^P<r@9KDUSbK\W*cjaGW)@HAHg1/K?=tWq_R'$>CY>77?g$c6%-5j
%QC;"\GL)u:;WVPc@-CQXlaETmJBIQQ>'P@3\uXT6K4sPOfP#.nhH!&A[e*%KMbet?otUIUod\$N5KGM@X'8!fbJ$.rZ0J0o<:qP<
%:fW655LV4/ITbKmWli?'Yh`s=4e'0%<uK6lM-Y6Y0"hSA\FeunoP%=qT:[ZVe]`6G"RCQpa#ih)du-6R0$KelV*GdobM<QGG\Ens
%r,h'pN<5m@-N^^4:OfJQFDkjQb>61/B=g*kH/H/Oa9p:<6:r-%hc;lX1WstagVjI$oqTXg0P2/7B]J-2O4T#jHTtRGf`*f\435hF
%ZGO=kpFpR1n-A.:l+AD(i*b^sanRdY3!@Amdp@l^9ZfGD0GiVrn1I[(bK=Y2riorL:^p.F2bODQ*D?BNI2!WM!kkq8)oq9W1LVk_
%(k$[$3;3MB>_S,D4:gR]S<"W-?+N%1JkZ#%rU).!JQlqS4jgf(s(VHd2>R$<G-@'OonTd3$m)9<Fkn<uDfr3mE:qT/_]<rpb?jA)
%b!qZXg&)99oX&rWIIp=+>E`*j?e*sh2<1ZQcefSa(ICVXm64\WV`qD<VS$H$n`7iXXZ7WA\XVj9/:XT_FQRBQf_ItTo#![;:tGQ>
%XGe6JIoTL'2JJaW;V;IX),o"Y=RJ<lqh,"l74^]2kk3d<0T.A+)7!q8obB5#Q'h6/&9UpR7tlo4^'l^tr+U#J1M"sh[8'MJ/Ms;Z
%A=`DJ@ngI'SZUlBj`SLLU\[Ni47u\:NF.Q#X;BRE9Y7)])f]1hkL\b[>K]cJo@$%(TCIOSeEOhMIqmD+:6k*VhG&<m2!$'^h;k)q
%S1e%*(=;u<S"+VbY-`J`$-^#-_EE4XOoK.PeU64*L\]Ro7]n)#X%DAe&sXAWj=1fH]L8`HJLBUN_'KsAlE"p-4J$ikHD]nD*%cYb
%2SZrrkMr<f>Sj>E)&G*efS><KBOYt/7>'eA=Dp2*m\o4GDnGpU(NYa@o?PRhs4c6'mZk\bh;<O4,0'jgF896$n)9p[2B*<M>+7E;
%\=GEiG<p+=PSS/&Q(rE/_TPa`B5\k6OudOJ0HEjCc%BtViW3l!:.cIak?JC3PS_:R,h>4EL[Q:`WW('S^$*h2s)rFn'0J?9fuL\O
%$\S@\k(EI!l^O6Fp`q)qPSXpL/r&]804pHUK,%t8l'B9hH7;K<gF_g\DjH#,_UH-;O4BR=(Y)4XH%qU82c7kgC;`I9Uth("8efLI
%SVc;&qgu[)]B0k;]ejioiT0pGSJS?SVrsDGhE[+`^]&Pb'!?/6:QKbp5T06mVWPXiCWl8HW>?YTC3RKKQ-qFeiqLn>jlX;6XKkZ6
%oAIO*d5,U@H>6bghC@9AcIM$a&?X.s0DX9p4J#m2HKH'u)rKPfGc9L1H_e=Cq/M4`\=#IL=hM9Pj*PFfS'e.uXbHQLFM)%9:Mm1U
%K?sF)9+(<0D!U,$\Y<B46rS<E=PRN>_RLbW]!6,:h-tJJnSh]lj6n5cq:q,b%-@8^iQ:f*Q/L?;7iW$dG7X)Xh"gX;$2*]>PAp6]
%g^@6(-bH;^_=GLH[ju*<Qh(He(FjXMSkMA'J`US3I5!fBI9AGeG^F582<%:Z^<$gjIruul]d6dk#IX+s\*k1UVT]7>'tH*oDFT-r
%j27o%rI@LL#tBIK`i>6d=#dnkm]A,:[j=-^Cn:BYCWOgSS//YVBM-;r6$&[M/PUBb<EPa@Mm9Q,I6"CJ\Vr]j7Z/oA+6!blCd>Mj
%?1dC5HK1q]O+B&ms4Ye1s0>2e_n6$:ZO;]-ZPW(C<4gtVdS9GNf]Dee@cQt(Z9(P"lg:T![mA>t#$hSDJfP(7VQc&U1^8t5BhC\>
%DN9ISK<fKPKc0q5bmIfcC(Asm2dPdq4lkUlJ,]:N=*N]>FPgGms0d0V(4D'(k"]6d0(fOu:G\'0*_\to*h5CCUO\A3%R0@G=Gge_
%:OGC\9@U0C?M*L,fV6(\3ld]ohHs>BModVZQD77GC)3r<hHc`QG3@7^34jPk;6B]]EO9`uXI>HP@t0-QcJ.JI/=^#@nl,qql_Vn<
%lO@<LoAF*No_WQ49$*=)>+m3Wc-BS`q.P(Qm\9CnHV,HEEZsA<(n:L#mG6E"5.<a7)m,MIQ0mi;?)GhM\J=usEar\Nd0t@4\k6TU
%5@X!jX(,BEnlT)VTUhNbl#:67JG@+Vdoda@C9pc9/iL18mqX$E0SPJGZ>.qO@;gbq`')_5GgUqbIWlCR_2`/o<)qi!r]5N+#aUH\
%,ij^F/SD*Ca0nYLcGPXPb74##]WPi%$cfaO2Tlm<<dGP3UIN4aES/,Y1Aa#lTrr^3S)/I+hHC?5G8=/5\TjLA!ah>b)R#/iSB$pW
%lZes;gU-s+,!=-4SsqDjcg,YJrD$HVeNNY+%siUD<#E)[`]6&]Fo!+pmM.&oaj&t`SCgksX@MF,8:;M?Gq7nE<-21p8(hD2B&g&\
%gc>qerRL>Bi:H[(<eWp3^8g:^]"'q-;'YPJVB0RGnn%OA'S[NB$D#f:PAoRPmO&s45Tp<Rs-fQV-+EV*qR$+XOfG6oRdKZ8O;=Ds
%L)MMOn"4'&a/j=LfAB9UANPpP&?uNpc@<\BV])koo\)9o2;>0TQi=nq=0i^r0jRKKM;rd6'Uu#sV$$;4#\fH::jhiWZoQcF2<Z95
%11udmY0Ua_%t/(7^AIEY-eNbDpuDhNKPsF^B7lhKkRZ/5&'O]BkRY#j%t!9'q1J@h[Q<tt?QOWmNrnj,\\"><nIL+DfbI7>Nu\mN
%7PM#qm$uKGb^,`QgZ=#nEqtV[;>po]<tK7k\+L*I?PX0,-Qhf>n<YqsjlA2HA')nSl6(;Q:T.rM0h$/SG*fV0Q[r</$Vr]fQmBa9
%IJYY8W/<I_m9b:n.n-XYS4b]h>r\U0K8pp1I_<8$3a5:+<7sBZ&FA;V>k@[`D^l6c.(SqLE]p,)$1oT(OCQ6,Sa2%eHOm9jMgNQQ
%:U:REP@fc2VV]$*K*Hc!:@C["k5$HCDUHt+ZgV!+Da`WB<]2#`-+>hA\OS/g2shZ4ZuZ!E@ZOQ=lp^F0cb#8!FfnI[+49G;ocMo7
%,-Ja?ki"iI>/W9pOMqd)%5$QX6k%S\Tadj.L8Y'DC0Gm"-_ksOA=Y\UZdJU)5<mGs?<hpUo'PV=)LN57R=DdcL3l/2I]ZnHT>*Si
%^Gd[X:B+Rhs1B4T(nH0QC3akV:KPh;J"<-kcIu1r`)Si-ZPId"E?.Y-PMXa1k@4De`gtpUa"*d7_o5Mi@D),$a33\1S2sj9iRkj8
%E(^Ge][FnZ]A.=7p*r#JNP@2rBBB&+l-JY=oBeIe>FT-+]S3]aa3!W8Q+(P.L>kufdY3#TfRA7Xo]`RC<OVS]nZ5?Sc5A1r3cGql
%<:>3<\+TaQeAK$6D90Fl>J!@7G?=A2Z.Z*(:EU_BjnN1Dp?++-LW;GHn8)q7q8()'o^=kC(!C/E[Y@4Af\4^bG1rKoU.;l-<!3#a
%7>n/4f_9g,KA4B^2];u>I!=2DGJUJtc_mK6Qj>tF4smfoWJb7rc6Vd8Duqd/I(;OFYUP1rAB^Rq,M34(>MNM5KR[*qPG?Y50D7oS
%!oA@pjXL2f7ED`^!;k@i9oE+=OnJRVN?m!+R(nL5f/GeF?'n[,dsElj:T9cYmm$(J]:hfrR=@mVGFl&.,83;FBPSr@Dd&-8k=_\s
%kpYfO`7.<3\a'&F<;l6tR()U:qQ`SUg^@saTT)%gGo+q7AQIaWR".GXG<=UB&B7M5NG80+FePq]+$[EQnE&iOhV,ltjDQ]g<(D/I
%P\3h_+=[DP6E0a$R71/uF1)ukLr;_(,BE'Prj'Vsf:G[+^L#SUHSgI3K*NQ;M8#"o/>TSV'@G<jUH:Gr*@E$4:c,JA(H1=b7bj3@
%H"d.(#D#/XlBh&Gm)3r80j6+d,?8(ua6$!+SYuurV\o)"Ema3W@J'Vn48D5\dnEm5@lk%Ark<bW4TP8<"jPq[h.A`955tqD]JuOl
%dk:kcRSdJ[cO]';l:)P>Zhe;,(`![DO#kkl2KS!Up%R,W-Q%*bXH].'&.0SN1D0YE[bT78!:7<(2IpB7$J%et[JB)Dc>$n*<h`A>
%j)JWD5-,hKlZeQ0``D,eMg=j7XIUuG&+,&X?_;^QqD%tj/Y'LZ%T]/ar"YI:"#U>9l;N=%W:9&GF_.74b>U7*J`:.X<$67+)3VQ7
%mRW^:BBIUBeMD:-`C:N2\kh5I"kSN6De:u)@JTRfie8W@f8Q;rJ5>oe!ImjfI[dPJ>rOZ^ibe>3O1lHXFEg+!(ON"BMr\iT8,,Qd
%q9B>o)lH<J.k?8($B4:fHf<]+KS&#QR;SseH?h6l9m[4\a1nO'p3h<Xf3q:-n;N:^Zo$5>HLBqAe8=;Oo[gU<YHqrsc(Ag]He\AH
%2LOLP%6n6`ft^(@mQDQe`L>OkU-6CAr,(Zon;2j7$D2Pr_^?L1m-=Ecdsj?]V^KV?>t+U9\nb@$\f@ZZfrTqN#WoGZTfp5bYIFoY
%%j]AQLZ\mMPd(;69A-H\VEq\Pn!K31/U]#j(O[W@r=3@oIDE+^1i8qo18HPNjb).gA>sp0p>0Ga.,QM:Cqk6[Na=5_kOFP!gE(.<
%Ch)TQ2nWO.jja\!os5?#28t,K_:n3$Wg:O51t\32nTgL!*ZZSUq<Qb@JXQ2'o[dg@r+GtN)nNdHpCI/e&eY%orq_G!W[[t'rH2$t
%2?*8#qWlF7o?[6ucFVmtkHCA@VHe<8f9a#(@,&X]a9oN509s^r]AiAU1XiC;O@=:NeS%"tJXr=i6Z^r`!DrP4<cld:NdU,a8!dh)
%g+Me7O2";[="R,F`a8=KcFe.qqqPE;2"+f11/S89L?aBZ]R+kd&GG:J:Yq:BI@o*hQG_C4Y<&7oCJ$5;(,n$m.p^N1B6<%gZ<08[
%rKs.F<D6NWSJNeKC,l0#SRufV=18uM\Eho0*<63-:M+"^ah#RFH>uOFAF%d@UXbuLEofiSmjZ\co:%t2L*\ud3red<kP"FqT3mTU
%.ibts%Ffn#^KE907ep_^VCI^ClF-7k-4T]_3&S:L:Bqob5J=X2q0%)UmFT\EX8a5H0XQJqgO#D?UC3i_qab]k(nFVe"\4GUrFsD*
%=rh<OO%0*`N'>el*;nF0^\#`mAGum*ob,MH0Y2'"c`4Ba'37d!aa[OGB8Z9SB[B=@s(aG/I6RMq6SNgEU,`b.kAtq&kn]tuW#Klj
%6!fLV397V,m_hQ@*SiX7Yipa;fO](AFFkWrRIG\_?Q+'mDD'Vj:)Z3I]FtO5E2p[rP"qJ,\Y3Wk+<)n!Nt;Lu-gI!]%"k:<kBY).
%0T8'Xb?.Zj:6:c+mDb\ZbnDEo60'Jm?+M7);c.C5Q_5L/f<kY0Eoo<1hPaUBqfQpC](=rarG?ZPlaIsKUT]`n\.(])Pc=&\DU=7#
%0K$D.,.V[6F1THa0XdCaWm/3?/+YI\.e1*`G=,TK(CjRa:m-Q1O'L_<Y?\J48KOlM$0+c[KOAQE"]M0%g-XHVG&p(X]9\N]SNKh.
%WTkqS]CDh+gcnD??!d'"C-ZbNF[qX5-VDli8Z,,N+s0O::(XD>Vk#s$(7I^T.W^5)**%Rmc'0P5/(OERO>M%-k+cfq'D4;=QC2Y\
%6Y20Nk#"W?;FW+)Pd6/E7Q6o@\(a;._D"u+Gp`phBQR!PS*SY&\q&4QF=u%E/.&#tL:Im[(M6JZ8Ho;GM_Idc7A1$fPYtMKbKX$$
%p/OP.[3OJT2k-aLM]]R&hjV((rP"ZtHYi%dkPX665PT"fs$r-u.N;0CkJrpaRm4[DHoq>$Ic"CYqnJm<BN2,.p@7h#kj$j1)m/uc
%Ya2^5cB!JAr;(#[s.bGkc.9e2h0T,6o;[%82&1Cu7TK9LcW$V9f<;7DUW^9m0l#CDm.6Zms8;.cPooKAF_o74#[Q;t,&T;e?%'an
%Voi`<f<682Z8LO^q9Aa"c0,Nj1lUF3VZ'Z#q7<j(r0XKn4q(pY>,p.Y>;l>ImIQrWDSG[CK/FM%=FSRj^O1AurODI\pNlRGU;$/B
%NM]ak[;S;-@TJKdl51JLhqFR>[K!s'a6ZuhpeF<E02DN'4o_T(Kr7.brDZ-i0f?!.gT-hD<[p:`:WdL!416VQ<<]jTFo95FXmLT7
%o(>J=cOX#>V`2An.^XrYQu2]UR*#'tk?`F5fTNWuGmLiJV-i%`rVD!2C#$$l5C2trouH=32t$(_rn?0(3;'`FfAaKhjV(:6GP1:)
%q6dMR0XGD@]tETYeCg5-<jKI1h>I,;?#?Hc9@*'#^Fu1\*uWeXLF9@'I>kWsT+12ObC_Gap=IlV"8hK=T=++ubcf?>D`1qk0?hE\
%)]Pf+<VB6Feiqn1I<BE7oX\bP11T:(?e=IRUH?LT?X"?@^]49+_o\607YuuPV_`&`VO62u,T$EtVtWclIO(V%h`8D3^/1Te($^]O
%C;;QuQ"/C?-i>>Rs567Fhs(V.9Q]$';oSG@oRG?hB$[']gTUR@?=`q7<PSCp7D\Bb,,<*>UH?(@rlt:u4a]4Pr]f:Og7aCRY)Tl]
%ectJ)6hKMjElMsieR0s.5VFpGrmKHA]B.aR>H@WkT;mA=#CDk9+uiajH"hbsRJ#I=g4--?[DIb"S0.XCF4C6V*#3kXHL^WTmC9LA
%^UDJ^hsG6php:1"J"0ftJ%lbh9Kg,Dgs1M:`UhpWm\b]$q;]6YCg;ElgPZkTXF0j8mJ(,^qsB__o69Wihtd4eI/!$olUT-*0;#7\
%:;8p$^Gqj6#eud7?bU-Yf40.LMp(Unl&YRgKQj<M?d5*iH@#%-iq%9ci9Ga\Hp%>sErH"5SKIahafh=ppQ,?eR/+:4pW<?MPO#cM
%STO]&`T^t)b4M9<%iua%.N>-%PQ0O-5D>Q4T3lL9cZeQ_ih)Z)s/0JH@=)DJBl]$_a+0'$?aXt(IsUfC9)OJ,RCW6f!^lud1W]UV
%%?lR=WaG+@<;lYh2b^!bJ#m)X;_*.ngFsK[fA^-.bP8qS^])]g\l%HOehFH1*ARTaL2!OPg0_7G3WJ>uBp9IC@9.<g?2hC.9blA$
%/4M"b7eMrl_<B?@5DJ-Xrr#1^dttq@n)FYD1_8RidZFp.TGqH63r3,<a[h.ooU5RK\"^tm"rkHVhNknf6lE`N(/ZH9S0.jCO_lND
%MN*G%Fh0/\ZkMj?H0`4#9]0uWfF(98H?KD&QV2)53p]1R<Q6dnKKPL:,-'WM8l6A#3/jkVNH.]_.I+e]%T-SESZnS2JnZi4]MK7R
%e,Y`pOagA#3\W:IooIH2UM_H:_TW2k,[mJN"gS+1"_(L&'nHDgKF&%u,g_$s^d%o%K7sP02Z1muY<lUo?I]W?C:fFkKr1.-n27>P
%VIX\W9I^Cp.pK4</*a!2I9uSI[")%!nJb?9SX%o<\[e#1[;>jW!4;,*ENH,ZPq'hXcb7BXZ7ZqVqk=qMk#AcT(5fAu**IH`fW&DZ
%.ZJ3r#!!)?j(b>g-idXRnNQnsoBke'Do^JeIXZQkIe36aR3.*[-CQa@GB$qFF4dYo",,OMU]32Lf(YoaZE!-"MP;ScW1':"_e!OM
%XVu?fMoZhk*cKtM]S_QK1`)HibiPjm]eY>GEb_cD/sU;B>).]Uoo,SheMC'&5C'*%R'=esI`Bec5G9P8mhL+@,?8`*L)0(\:9CF/
%-FT3$]%q'mUm.r%J,XXm*Gec)A]>m6MWJd.V-^q5p#g?&r8*'s]!4oH&?B0-.nAi$EtGVGa3B)qM&roq8?chQ741aW`0_*IWGtO;
%kn-N&Q>5B8WgFpQX\5e6/\=^2#0s/GW+HX]8oQ^:egtBqjQrai"2eQlj+M-<<;#E.:,DD(3R)A4c!1^/Wl^qsPmNS70/VZDh6mB?
%&P8-_l)7dRD`EnbO\$g7M(%WP(DVsZ),jdCWk1jq9Y&*,lHKL'YfJ#bPu*R!Y1U9]O7fM_94"F!U1k\7i*&![GLHhC9jfg+,d/Dm
%L7n*qV7K%s<](WF.bDQte0>Rg<7am?Jsb*47a.j#=:?tuIHIaf8n_PeWsp`/I+H4mAMqD879Rc<lKG7ZC_Cn3JO%ZSe9H_,;.^`U
%O]U2$BdfQ82=tHt[[,pXV.p-4"/+]WP/jLj2:N.@-BL'ZW1QCNs/'>:lMsL4MLl-:e`W/B.l+O["3nt6RmT's1M^N(J`a;Y:d0Ie
%V?2p>C=W`b$;jZrc)Fj=d/F*NWaQ6o2o3*B9_2E;cjn`ATrf@YH&O^Rl,K#Y)3"rBB'3qeQ=IDQA#3qHB)#=mB;>`,m7J5Wc+%?V
%H"B,I6PcHUX.#0[MqJp94cjb?Fc2KT"hTZ_6N8m2!"dUGEmm?RVdPmj)Nk7<H6C;?TqOlJp>8gk<l72FPZ'[-a(`#ECb^$'():m<
%2*&O/5R]_?*5nU'8l="nPW9rL'LjLG(pf>n,g*Ude2[2Dh%U$m*h*>4/]*b>l:0K_entk_*X2u$BF<F'-sDb9R`PXc*S>Do=$)S,
%JGGW%"L6<+'+*)-g9`0K%k4EbWi]IK-Hr`XI/C#$!LuU,i(U[W`.D9NM+[<6cul2i>UY6[2DuVCOeQtrr<(2mfHMpM&/DI`-:d[$
%+D/0e1D6P.MtJJ@AceWqg6mI`_6QXjXJh;A;#RYf)<9AX$5dE3VQ28uhOL#tN([ia<I[+IVfo^AJlY7dZ:n'&bb[I<7h?4c2tIp9
%MF@9P/-k>BapeZTG"/f!0c-;\Jiqf'AEA;ML/cnuUDd$`gmX20BVrc$Xm8Ne.:Y,R.8'"66@u:Q6*msdEi90s2d+J&'6CE-<fh5=
%f!;.WU"d\GLg;gfimi!bH`qU&'!4P51;u(/UMD(+2"#<.&OCS\8Mj_:"I\-$Q2)TBe240oCsj:JWFVX/44JmoAkOAp;EN]<P0u0]
%<'dKIVnn<e#>q/-C,J[sS2N@>A)'B4;<"A[87F4F'-uZXq2kqgF(rME@/AAdAlTuqf%pc(XKaZQ\T,E]NCX-L<)PRW@:PO)#U4(a
%YZ/jiJeiL2X+2t:j>gW)Jn3@U&Z@p+,A\W*LkiCI69K%bN<tPJH#DtA;Uh`a9pG78"N!-;(klga&u:5c9q_qD_5'o?k!q`Z8#,]2
%C<R/:)FZ+eMtl'BX_]_m!f9i_8:n.u:'-HN7UP2t-B:fHR0cAobEH)%K/+Pub#+6o;3M8b)m^-ROX`m8g)D3L2:fbuV6"XC5n]+f
%=c*;/N$3M,/5Mde-AujL7\6!iaiK8eDs[(IUrNY%J0P<],)-o^KQpUE,K$k,>$-GqhA8iem1`[D*"*?T#Rg5jbc@1uk>!I7;WKE#
%>!%mtg'cPb(6U#_'0;uNgB(ktO:a<+<IZ0*\m9u$eM;s-`a!j,6'hqp&Bn7T4KnsjZs5$pKb9L]Jt^"Wd.C3I$dgT0*J>Rd,b/':
%X?t.M<`hAR<B*jo#U?Q7OT\[XP@5&\qU<53FfI6V'RUFD<:Y\H23ST@'I>>%\h7(f<Yf3jlB>4V*`Cl&ENK6\@m.9_Y)u7B"_08g
%=:8TM39Sp3MqJ0A!!AE)`l)DeTG]=k0k"0?0J@-V/>`j6@QUY2cRpn19rM2nqaDD[4MCZa3UIX!Zu!M"0BZYV\O,SY7SH@$P1m+4
%R<D(eW+?TZ([[P'@P5++b42P7A$Z/-:3\fj6T7H14^Z6;s4ha?'GU/O*<XT?*)'"T8'n?@6=S$*_9A^u6Ri\70Z4=h/H^VG%%h0/
%qk:D[c_)Sas3F]G9;pb5/7<0Zi)WPZ\j7g6P"mK[,b:1+0OGsA1dUup1t%mM_6j"@2.<@ULrc(p520'KCtRBlM.W6KfnuL&Wf+p#
%9]f$q?<7\orbAtFWd,g9TWUkhR\1Ba1!2heD,OE/"g^P>`E$)$SlNE5OdUel;R)H2LiJYKAf2^dFh:IVQW_,Q9*IUjG^oi'&Qu40
%$^iTuRl??U5p8Y:`,;Il`pou=Pl[uJ*&GTVX;J4)ng)AeZ#VFJ=S,5VKguN/+>M%><!jNWk`l3!"AOE##V#r"'X>Is7o45ZG7g0,
%P3$l+O%LNk-qiW5$*X\$p)>@0)Wgb&nIe6`iLSuW+'qK9Wn4uuZN?8D=kD6&?6PApgD8k7L@keX6cD/;@oj!M\tlbWFd"X&'iHf>
%iA`3SL:%95#'ni(OQ,!4.hAQieu^(J.T*uG5YFhR.7+6)@a.BBXO0q`UBlPu71c\0M1jEq;P;#X-a$J##'k5=0.Y#JM&%'F;$1jf
%dUBmU'&tBs1u8be!\noJ7&plTrbY^H[%`Cb9=6@3-qQ-Rg(0=E]3qG$e4:9s;pJ84Al]>n=EtT\ZB5nC;PfI(&6raY;?V?\735TY
%1;-#U#a#T8_6dK7kQYHsn0lW>&]3cPeoQ\tmA,'UQY!,Le*Fl8&#@Hn/F%gLW%8;Gm%ItqeX%:,"j&0kdSVQtN0Ne%KT;<p=77+:
%/+rnO,D=O54-;coQ2qat5&;P2Jiot_$M!J6Ka6/bZIH-WOGnc@*@n<%/5Ti&&hBRtjg8;j.,q$QGgn;/#iRW&:*`YtAS;GqOUn8T
%8d+@04K'e<na)qqM'sbl.g=$CW#_QW(Nl\n4O_0H91=`LRAe;.c('e*:1N][!X2^2e.^r]Fih2pNKaSi^-/hOJ[sfs,Y2MY;<\Xo
%1ujPO)GGi$@@%fd[*nN`Pa`E)BcIkD"@EF;JC0)Ai?=#"6(X<uapR\*TnS?EZVlmDJjmItBe7=5W_9]sOWqig4El]UUbR';JV#ET
%/>.CC9%F/ZUaufAmGZ"j>@:ak">1rOm3Ft5R2#dH#]rG\'ItaI@qI2q$d4fcSg4RJ>okm-X]oo-;'@<ngO>Ys7[o#s-fST65`fUt
%02Zhde>ZSB1UWq`6+8B0<\GQIEJ,iD0/@Y@1mM<S-ZfMH!R%$J:cC]Ne/mem<@i59/l\;CH+*7#797@0ab"+^NQ!_aNJTG!<2I^A
%QtV"C:EtlB-BQ>;6VV&FfiV`42dp_XVAnG[[7QHm)m<FQqko0C1i/4e/:+O7ZH?mZ/rU6D47Z[T@;ABi'bjQ4V1pR8[QUo9CpK:p
%B\9C"ENpr8aKplX/o1OqLIojoZdULRQUt%jeHhd=Tf:;3;O"s3_uqP=U7ocJEmQ80gk=k/3[#<=NIlQ4.T\:71as[=Pr&SD2'EI/
%A",?4Pl-I[FpRc@6kQ>rj@[M"!'s:D#g,![346=K#MUon-<`Fq6sO$g2aEI;)hWRN)]e6pVCmFJ98li\(/Z?O%MZn#JT);';GLfQ
%!OH2s!K08Ok'/An%Uq<=R/Kqr'o03t3Cfm8b.%Oc,E#*WDdt*G-^HTFgpdG,/uD]JG^Edpo\(Al!<D(X7NE%=`'jZH+t`qfgSp,l
%:hkai\WWUFKTP/C$U>A#A]+U)YpCg=[uJ5<g%p`rZJL:.15kn>[BEP*2<`!WIn63S?j#D>0ERQW"B:j]Tk_)7.RFU(OHpVT:67Z)
%JHj&FqN;QE-3j@75LqELW(L_n+);=prC+t/C]O$6oDhHKJuD`p@<IYGX>.pje1,0"4?8[nQ/^Ib?lsRL@hG;'7+2<^,R!Mp;`CQ?
%IbC2>.Y-/"E.C=g"`leknHHK3lFE0K;)b<kAT&p7LlEuQ;'d.fm$g06R)@gCUm9K8d'U![ld&8BYkO4C;\<J(4:jbC66M9`S8sR>
%XrJJ>82:k[(DTV-Qp)6>#/l/jUCb`m!rHS2?<E%0<02:sd/r,%(KOFe!:`;[!===aaIPkp+NZkV0HX^Lks@M2576rI3Me,+@:>>)
%@^O*m2",#n"b=]n&S43YB&AUoR$>Z'#bVcXD,`,9"&,;D0EYdHhl"1G\2,ch65&QO]DG\P(]bcEN1pH2#Jpa;#c'oW6iuI@#1a%A
%,O1505oStu6@=+ce77o+nfS5D$ejOZnH=IE`1TJK!lPan;&LN3jc7$H82*Gn$lh\i+#29,0#WrO;->'64Tt%[cUoIVK!`X\(1888
%Y`aSAOG:RS-j8!CG9VTi,QfX6I"[c\$h8mf;>Ko>W)"T%f//$dQ_jti8AlM3M-i1E$3WW2WJiiFY*;815nF]Sbr$eW@NAq&EjR:*
%KRgN#&d%@:>T)'T#kDeA:nORZ`?GWSKQm<uefZ/%<%LNK0TQYn?n!uc8t8FK.4bV&%5JPRbK;LL%9+Ih[>9sXg%:J_,)p]'`>i?h
%^jlE!CFj'0i.A`G('FbS/^[DB=Ni&A'[08i*/h?1\Bkp&jOqOD*ZI,IAjNb_O>d$9SRP]OCs<YV^g&&U<"QtNC<]/a7S%QuSRQKB
%23UeZPu*qT6(VqPjD=o)D[:(<aj?VDq)T?1+<;Y`+(-],0d&bQO?O9(d%;IAjRHVqdOcZ6Ll4qm6,%3$83RuXLt8@6Jb&NLBt$N#
%0`m_+Q%94bPb8t(V'I&t;BeQIc7g$-#h36*)qh5_(M:gcN6KD\61"H0?<DH.4k,7);i00"_'j@;JabHn*5p-=#fTr2TV)f@Lm`+;
%6<%Q$X2m#j7P,<!2H$,7q)1,RG/]X,WJfDo0gu^G`3(NB"_S5Q":)1F'4PsI'6+V[3Gm)@#t.WC&\C5'R>*IU95kG(19oCYa1';\
%m(-$Acp@#UUuk%$fQDW)!_5W360uMlBUknQ!S&N[WhUc'Lg<m%WBA>FVB*TM4K'o)EGb7X];SpX@?hBn``b_L/S^TU2Y%t/-RhIA
%H6j2)#>9UdUR\hp=W?GDWP#;HcR'a=S!Hh(o1V!)$3Of'VM(RQD^LiGC]q^KPbd6A.u:bE7M;t)2ru#JDe?tMNKm"2,o^..Y,L]-
%!@^HM$"a9FIpIW$0eEu!nGjOV+dh]'%t^V$/ePAt3"ns\A7D_HF[7'J(57#,\;4Em8L.,o:bl4)86T+eBUa5HNft#JF7)Et"^)%3
%5l%XLX:+TlZ7*YtLCq/&0M,D%6H_i>#1T$)Ln.Y,]1WcQMDGA:BZ+7jFpc1s17DfX#@rtSVnP$EE.p_K!hBTC@soJ_(3N)[Rs4pn
%P7UE/mR.-<=9d7[jhl5\\c@_S"X1TC/n,VAO!'k,Jl"4_-]"S;TL3C^G[eh?$K3i8INlT>_(oC4TmV*`@9nsBV4t7^4F:>O0!#a4
%UEH7@ZiH5qY`d?kdL_G6&<XufM$+0k%'Y9Q@4PIsj9aY:o'PrY]-?9LC.Sf^9Hs0a[1.[@1_LeHc<Mfh%0f*lT])#HRHeQnM:hL^
%hh>ol["\3r=XW4OW9us5B:Fh37E#Us`F8t5Z.8nGMi))Mbrcc%ZP6%'l7J*j;M5U[2U$tm<[^<t1f/`;f-1a191&m-l55F>`*.^/
%>1smQ=Tl57N3aWROL7JD7:S?AjJbE2dbn6Q-$^sO3t(Uqo+8NMc%9OH+e`C\Vhh$XCF5k%>^SmD#\!kCAti]YA3&:;.6#YC=XW3$
%W6Kr;cSc<=95fW"kfFAs-=7!4Zuh*0BepQUE=tYBi=ce4r>CoR*Y7?Zg`k;U\O^QOjP*^jfEJ"gZpC@DP"iP':`@dm@V;R6P=d9k
%6qE.Kh&6r`fVu\r2PO3X0#WuG)4?Zl+SO=?oF_J?XsqMB`9Pp+;3V'cHBrRiOLk*nQmn@WEmDP]F-Fl]R_uUs?,N?E,/3]"[3-eq
%4@`AB3gl3U\c$ljGha4"+;d$T'SQ^C.]mfC'EE-j8IUaZ3[35mI@Fc%^mj\K!-j-A&]8Ll/cs[r$5&<h%(Il!f/>GE#+?%d"itN]
%I/pa>d(M(t!6f;H#)K5dWs:22-m<:VBfX%J&/88<bIL&pHW_Y*&shSa]XqKfJ@n8*j[Ca6$#:`<E<3*hZko'bMMtq:5`R7s5_DH9
%JLa]]15+J,@)3b6Ht9@R.a5g,B*c+:2^]!F'bTk@MAUL];0OJt]9W"fG"csE%IaK/]0k5m5W5rtjbRA<a;:(3@LfU]7:@S)*(=4G
%`K3etPQU7^90$2.D.Y\G',?W2HW>Yi)cp6F+/!N=J76k-B]H<1#9XG<JE`/JPaI[9k-dIg\\p+r>UXGD\+TQRLR$0cF6?jn)KWe:
%7.RW8,_:OS`hnkP1!7_7O"aF._F0b.FmYn68\d/q/P&>m'LD"O0%*-eKR$[F/&X4J!B2n%O?bc!;ZPZ[m"Bo$$g=IH]-H[`!5#k'
%KS[3MaO$E&.=gjm4(&KT]*LjZU@0^XABVm5>9TRmKYg[.5TkSt$M>/o=TAG_;H\PX3i=sn(ku:CS3+8I1'>IcdPM5c4%c&)_lS\a
%Wb)7?;r<tDl\m](Q\Pd!>HL8DUPAochW1jgehJ>6QlHBiYgZJ&c&#gt!ra)B$d=,+'\3:f]&NVTW&KIpCGQuXJ,oE[qVE$&OWm2r
%71'F#N^\60hj`Mn+XD-Ed&CL_MIp'PG@V"kBt1`1I*O9#(?cWNTo7j^_RBM_FO>%cjWn5A$NleE7E`<!S0O..Hj$5HEAIlWE'_rb
%'T"\C;MKG;Jc\5Zk%4a`g%J1D3i54-CP'NB=>q/BikQ*2gh\\fF2<iW/-lPefTMOFF9Xa%?(;kcWR-L3fT[B'EtO_,WkO)8^bfa\
%d88;Z7U\,#c=fruP@GNWM5q#*((!<Z0Nlc(VQlX-&3f8sigLk1RDEpK.3Q^<NT%4qR"9jk:r-,rTHQYbaD9!,nPU/,VF\jcgh$uZ
%!mrcGdfe'=j>CDtJs]C)!hjYF$"lQWIj#`A+'INI0\rJa_K9kFL[!rm'12o]`<]Y%.,"3%+>:ct6%t\!fT@=LY4-"MPY<lE`(6<Y
%r=mX7bdW-dI&:='G4@i5AXL#b/"p:@,%0i]g]0)S/P"13*WUe(EWH;XAfh"L1RS;r4PL]9)k`@,%Xtjn/gG$3Gk*HhBS235Y(NAV
%FCHTL_e(Voa<Zio>41`uk;d$dRof$.Brb(U=M!gUna*9oe&W,G45=E[6>gb31)KiBO?OE6gVa_eeVUWC%JcNO]kp3\S?6X>:F(.m
%+akgu[ZO"WT/kZ[S<)=Qf#?QbC7?OppU#(VM(NR8Sr+P*iinp&/-41e"P,i[S_\+1DmJ$>L?,>db9d_I4-r%^S;5b<(,^o4/q[kb
%X)gm@>%7h8J%5H9*3_Y%&hokJ-k2EbftbUr_)uapUN8+A'"ca@_6nn\[,'?Y1PqfVeg1T=2i+H^iAS".RCLpD9Xl0=@Yg+;oLuXI
%fs@PN7sX2/3eKaZ+m7Jmj4d#4=`<ckR=rh>dO!CZegp<U:pY$fGq)[t=fieV]+%I9+IPgF%$XG';esq&/i=tOH'=[V8Eifa;2ZE=
%LKYOLPV-BUj*RKRY\bp"_jtAuYWL/V!0Wa<b!=)0c8;P\3TLf">9/fXPg74MZtid,8u%Q6oYKqQ4=+O.V3F%&%;B:uRlU,K8RrGH
%VkaTHR1gRc;G*MN<\uOeDc=s^fXDSb+Jh^J35_FUCdO&K_>Rm'Y`:%:J0\dNPYCL0A%?(Z\HKf0EZu9ZK`KGR;n;QP"qIGN#nofg
%TSn520kT@00lb-619&oJ(1!:V\_M5F@/tAi,ppW/1D]l4,f$g=J8sooL6O;Vj%L?q>JS*0ga,E&llr2)9QIR8alP-2Wf9%"&g1i8
%0NL4N43ZRF#FhrT.M4F89%Va&<WiKFYt1LEc"6$/YlM@UCDl_(jdfsO.\)K04VQ"eAPA_RD.ViQr<p08/Fqa_APmkHkqY.T^`.(0
%mdl>$UTIqd0RLbi+bVBF,Bkp]Mk:16N/&G:P*O*+$YN@h@g1k"]@ABJ6W07JYT78d%"e/lSMUkdI[S5o%^Q^;B+=nG;XS?CPQ$qF
%m\!o*nE&L]$ZYQBkR3AO@UEf&?"`&^RNQG-b%?OC^!%.!0C6hEA(aPD<&ctZe-%Lugk!9%G092](?4&c(tb'Sk!3=QWl3R?-=6lK
%DP]FH)naC)[t%$UVDAJW!\&1KM94enHu]Ji\m>^/T?.OOGEO)]OP+7g/mM;=R5YWVFC]qAE=6K;Iu"94%Ei,\@4!8aFc9/TT+(2[
%a*_=t+f#ILOKL"LZcC$LRD!9@i1E\M:046MJ$Qir["Y<o5K%!X%824n`/'6u=d06jUG#/0q4KAd-2o%tdMjGkG.@<;e0%\+i?Rp/
%g&Z"6l4;8MEWEZo$(Mce#un/5:D0=40Ft<JdK2FL/06=X[DTmHg17]:Jn^plfR_t8?JW^:JU`b(nII>tZlq.lLa6^ZR^q"#`Mb6n
%1RT$j,lSr6@>5NWgZ@?8>m,96#u]]Y'&1U9^knc(Uqf45@GqY%TVMQ]L(_=&*Vb$kUGCmAM^qOf#NPk";1NG7K7AP_9JLi:p-?"d
%SI!+E^CZ0S2^Ep:!\bK!kXFB]g6_s]7QMXsW/(L[)[QH\6@npPk`[e$6$4bM&b[?)+U7=bd+=@%Y[l1E]igK3"?f%-)a\fpKD="0
%bP4TW$r]j9,5+8b!M'Kh&AJd3Kf:9-Op%/&!X26SK=[EP)al^e#uq*/Sdc2/&H`89TYD`F^]=J_M&8#[^CWnoq,dYPC*<QjlD8hf
%I1O3qk.i2Fl$sbLZk_NQi8>\c(fEUP`#bj8TG(`NiYNj@]KlRcjD:5noV1e?D9RP?,9;jjF@sQZ_8SWr8hLpC6<q5*bb8\.DT90h
%dh;[7Ns.Hn"O`EbR=LNi@u_fZ#'UFGM$7KX?&4:.#9g65%fR'jLD2.bJf\#U(7^3G,P]+q#2ZQeRuA?*A1@4m+qan+"'KUAYnG!+
%C4cZ0$5`_5gQ7)g`F>K!WWOl9k/Cf.[lbG]YRj>q%V>d*eM$(DhWg0t#TI7pn:?Ae#9g650)h!X'M6ro&9CY]"C*.?.:O+U$)n_E
%+X)"i`_8e+/W=4J'?#8d1F6=_L\(fpY!"E:OhM*bX=o-lK7"-D-.3f"m(tk#glN(B9?^p;kY[EMoJeNHiKTEVaFhX0&C2C.s.id(
%s!X%gJ'tKXJ'r3@rt#QG)j\;C+91P4(^L)Vr5\UI-2`BHUhfDW+3mC7+3!@#+3!C%T=!qB+%T$%6Q?ltYQRM[55n,p&-&#)+3$O,
%Pk^"n88eb5E#o)\L`0f]MgqsS!1Sf@6hGsMJ8RmZV`jrF"]#a<#QKUk,:s6-s,[B8%M/SQPC<A(Mr)978p_BS+@5!/@R=`q@Yg,4
%nW0ETpr>Mk-LhTZ,lSr6@>9\i6sbh%d`f`rMW3Qd[-QYBZs1C3`*qU6$)")LJ$`f#s5:4iQpX`f5K!RPjpqA&3ACFEL,$Z`5H$K5
%'4Da;(ZM[gL'1?$_`t(9I:"u/7i4]V'Ft*c!NllbIggntO3pJU+&pjD'O_NH(h1i5#^m-g#QGW0"TC\M6$,u@5K"\YFi6'7&N.H?
%#QLHgd!^ToLgPtU_Aa+Q8Iti/_:&(3K7AP?UdO,!*u*Ydi8>\3E$-HJnIH*8J54%MJbXpY@a%@%+45e1intmu"u(h,KR\f1Pa;*b
%*@(VH#fDae\bHE[#';$t6i;N]J2\kVPIZa(:bV[ZE:AoBN-$Hfr.>&5)dN<9W':4.RQ:.5cb^=p?s;P3k-<j!Kg7[Pi?(533qu50
%n),9]9Dl[iUq_P36p?QZ7.h]LoC*:ANWgf)q?XehLOhB8_'X4Fs'YB'J3r6;;1GZ8iSYfDi)nst+))[W1(XDHl@;O'H*J4O-2q<r
%ONpMoL\-LM\9IG'Zn^\Dhn_N.`3mY)5I-\$.J*$>2*o#(ZC)n[@@iR,Tu91$R52n'5L]fjT;%9oR"t<Xn;l0p!A?uNKLmfq+^Y=j
%M0)6!].f9L2^F(*55l^dJn,QJrfKq^ku,%dLP0pGGk`YkmrM/"PN[d]$\<ej&Dh:/>QSVrIu"94%Eh"'6s$/q.JBof1%Vrk=cesE
%#?aULfXo^go+Caf&\UhCP/t8a,mg+m>p(Td%rk]n_\+Bb?0@r(Mi1!]+*2fSk<*QYiZI.[/P1P(LPpXM%3br`+-?fZ%U]rIIu%Em
%"4.KK^bjXa;I](r(T\LuKBnQ)5`QhBa18k%X#[s%g13GI:!qac>E[@F\0VI)pU1VH65pO^#c10uF;:1);A'Xi=:5EJrt#jCN+.1H
%*;lQB!4hW<\ft\_>7ru@[9unj+6'NoL'0aso'^;?eR0bApcaGEZ64p)>`/hJ+:"j$!aHZar$)V;9'G-XJnbBK&V_HX+V"lu8,sn[
%s(W>!MnTG(0aBUqF?g=4&I#[&&H4D;0&dtJ:W3#5e[6MgfRkT,(pjN7?^jGOQ]g$Dls@\`H@ffgK^qS:nZ=%%nW0UdUkJ.f/>sqh
%'4D4,(ZM[gL'0asnh4CeJu.p%?-Ij/+ru2e.Y7ZH"pb0aJV,Ds`@Enj!'1^%#3$HYLbTusl&+]A8:b)Bho?5D&gISEJ/g#(N"t:)
%i8>\c(fQs:<`!Wu-c.RU01Z.hK*"$s?*f-/dJ'nuY_6G\"*0&ia`o_Rpd\2&Gb&-%_DE)(7qph>'?2>cQM?5\/@]+3Pbp/E8[3KE
%MOoZ9r#;LZraDB,ldr[H7HDA]7oUR/g`'7tFt>TbeOT+_3=NQ/$(1?;;o.I+!O7;[UAe7$ikSCq,WJi7pda&X,khod;B9_51b\!b
%hRPq+Ki$L<5DA`f`GdJMQF&@^"2<jtAP%\nO,JKu1M)_d@>HqB#m)`AbnRDjo7Yc`5R=3cR3F*RDG6`NM"uj=9"GR0Jkaq//]DM&
%J/>"7Ju$c*.YW6Z^a7DL60uHN(>Ou_9Lkp`;TPUU)<c'J5/J`l?'#;V73S6c*r_!'g);,4%QbU83hjiEjbQPP/b'@V!4H;R8.^,.
%9QJJZ`.<:7#LX7b+H'(R4o`Fq#lG>NrqW07pWie,\T@`t'"^/S?AQLn)jUKg_E\'q?Z'iP:Meol`B57lnIKW$hRUQhS;4mEU'?a3
%Koa:WCBq)#W'<['a8tLZ,[d'VO"'Mm+06@$6e!,k5oc]0F8j4\3PYsTA0:j8CCM9]'BS*HT?,^-Z+u'\&DE3_+r'/15Iq1Ar1g?L
%*W1NmM1:=QR#sK*8*%Ya-S#&c5Ir$are^.0-]:_DB04.m'uXP>%1.Q\=?.Ns-Lm-t?/Qeu$N*72Ui[sQO2unBO"^tk\U4;\eHU+.
%3SQQ+66csJDb'jR`HD_g15UKWD9,![L,okN.@geCiu45ZQ9b5ckTfR-WbXnXYQn#60k_)N^,?9/N;,mn,4Q3/BgiCs0Q1D3h`>3a
%s+m+09(&;N5s57>#YP`D&;Pru,QO!:4,55P`':1Qj<+jt*K\33B*/+C2$;Js$lhg[h=Eij+94HZSF)gd-O#'N83i-eHKTd^QfIg"
%$pY;3Ud,rVK9XXbrc&/L^^e48Uu^t>+&j3+M(fA.$^(MHTE%Z+[S4dhr^!q8#@SJ75THIr17eq-rm@(JHh^+WZ4?kjoO>5D5F@c3
%LNucKJ?HgTR#f$IqW;o*s6,kQiZCier51Xm^N9BEjMUa_<$,"Yn,*^INWgem]:3<g$Zd/0_\-dK9:%*<K7C+OC_icE8."ED[<$nK
%]F"eS+DjJDm[aA$eH)")mTtnolA<Q5)\rKh@3CbS#QKnbOH6b'('D:h5:ja\a2L9KR3DrA(h*tiJq-L)1I^ZI4<aF8Y/EQ1R52lI
%s$KKlnr_02F^Z?>h`:_s2,h9udMG2Im[aA$?NY7=jR2->rWn#n&qXiVOYA5*n.0daOH4KU:`&,"rA0:[gdsgp>c4(_KhG9+7)5GA
%0$K4Yq04EFhW"\RH>!h#0Hp%*p.o(7K4H5[b(?ug5KH0kU(#Wl(]8r0:W7U3cV?[`$,-nfWS%OO:fi*pci+q,f#,f_:&?n88aHm<
%/0K)^'dP*r+V%>2,WJ9'aG9)A$+AL^`B@EYo\c=r`e!lY/-e>7#80"e\Ms7mOct=6_,d;]8."@uZ#HcI`sN@NKWm4QiR4GGE1Y^g
%b;8.34h6,r&*s<15F_sf"@316!DSE0SB(;%rM5"g$O@C=&/2%%@XPd-fFu9;TL9L+'L].i_,:k/W[AQFnHBe8o7Zl/E6/cW]]*WS
%g/UnemJMeCX=u)2%rm,W.)<7,JN^k(VAR#A+[)ka]q\)PnM>L,JPY?X!(tZl%T#DDqEAnLPq\/=5RpU&"h6H%lk)_?PgP9DcElfq
%ds5I7^RPN;p=1Ve)A9E>A("PVHo3R>Le8LNGp@t:2Y@KO#Nj)5VAN>.\NHo?]p;0Sn7-aZJIg^j!(tZl%T&g+l2/C"<l-!-!D'.5
%#k2YL@#l-aQt#nR^Q<(5"F;1dmc*0'BfY\M3tOYK&LRg0R9iYG__?U$n45i++@h;8@g0A#33Ymi`Y>0a5Dj+(VDn$i(T62::6XnP
%4"GiF'IT5/HI;J[2Whf0OUfGE3[Nh>i52'>k"$F<6.@O#K;[uq?oWaP$%&$EhmYrrPifrZ'\f.7%V6NW$a269@1Vs[Z6[Ara+6CJ
%qNt_a?T`alYEdh.n!m)lGk_b/i))S#J4UV,BATo%`QnUYH6<Tu5?<@qE0LA0NYO25Og[!dWlD6uJa2m[S[4$&6Tsqs.s<=odP=eI
%OAJ0)Jbik?_FDt-GX,CEinEG0*na5TA6Tm8E!K+!hRDNWb0Sfc%mF6R67C)_3$Iu_gVQKNlG>()9M$&[8['k"&D%uT>Fs;L3soG0
%[pUhm=!G]O1=)?mL(:=[8XC=pDB318J1-M?n='O?oHouFS@/-DpC&bC\B`$&[1uSeRp>u=c<P:6i=PX16QEB:4VtsMdHKL$6$gr&
%"`CW-`0A@5U]]W]",E"J/f5uN'Z.M=+PgbJPs_OiXE6#"Orh"TL7u0Lo"q58WTcD'`6OeFnT<ldX%O/k=#1flbX.U<6)N)@%WloQ
%MG/9H\jOV-,tN!fCLfcn=\dX@a2-?f_RR,mP*RUo\&cY4T%!-lVE/6CKLa?2/_k1)Z#6q163PAeII4h[/Km41qVY^uhEEV2@8])>
%`*npB$,/]c^[9[q1scg4?*XK9@VI39c-0\2C*A9:X9$[=99b$/5XrUce:fl`Z7NgNaP*W#(_,sE7u\[g_);a;U/+I;=Kbl]MLIFh
%kXeX-J0\o<-sB-rPr@Np%5nH",jIW'o&I)f*4WD:9hYYcco!/Hku8N>L(6-5=9i)%+TcEZ1o^VAK%`R]_EQHQ8Y@V+-lM)jlHXpu
%1`/R+;l3t-S7su!Ttei70kQ5>Lqpn0ctMnkY8r?6o\+Qn,-N"I;CEuYi#?e'?T/>kY@B?:5[!`QaW,9+V9.qX'+I'HQGNc*#&'ed
%q=@u*qX\MYq=DZ>\qO0?aE?b?N#ROqEYYs!Q=bE`?N$CCG1JeN$LTeaUgGdb@$+,R,)XW@q"B8^G9UG#cFnCW1@[+9U`JWiGc]I_
%MJ&C<hE*U<1oM)YY,U-V""nATI!!27I4-6C$!c[ZUP`J]+)29jIBHason`bT/e[-2jEg^+WD#]+A"I;J%WKB-CL`rLONVtB;A)i[
%]g-+Fan&#Dd.8&#PNP_(<c'#!2pQRFSHd=qCkh.pF&Pg'Z6Rbid<c[7+a-nL6kjOc5i\_40E<%B_>quV#mLr:!aV1hGc"J7Z"b18
%P@eR'_Z`uMWmtZmbq(Ei1u%D.qGh)aeYeqC^-Ng-=Va$/V@f!p84"*c$U[Kb]`uL8!!0=$"^++53YS.hEe'<$_6r:0I/!A?*d5sW
%e9JGqd6pZ$+W;c\hH?eDFVB*;?4jK[YU"<U4HDQq*Ys>VkldRtU@:%`P%G6<ZQOV^Z,hpn>%X%]8QZ%74PRY_%(*Co;W/L7VC>74
%lf4EF.<K<`0b8:nJX.'-6'm(o)GOt4:5MV0&6BDU\o^TVUmY_*64Vf*c+3@5hEiUL@T,ORB,b6PgqYa0ec^(;8CHjUT%lGsTQ_(9
%?1YXdmHtSuTU+Wfm!KsT%,4f67o8\+%+@Pq"X-0OBLa2f%1&k48ZNIYOk(euZ]/bR/nkI\r0sLMa4iEO(24-Q\sk<rI*XtkeHOD5
%E<WR!6\:\e;0=$6[)'.$7mG1gG=?C?J6KBB0c-iaJiqfc>1TkW`edpCqI.7R84>,r@A00IEX.1pbJ]),a)V;/Nt]!gotuGc->QaM
%oH4ENDO0511,4pB,fd79X(Cnj@H?"FH&=>C[>_:H;Rq]E*P$?\/"fro5nF]Co7^lI'Vg`la6krH5)1e5+tcia"F7Fq/`U=o>fZUZ
%%+_YN36W<\:r=`YTUsBG_&P2C97rM!E@1/]4p?QR$R1gSW7[>4:og5nEffDeenO2U@VR`sf10;M;5=@R:dPs-]rViUNTQC3auJIK
%<C3e7e.mXiOFmT<XfrNPo#iKhegS86P)($QQW8Qo9`[POD-k!-pT]&#<aQ=%oNHZeXR*<UQ@5'$TJNk^,\42]O]4==<?\8>G#q5X
%hF]?#Ic9p!c:>JeGpZnQ0Zbr^/RfcYb.ISY8=!.OHZf+@-F4tg<(KP@cD)1DaIP7Ll/#dg5[4al3Y4q2^<`To1%:P\FPUrWgu^,B
%*PCeV`rU0+0F\fA'B$jM>rgtR5%;IHgO*-ncE.a45#2%7L3Z>i64Pmt+5&FB9j'C4PtB+aM'C>&1XTC3ctSX):XIPb4![5""X>H,
%6dZgsdR>_JgU(dV`54!V%+g54pAl+Vbpq-1IT1]5`E^S5+([`i<WHKE@A]Q4rWP#I&D*ujR_9f!`5FS+N:Voe31Ua--8ktEG]n)i
%1R*\VT@#8-SIbCK^*-1Gm_^SI-P[8W:.jNFo?j+LoQ=ts&7uK3hMO?*9.%C!Ui=`W`-l_qJudt2_4/(!FGp<D$;AXga#jCY\n?^"
%Gf?9@YX#Ki7$%heCQ@uEqrh,uiZ\7dLhi('q=HNR?KXs;YOeT"8k@e&+;IfUItr]ieG0g#m<naK$/,+s/NY&ZYf^kHj*YD#PBVBd
%/b;#q\J%AS4s\4pa%SL!46LcNH,l8E\XbB*]ZuiZjj(n?Ckg^?]^%rUbYktB)=:tt6iE]s#SX370MBhcKnQ7cP'H8>FJ0"h>r\Ac
%PHsd79.%C!Ui=`W`+:>bb.Q#4/ijT8&(@iU0i(&9^<"SI/h%AX\+AQI-^7D(mX35GqE(7o]aTT5DA&5-PWl86pgj4`U\)YN/NY,\
%5UU%Z9^k?45-C:7U*CudOsc+8!L&36)Lpr(i,q5/_1\K7Rj##<RffXPk^5p_SWB1Z](6'C0S/3sM2!rVOI4\dkX^f+O-rgU''%Za
%S^1-bm53Ng[hJFi^*-1Gm_^SI-P[7:jhC[gVePD]fHPUb+==JA3Y4q2^<`TodJ:^P>X<DXXuU&DgeLPdcGr$JShG8KXuIRtU_oC9
%8Oi&iEcD_YFWm=^cPqKJf,h-ekl>k0oBBA&Vt3?f$](Oi"Ghj;3Yon(6;[eP3`b,%I'I!8V-H\dG!PgY.pb2@OE6Lh:nDYP)BMYl
%(*CB^9ALfOnX0._1Z`]g2g)^)4Q@i'md#Mf>_MHq8<@,=RFhrBog/'A7%RNgG<r!pm"20#oT1IS,<od33iS4&FA``I?'#P<i7CG4
%mXggj?'&2EnU2a<M_6CfK+KL+OC+6aa=k]ZaH(TJ4S%JS5B04]O:%lni^"+!7iV^V?'pE>04Yl@%tj@tS%"?THUB8a&ae?tQAXcd
%"tR[.6;,*B!t!iD@FFBec3gh)ad_n+BkQN==\*Co_01'o:Ia%GRLPD"[SB-\fHFe$4n]e+b3@7XLg^?Rg(Oo_j@N&1F`\nMcGrVW
%15YPf3q`7,nN`%l\n@1cR`@cQ'NGYKDe.ch*mS18H[:I#E118)ObC"2,QhQB0cq!V:V%YZ.Z6VUHRcJ5FS?5QB"ajJPXK!EU#8R*
%1<B5a*'BT7l(gWIUj+Xj3[/U/^.t6(:"1ZY5V/>u5*NjS4Uo,)QV$mK>i*kY/"L?@_jSV$lkF\`VZMQK>.X#r5@uF.AO*IGjhh+e
%X:+Pd(j66Q>^O,W-ZDNr]iCTTBKtkUH98ZQJe)j3+Gq.g"<3:R;AP>qB*`PWDT<ka.jl\aKnp%0O?+bRNuWo0n3fR]O@&=0*-[5!
%K+ji4UPN<1JO[dkOpFiO.YebeOCXek/;>Dm3("<5Jau-&aiMo/6q>lh-rj(tQ4skHEP*`lQ?0o@nOT3YMo]@j`MCR<R`>H*.#;A.
%0g@$B("HbOe=B%=p746W/`$1q-=UX7%Y5UJ$0.fpU5=N%i3L8&OMhhFV$TO"Z:%7uKaHGS5Y]abGX-,3;DPCeA2^R,KOe=!_*ipo
%4?@PNN#b'P=;i/f"]Ni@*ANY1Ht\W(p_OjFTbZT9bmg46Bk#2[JBZ8'%+I%W7aN:=KuQUr(6aTkRL!r@(0glp#E^:+:db]>.-uYC
%C^>un+e+*sGfV5'#i^P/MJ!iNkZo&lZNX2O->Ye%0sVUYe:i4t5o_f2XkV7+K-ltQECe!7SD'>jj@LKdStmLFk&^qr-&.Y+Z4%L)
%5tYU<Cac%]#6EBZ3)E`ji>SN+3O'g;'pNl8lbAOgDC<Y+lTIQ7PRc3aXODqo(]k-)&55Mt&D,3ZO8ui-n/[-1``Wjn&mf%`i\1KP
%^-SZM=&<p=OCt%?fa3nk_]//gm5W*2Q%KD09*7(:O!?HnU@gPV6T5m$Gp9O7UdSa?(YjL+$6j^lKM526d0Rn:VI@gu_[VY\_+O66
%.aM8&ne6ntL/r"#(CmPT%4P=&9j34Y50ZZO<-aM>JgMmL&Jp./ddL_XEeomA&PQ,gQ,7&&+@q9s75?ep3427H5UBqbX\"OcgF4-`
%8Y'#h!nL+KW6m=9FfYi[0S`XJ"aE0FYXG/r?kQ_POL,b>?UC$OE3<3d+'DEK/&K^6ZlJTp(W5.0(WTpUm<OO(T,+/B->4KD?k_[g
%#i])jp0FlVMN5[u->!T4iK2ReX8qh0&.WAb3;T9,.1eFo&I8r!)!\Va:rG&B+\!kh&7ZQmEI;4%`:nfr>A002H-"l/A0Qoni'kp3
%=e^q4?$(4up?3nde%+-U,(WK=*T8\]'M`*CT4aqkC*O3YQ7%8,C_VJ8cCILNe<je9@:bo=>KFAu%k<K(4F9in3.tG;'NPhQ'MOcf
%C&LB&+O+cEV6Ej[,3osf:M0>D8-l(QG9T=!YRIadnmO%O(SHnr+N1bP'G!Q5=,2,BOeBanFGNtdmZ]$Ur,SFQ@e>)2-ao$f$,JIm
%$mJ!h@2[Fu-m.l+X:+TlZ7*Ytk7l5rLRsc!!X4L4ldAms(N=3o>H(/U@qD7D77Cq9SOfCrb5_nu+1@>T!?*Bp6@=,Tl1BT[YgbR^
%$V=97RR-b#)YI#c1ed;q#:p3L344MYOpk'm>R?Z##XUl#K*fp<\.+Y`,T7Z@+u^X3cU]GCb,F_oOCoLBXk;OAAsik2U'X+24Z\!>
%+dRd[H]k(l8FKAR!`opG\D3JVFX,s4m;[#K`Bks3ih6__H+'9l3JbnM,Dh)"`]9Xb5Z;-NM^NS2lN664Lkd275mi=cPHcj]``j0\
%#[.gMF?E^Kaq,*&a+G)XU/O,LJ;p(&1XWE=VQo?nVOaRrpKMIYMT-[gEeW"a5u:*XQWc2mYS"/\Co<MeB[*UlE@'CiXWYqJ?B=S<
%"eadQh^s4_Tj*bOKl6=*$XbF)aBa8r'XQ7OIuE^pAft=_ecM7)9pFYk;6fOc#-&Tuj",!^?8!Qu2p"$<lOf83c1F$tG'7WS$?kPA
%cI8$1'pOeu@<."HYa`KVE5LH8D'`[670Fu[,-EOY(a-o+bp#,g9H\Hr30Bk:l886G]36._:WDuUqUblBA6]n1*%:p^A3.&KUkBPV
%W@+0)M]$NP(<R1a6p93qE@h62NfZCRnA6TL_uUo$5hI.`p>dg.$p`NLJfl+:?=53IYSkOt#^uYRONJ:D]laXZ.niEoG1IdlLCF54
%N^_eCK\<b4K8a&fcl:G"+kIjr:bUX\<<4@)CCn\nb6oj,#ah)dK@"tA;'=I5oR<[Didh5F%>).C'G0?Yf!GVn#L<05*5EmD+oXI.
%gP!'d!,6*EJTrBE)l+%]=aSL7VZo,EKID%G3?[^j4Wk:#8lC<oVfY4Y"m!6#ir?d%X)!^T#_MLHrJ,_3,UAOrDnffQTEH2B#;OjX
%ILCpROU^j&80YMBI<ML"Wd;[FM'#("A6QZ(>rs,e;qEh7/]EJ:[BA=pJ=V,?L93\CR=I2Wrs7jScbe[!'EUYeH9#2]+K;UQ3Pu;[
%^d+e/^#N(>$A$$_&-[RVgt\ZEI/b;BNtMIuP(5dt.o9@+gZDFJ%gNS=`k(Dt@j;-:7W\B43>+EO@\\_5GRgr!<&b.4#A=[gnQ-15
%0Ne*X*`!/d";D4aJNenB0T,Y#Ne!&hl3Jg_4/(Z+b3@I>7?68Vil.i@d%q&p2Ze1D+_N%l5t=I9)1t>.@al"RJnPUeM#B2KNL3=)
%DF$ZQ=G_"ak[bmT_jU/$"Y(+c)![A4a$fu]D,g^J%"]N/gCQsmV*ks+_1^/`9-A=I(P*Xh%JoipJfnA0[0Mn$64F@AO*Ujt`^1cd
%D]fde;BcDu@7#L/-,9N/7:8]4K0HGf&B)bcp0c%F5R]>34b4nhJM"g46#&T[6kUg[QnTCSQG?/pkoreKPW.gdq?K=!*!UgFj]R-O
%Qo%W8Qrt76I2'GI<.%;p,d;q.!E,3`"%X5Z-05U4biPll3Rf*D3C%&(!U9tB)%17(rX;]rW?dXS07-nq,jBq@?h?]G+tYYK,tK:8
%'G?88>l>4q)c0b'88oT^E"\F&OFa*e8E;'H%TIGK,a-N[[%UJF8"eZd>(jn\Zlq)(56U&%nD9ol[uG@RHE8\TZ!rl_W&RVmXcu@#
%j%^[J3DQReUse5>V$Umlm>9o!Nu(1BV[:JfA0DS=/380sO=>gE%iI?!af(@n@W.!\SWIjpq^FpkfUF=,aK+FDFeG&\PeB*0X:l5%
%r=lZYhTVAJ,q9C(E@W;t\-Oht="tC:\AiLl,HcYIF3&'U(j!5%o!5B.pafK-?9qg*0a]rrE'l("I%*NU[+Hdhj=WG]M1hE8U.+G&
%PW%UQCM@3B4Vn_e[1:lk?P3TJ8(JG6R#4IAU>eEQ[o+CV*?6DJ9;rQ7k>"u/:b3k)q(rr1Nm_=fEoABEmZ@Q:VtGp6a&Xnb+Tk4`
%)+c$ogXn\q*jgVj!gA&rVj#p3?2#S,-aF"d79<%H4i>/j+;BJ;N=n=sZn<Xc5C;`>*MjURViqh4:uHt6M,FtL6t/t[b+`=5#&JA[
%r#5*bqoZcS,"@W5%#GX]$T[dHD5/a,)-UbqYk9t-6_#40]TI,#Jdc.`(W%Lq`U."X')6RO+U"!9?J((J,u6@.cfBp`jNV=1WfA8*
%Z4:R50653;5j;QjBulfr9I&QML[bGBiZu'Fb,RjJ3T9EVRh*P^5&$0TOW#r%6M.EQ\A;a?EDDArSOQ[CKG,nm>dfm>gR<6D5Y:j?
%@r5gsl,5r@';HmL`D+e&Fsu'F(=+"jfA5R/RPnHY=Z#KREHqa0gEo]4KM]3X50#L5p(0VfQ"DGu<+3S[irhclKSkZA3-&`<iKb+l
%Z_W^RUnpiq.[d*\g+TJRAH3ag@'N]iLU4<a-A7u-9do*=A/oRQ5gM,V-59Oojt0V3[,ABBS(U``GV6t.P,Tt_)sPbSq/&3DU;$E`
%Haa_P!;_r%a==ief>Ipr*a:OO7OVELcE\.s]SKp4ZYM$&nocbgZ!&`&9dO)bMa3.GIS2A$KRi^%#E0#.8MS"l$-t7^S)1@(9@h5!
%-OQ_^gLY(fZ_M/ebd%(,hnH'm2Z*8&;%Q.W>`VH,B(Fl5iK:GfYu<4C6*L?gpeY/9GJJrV$`<jaLW+Ij@'CQTHkBHjZgTL11RTd\
%&=)dGC%;7Xi=&hL==P)q0j"[[q+t8"+&pX`&kmR?=N_^e+tFr-35W$XFZqh6VmDpJ5u_`eZ!o&P'SOk4_QeDDZR?Ua+BX.nHml,h
%(!C"-!A9AcdP=!)g\h8@o:i\#b`TG`<M>B*C%;7Xi=&hL==P*][,n?gq++\o(H,A3GZWTGb>k$:SOtD3jF\<'(oBa'=62;aS-5"+
%P9Xr1,1P&uLst%_?aY#Bk[mN\Rb7<D<,n,/@cL`G)f;pPfa<XXk(D;K15:1<Ydem1^Z/9Y1:/3=V=WBZ:.>VhQ]Qi&90s+uU6h`0
%#HG:">$4J/?FC-OfoHN&7*!Uejb$6u0J4`#L,]NtD9,]`TAK[CQZb0MX+1`hSX,):Hq%u:eZ[AOK?a8KctT;%E_"0DWYCPs`i=Bn
%*1RKa"$82Rk]am0f48`l""P^Eoc17I<,n+j;QkCWZ:.DIBMu![`hd#:N,u]')<Z&)UGC`S31#OFJRE=N0(nd*_8'\uaotV\kW]D)
%'0h-&Z%L<4A\.!'fPi1:@uc;qFr7+3]]PD1-'/OP86NbOjWt2dE8hub7VK](Pqd)]rO=&<(CjDaK<Wc=*?F7s2j6_IEQhr)+32M.
%Bf1q,WUYQ*-n)MI;oRIJkG0,lPB&I5Z7@CG$_=kbd1oZW*V\^]IJPo&GL<;m:=XeQD9%%>/.[KO0>)RJIr$a'm(`C7ZY+2h6p(AR
%q=E*Gf1n1Sp6-9P3^Efi5MDui]Ck-(47/7b^nkT'=se&I_m;V/l5P(R9llnd2PIdiEXFLmrnl[kcRn[TqpUbPX/Bh3ipcJHo2?"l
%o#]_HnFCgP]D9j4qfdgna6UX`A8!ogcQ@&n51+=pFdF1tolKuiLXU,:2<c`k<NLQ2[Ghnbg)HAj%(;^CbM(H;%nkm?fe;%<ZcBJf
%+&5TQD(^=O4oY9Nq"At(D#`uO`Ui<c`*WABlZHdOq<n.)X5C[Sj7[7.e+'d:b7Ih%?7]e>?/)a1/T&+-9+%TOnE:Z^iQ;+d>Os^i
%gNAPCRrg<5=t:#)WH?jmNU&\-gFh.,b`hbU]C>0RCuO&cVY>+:GiJaI^RUmc>s05-G^R0\m6;WZcHfS0fsCY%iPjXPm9bX\e!$9u
%rSNCTrcl)(fKUA4YCG9]g`>fadYH*GS(eIqOriTbB4m9THZFH'%uqI^Pl~>
%AI9_PrivateDataEnd
